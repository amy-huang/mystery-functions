userid,fcnname,actionid,actiontype,time,input,output,quizq,actualoutput,result,finalguess,
"0","IsDag","0","eval_input","2020-04-03 14:59:28","inst myInst {
  Node = none
  edges = none
  }","true","","","","",""
"0","IsDag","1","eval_input","2020-04-03 14:59:33","inst myInst {
  Node = A
  edges = none
  }","true","","","","",""
"0","IsDag","2","eval_input","2020-04-03 14:59:39","inst myInst {
  Node = A + B
  edges = none
  }","true","","","","",""
"0","IsDag","3","eval_input","2020-04-03 14:59:46","inst myInst {
  Node = A + B + C
  edges = none
  }","true","","","","",""
"0","IsDag","4","eval_input","2020-04-03 14:59:58","inst myInst {
  Node = A + B + C
  edges = A->A
  }","false","","","","",""
"0","IsDag","5","eval_input","2020-04-03 15:00:03","inst myInst {
  Node = A + B + C
  edges = A->B
  }","true","","","","",""
"0","IsDag","6","eval_input","2020-04-03 15:00:10","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
  }","false","","","","",""
"0","IsDag","7","eval_input","2020-04-03 15:00:14","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
  }","true","","","","",""
"0","IsDag","8","eval_input","2020-04-03 15:00:20","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
  }","false","","","","",""
"0","IsDag","9","eval_input","2020-04-03 15:00:34","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + B->A
  }","false","","","","",""
"0","IsDag","10","eval_input","2020-04-03 15:01:05","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + A->D
  }","true","","","","",""
"0","IsDag","11","eval_input","2020-04-03 15:01:12","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + A->D + B->D
  }","true","","","","",""
"0","IsDag","12","eval_input","2020-04-03 15:01:20","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + A->D + B->D + A->C
  }","true","","","","",""
"0","IsDag","13","eval_input","2020-04-03 15:01:26","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + A->D + B->D + A->C + C->C
  }","false","","","","",""
"0","IsDag","14","quiz_answer","2020-04-03 15:01:54","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"0","IsDag","15","quiz_answer","2020-04-03 15:01:58","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"0","IsDag","16","quiz_answer","2020-04-03 15:02:02","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"0","IsDag","17","quiz_answer","2020-04-03 15:02:09","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"0","IsDag","18","quiz_answer","2020-04-03 15:02:14","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"0","IsDag","19","quiz_answer","2020-04-03 15:02:23","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"0","IsDag","20","quiz_answer","2020-04-03 15:02:27","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"0","IsDag","21","quiz_answer","2020-04-03 15:02:33","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"0","IsDag","22","final_answer","2020-04-03 15:02:35","","","","","","The predicate checks whether the given graph is acyclic.",""
"0","ThreeCycle","23","eval_input","2020-04-03 15:03:06","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + A->D + B->D + A->C + C->C
  }","false","","","","",""
"0","ThreeCycle","24","eval_input","2020-04-03 15:04:33","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"0","ThreeCycle","25","eval_input","2020-04-03 15:05:35","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"0","ThreeCycle","26","eval_input","2020-04-03 15:05:48","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"0","ThreeCycle","27","eval_input","2020-04-03 15:05:53","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"0","ThreeCycle","28","eval_input","2020-04-03 15:06:01","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"0","ThreeCycle","29","eval_input","2020-04-03 15:06:08","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"0","ThreeCycle","30","eval_input","2020-04-03 15:06:13","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"0","ThreeCycle","31","eval_input","2020-04-03 15:06:21","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"0","ThreeCycle","32","eval_input","2020-04-03 15:06:31","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"0","ThreeCycle","33","eval_input","2020-04-03 15:06:37","inst myInst {
  Node = A + B
  edges = A->A + B->B + A->B + B->A
}","false","","","","",""
"0","ThreeCycle","34","eval_input","2020-04-03 15:06:51","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"0","ThreeCycle","35","eval_input","2020-04-03 15:07:00","inst myInst {
  Node = A + B + C + D
  edges = A->C
}","false","","","","",""
"0","ThreeCycle","36","eval_input","2020-04-03 15:07:26","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + B->A + C->B + D->C
}","true","","","","",""
"0","ThreeCycle","37","eval_input","2020-04-03 15:07:39","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + B->A + C->B
}","true","","","","",""
"0","ThreeCycle","38","eval_input","2020-04-03 15:08:16","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + B->A
}","true","","","","",""
"0","ThreeCycle","39","eval_input","2020-04-03 15:08:21","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"0","ThreeCycle","40","eval_input","2020-04-03 15:08:25","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C
}","false","","","","",""
"0","ThreeCycle","41","eval_input","2020-04-03 15:08:31","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->B
}","false","","","","",""
"0","ThreeCycle","42","eval_input","2020-04-03 15:08:42","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->B
}","true","","","","",""
"0","ThreeCycle","43","eval_input","2020-04-03 15:08:48","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"0","ThreeCycle","44","eval_input","2020-04-03 15:09:00","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + C->C
}","true","","","","",""
"0","ThreeCycle","45","eval_input","2020-04-03 15:09:15","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C + C->A
}","true","","","","",""
"0","ThreeCycle","46","eval_input","2020-04-03 15:09:28","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"0","ThreeCycle","47","eval_input","2020-04-03 15:09:32","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + E->F + F->D
}","false","","","","",""
"0","ThreeCycle","48","eval_input","2020-04-03 15:09:46","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"0","ThreeCycle","49","eval_input","2020-04-03 15:09:51","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"0","ThreeCycle","50","eval_input","2020-04-03 15:09:56","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","false","","","","",""
"0","ThreeCycle","51","eval_input","2020-04-03 15:09:57","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","false","","","","",""
"0","ThreeCycle","52","eval_input","2020-04-03 15:10:03","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A + F->D
}","true","","","","",""
"0","IsDag","0","eval_input","2020-04-03 19:32:28","inst myInst {
  Node = A
  edges = A->A
  }","false","","","","",""
"0","IsDag","1","eval_input","2020-04-03 19:32:33","inst myInst {
  Node = A + B
  edges = A->B
  }","true","","","","",""
"0","IsDag","2","quiz_answer","2020-04-03 19:32:47","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"0","IsDag","3","quiz_answer","2020-04-03 19:32:51","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"0","IsDag","4","quiz_answer","2020-04-03 19:32:56","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"0","IsDag","5","quiz_answer","2020-04-03 19:33:02","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"0","IsDag","6","quiz_answer","2020-04-03 19:33:05","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"0","IsDag","7","quiz_answer","2020-04-03 19:33:09","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"0","IsDag","8","quiz_answer","2020-04-03 19:33:15","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"0","IsDag","9","quiz_answer","2020-04-03 19:33:19","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"0","IsDag","10","final_answer","2020-04-03 19:33:21","","","","","","is dag",""
"0","ThreeCycle","11","eval_input","2020-04-03 19:33:34","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
  }","true","","","","",""
"0","ThreeCycle","12","eval_input","2020-04-03 19:33:37","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
  }","false","","","","",""
"0","ThreeCycle","13","quiz_answer","2020-04-03 19:34:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"0","ThreeCycle","14","quiz_answer","2020-04-03 19:34:26","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"0","ThreeCycle","15","quiz_answer","2020-04-03 19:34:28","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"0","ThreeCycle","16","quiz_answer","2020-04-03 19:34:32","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"0","ThreeCycle","17","quiz_answer","2020-04-03 19:34:36","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"0","ThreeCycle","18","quiz_answer","2020-04-03 19:34:39","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"0","ThreeCycle","19","quiz_answer","2020-04-03 19:34:43","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"0","ThreeCycle","20","quiz_answer","2020-04-03 19:34:47","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"0","ThreeCycle","21","final_answer","2020-04-03 19:34:48","","","","","","has three distinct nodes which form a cycle",""
"0","IsBipartite","22","eval_input","2020-04-03 19:35:17","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
  }","false","","","","",""
"0","IsBipartite","23","eval_input","2020-04-03 19:35:25","inst myInst {
  Node = none
  edges = none
  }","true","","","","",""
"0","IsBipartite","24","eval_input","2020-04-03 19:35:28","inst myInst {
  Node = A
  edges = none
  }","true","","","","",""
"0","IsBipartite","25","eval_input","2020-04-03 19:35:31","inst myInst {
  Node = A + B
  edges = none
  }","true","","","","",""
"0","IsBipartite","26","eval_input","2020-04-03 19:35:33","inst myInst {
  Node = A + B + C
  edges = none
  }","true","","","","",""
"0","IsBipartite","27","eval_input","2020-04-03 19:35:35","inst myInst {
  Node = A + B + C + D
  edges = none
  }","true","","","","",""
"0","IsBipartite","28","eval_input","2020-04-03 19:35:41","inst myInst {
  Node = A
  edges = A->A
  }","false","","","","",""
"0","IsBipartite","29","eval_input","2020-04-03 19:35:47","inst myInst {
  Node = A + B
  edges = A->B
  }","true","","","","",""
"0","IsBipartite","30","eval_input","2020-04-03 19:35:51","inst myInst {
  Node = A + B
  edges = A->A
  }","false","","","","",""
"0","IsBipartite","31","eval_input","2020-04-03 19:35:57","inst myInst {
  Node = A + B
  edges = A->B + B->A
  }","true","","","","",""
"0","IsBipartite","32","eval_input","2020-04-03 19:36:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
  }","false","","","","",""
"0","IsBipartite","33","eval_input","2020-04-03 19:36:35","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  }","true","","","","",""
"0","IsBipartite","34","eval_input","2020-04-03 19:36:37","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->B
  }","false","","","","",""
"0","IsBipartite","35","eval_input","2020-04-03 19:36:47","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->C
  }","false","","","","",""
"0","IsBipartite","36","eval_input","2020-04-03 19:36:51","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->B
  }","true","","","","",""
"0","IsBipartite","37","quiz_answer","2020-04-03 19:37:13","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"0","IsBipartite","38","quiz_answer","2020-04-03 19:37:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"0","IsBipartite","39","quiz_answer","2020-04-03 19:37:42","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"0","IsBipartite","40","quiz_answer","2020-04-03 19:37:45","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"0","IsBipartite","41","quiz_answer","2020-04-03 19:37:51","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"0","IsBipartite","42","quiz_answer","2020-04-03 19:37:55","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"0","IsBipartite","43","quiz_answer","2020-04-03 19:37:59","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"0","IsBipartite","44","quiz_answer","2020-04-03 19:38:03","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"0","IsBipartite","45","quiz_answer","2020-04-03 19:38:07","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"0","IsBipartite","46","final_answer","2020-04-03 19:38:08","","","","","","has NO odd-cycle",""
"1","IsBipartite","0","eval_input","2020-04-06 10:16:24","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"1","IsBipartite","1","eval_input","2020-04-06 10:16:52","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"1","IsBipartite","2","eval_input","2020-04-06 10:17:21","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"1","IsBipartite","3","eval_input","2020-04-06 10:17:51","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","true","","","","",""
"1","IsBipartite","4","eval_input","2020-04-06 10:18:06","inst myInst {
  Node = A
       + B
  edges = A->B + B->A
}","true","","","","",""
"1","IsBipartite","5","eval_input","2020-04-06 10:18:33","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A 
}","true","","","","",""
"1","IsBipartite","6","eval_input","2020-04-06 10:19:11","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C 
}","true","","","","",""
"1","IsBipartite","7","eval_input","2020-04-06 10:19:57","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"1","IsBipartite","8","eval_input","2020-04-06 10:20:30","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A + A->C
}","false","","","","",""
"1","IsBipartite","9","eval_input","2020-04-06 10:21:06","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"1","IsBipartite","10","eval_input","2020-04-06 10:22:37","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + A->C + C->D + C->E + E->D
}","true","","","","",""
"1","IsBipartite","11","eval_input","2020-04-06 10:23:05","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + A->C + D->E + C->E + E->D
}","true","","","","",""
"1","IsBipartite","12","eval_input","2020-04-06 10:23:52","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + A->C + D->C + C->E + E->D
}","false","","","","",""
"1","IsBipartite","13","quiz_answer","2020-04-06 10:25:44","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"1","IsBipartite","14","eval_input","2020-04-06 10:26:22","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"1","IsBipartite","15","eval_input","2020-04-06 10:28:05","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"1","IsBipartite","16","eval_input","2020-04-06 10:28:25","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","true","","","","",""
"1","IsBipartite","17","quiz_answer","2020-04-06 10:29:05","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"1","IsBipartite","18","quiz_answer","2020-04-06 10:29:14","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"1","IsBipartite","19","quiz_answer","2020-04-06 10:29:25","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"1","IsBipartite","20","quiz_answer","2020-04-06 10:29:59","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"1","IsBipartite","21","quiz_answer","2020-04-06 10:30:20","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"1","IsBipartite","22","quiz_answer","2020-04-06 10:30:30","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"1","IsBipartite","23","quiz_answer","2020-04-06 10:30:57","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"1","IsBipartite","24","quiz_answer","2020-04-06 10:31:12","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"1","IsBipartite","25","final_answer","2020-04-06 10:31:15","","","","","","True if and only if graph does not contain an odd-sized cycle",""
"1","ThreeCycle","26","eval_input","2020-04-06 10:32:34","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"1","ThreeCycle","27","eval_input","2020-04-06 10:32:45","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"1","ThreeCycle","28","eval_input","2020-04-06 10:33:02","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","false","","","","",""
"1","ThreeCycle","29","eval_input","2020-04-06 10:33:15","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"1","ThreeCycle","30","eval_input","2020-04-06 10:33:34","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A 
}","false","","","","",""
"1","ThreeCycle","31","eval_input","2020-04-06 10:34:08","inst myInst {
  Node = A + B + C + D + E + F + G
  edges = A->B + B->C + C->A
}","true","","","","",""
"1","ThreeCycle","32","eval_input","2020-04-06 10:34:18","inst myInst {
  Node = A + B + C + D + E + F + G
  edges = A->B + B->C + C->A + E->F
}","true","","","","",""
"1","ThreeCycle","33","eval_input","2020-04-06 10:34:51","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"1","ThreeCycle","34","eval_input","2020-04-06 10:35:33","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A + D->C 
}","false","","","","",""
"1","ThreeCycle","35","eval_input","2020-04-06 10:35:41","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A + A->C 
}","true","","","","",""
"1","ThreeCycle","36","eval_input","2020-04-06 10:36:52","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"1","ThreeCycle","37","eval_input","2020-04-06 10:37:21","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A + C->A
}","true","","","","",""
"1","ThreeCycle","38","eval_input","2020-04-06 10:38:00","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"1","ThreeCycle","39","eval_input","2020-04-06 10:38:22","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A + A->C
}","true","","","","",""
"1","ThreeCycle","40","eval_input","2020-04-06 10:38:37","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A + A->C
}","true","","","","",""
"1","ThreeCycle","41","quiz_answer","2020-04-06 10:39:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"1","ThreeCycle","42","quiz_answer","2020-04-06 10:39:43","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"1","ThreeCycle","43","quiz_answer","2020-04-06 10:39:49","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"1","ThreeCycle","44","quiz_answer","2020-04-06 10:40:06","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"1","ThreeCycle","45","quiz_answer","2020-04-06 10:40:13","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"1","ThreeCycle","46","quiz_answer","2020-04-06 10:40:21","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"1","ThreeCycle","47","quiz_answer","2020-04-06 10:40:31","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"1","ThreeCycle","48","quiz_answer","2020-04-06 10:40:43","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"1","ThreeCycle","49","final_answer","2020-04-06 10:40:46","","","","","","True if and only if graph contains a three ring",""
"1","IsDag","50","eval_input","2020-04-06 10:41:09","inst myInst {
  Node = A 
  edges = A->A
}","false","","","","",""
"1","IsDag","51","eval_input","2020-04-06 10:41:36","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"1","IsDag","52","eval_input","2020-04-06 10:41:56","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"1","IsDag","53","eval_input","2020-04-06 10:42:03","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"1","IsDag","54","eval_input","2020-04-06 10:42:24","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"1","IsDag","55","eval_input","2020-04-06 10:42:33","inst myInst {
  Node = A + B + C
  edges = A->B + B->C 
}","true","","","","",""
"1","IsDag","56","eval_input","2020-04-06 10:43:02","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + C->B
}","true","","","","",""
"1","IsDag","57","quiz_answer","2020-04-06 10:43:38","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"1","IsDag","58","quiz_answer","2020-04-06 10:43:43","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"1","IsDag","59","quiz_answer","2020-04-06 10:43:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"1","IsDag","60","quiz_answer","2020-04-06 10:43:59","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"1","IsDag","61","quiz_answer","2020-04-06 10:44:08","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"1","IsDag","62","quiz_answer","2020-04-06 10:44:21","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"1","IsDag","63","quiz_answer","2020-04-06 10:44:31","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"1","IsDag","64","quiz_answer","2020-04-06 10:44:43","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"1","IsDag","65","final_answer","2020-04-06 10:44:46","","","","","","True iff acyclic",""
"2","IsDag","0","eval_input","2020-04-06 11:11:06","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"2","IsDag","1","eval_input","2020-04-06 11:12:55","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"2","IsDag","2","eval_input","2020-04-06 11:13:02","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"2","IsDag","3","eval_input","2020-04-06 11:13:10","inst myInst {
  Node = A+B
  edges = A->B
}","true","","","","",""
"3","ThreeCycle","0","eval_input","2020-04-06 11:13:13","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"2","IsDag","4","eval_input","2020-04-06 11:13:17","inst myInst {
  Node = A+B+C
  edges = A->B
}","true","","","","",""
"2","IsDag","5","eval_input","2020-04-06 11:13:26","inst myInst {
  Node = A+B+C
  edges = A->C
}","true","","","","",""
"3","ThreeCycle","1","eval_input","2020-04-06 11:13:31","inst myInst {
  Node = A
       + B
  edges = none
}","false","","","","",""
"2","IsDag","6","eval_input","2020-04-06 11:13:32","inst myInst {
  Node = A+B+C
  edges = A->B+B->A
}","false","","","","",""
"3","ThreeCycle","2","eval_input","2020-04-06 11:13:36","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"2","IsDag","7","eval_input","2020-04-06 11:13:36","inst myInst {
  Node = A+B+C
  edges = A->B+B->C
}","true","","","","",""
"3","ThreeCycle","3","eval_input","2020-04-06 11:13:41","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"3","ThreeCycle","4","eval_input","2020-04-06 11:13:51","inst myInst {
  Node = A
        + B
  edges = A -> A
}","false","","","","",""
"3","ThreeCycle","5","eval_input","2020-04-06 11:13:54","inst myInst {
  Node = A
        + B
  edges = A -> B
}","false","","","","",""
"2","IsDag","8","eval_input","2020-04-06 11:14:03","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C
}","true","","","","",""
"3","ThreeCycle","6","eval_input","2020-04-06 11:14:06","inst myInst {
  Node = A
        + B
  edges = A -> B
        + B -> A
}","false","","","","",""
"3","ThreeCycle","7","eval_input","2020-04-06 11:14:11","inst myInst {
  Node = A
        + B
        + C
  edges = A -> B
        + B -> A
}","false","","","","",""
"3","ThreeCycle","8","eval_input","2020-04-06 11:14:15","inst myInst {
  Node = A
        + B
        + C
  edges = A -> B
        
}","false","","","","",""
"2","IsDag","9","eval_input","2020-04-06 11:14:18","inst myInst {
  Node = A+B+C+D
  edges = A->A
}","false","","","","",""
"2","IsDag","10","eval_input","2020-04-06 11:14:56","inst myInst {
  Node = A+B+C+D
  edges = A->A
}","false","","","","",""
"3","ThreeCycle","9","eval_input","2020-04-06 11:15:08","inst myInst {
  Node = A
        + B
        + C
  edges = A -> B
        + B -> C
        + B -> A
}","false","","","","",""
"3","ThreeCycle","10","eval_input","2020-04-06 11:15:15","inst myInst {
  Node = A
        + B
        + C
  edges = none
}","false","","","","",""
"2","IsDag","11","quiz_answer","2020-04-06 11:15:19","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"3","ThreeCycle","11","eval_input","2020-04-06 11:15:22","inst myInst {
  Node = A
        + B
        + C
  edges = A -> A
}","false","","","","",""
"2","IsDag","12","quiz_answer","2020-04-06 11:15:27","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"2","IsDag","13","quiz_answer","2020-04-06 11:15:32","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"3","ThreeCycle","12","eval_input","2020-04-06 11:15:38","inst myInst {
  Node = A
        + B
        + C
  edges = B -> B
}","false","","","","",""
"3","ThreeCycle","13","eval_input","2020-04-06 11:15:45","inst myInst {
  Node = A
        + B
        + C
  edges = none
}","false","","","","",""
"3","ThreeCycle","14","eval_input","2020-04-06 11:15:48","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"3","ThreeCycle","15","eval_input","2020-04-06 11:15:56","inst myInst {
  Node = A + B + C + D
  edges = none
}","false","","","","",""
"3","ThreeCycle","16","eval_input","2020-04-06 11:16:02","inst myInst {
  Node = A + B + C + D
  edges = A -> C
}","false","","","","",""
"3","ThreeCycle","17","eval_input","2020-04-06 11:16:03","inst myInst {
  Node = A + B + C + D
  edges = A -> C
}","false","","","","",""
"3","ThreeCycle","18","eval_input","2020-04-06 11:16:04","inst myInst {
  Node = A + B + C + D
  edges = A -> C
}","false","","","","",""
"3","ThreeCycle","19","eval_input","2020-04-06 11:16:08","inst myInst {
  Node = A + B + C + D
  edges = A -> C + C -> A
}","false","","","","",""
"3","ThreeCycle","20","eval_input","2020-04-06 11:16:23","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C
}","false","","","","",""
"3","ThreeCycle","21","eval_input","2020-04-06 11:16:24","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C
}","false","","","","",""
"3","ThreeCycle","22","eval_input","2020-04-06 11:16:25","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C
}","false","","","","",""
"3","ThreeCycle","23","eval_input","2020-04-06 11:16:32","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"3","ThreeCycle","24","eval_input","2020-04-06 11:16:36","inst myInst {
  Node = A + B
  edges = A -> B + B -> B
}","false","","","","",""
"3","ThreeCycle","25","eval_input","2020-04-06 11:16:44","inst myInst {
  Node = A + B
  edges = A -> B + A -> A
}","false","","","","",""
"3","ThreeCycle","26","eval_input","2020-04-06 11:17:16","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A + A -> C
}","false","","","","",""
"3","ThreeCycle","27","eval_input","2020-04-06 11:17:22","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A + A -> C + C -> A
}","false","","","","",""
"3","ThreeCycle","28","eval_input","2020-04-06 11:17:36","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A 
        + A -> C + C -> A
        + B -> C + C -> B
}","true","","","","",""
"2","IsDag","14","quiz_answer","2020-04-06 11:17:43","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"2","IsDag","15","quiz_answer","2020-04-06 11:17:57","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"3","ThreeCycle","29","eval_input","2020-04-06 11:18:11","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A 
        + A -> C + C -> A
        + B -> C + C -> B
        + A -> D + D -> A
        + B -> D + D -> B
        + C -> D + D -> C
}","true","","","","",""
"2","IsDag","16","quiz_answer","2020-04-06 11:18:26","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"3","ThreeCycle","30","eval_input","2020-04-06 11:18:44","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"3","ThreeCycle","31","eval_input","2020-04-06 11:18:54","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"3","ThreeCycle","32","eval_input","2020-04-06 11:19:14","inst myInst {
  Node = A + B
  edges = A -> B
}","false","","","","",""
"3","ThreeCycle","33","eval_input","2020-04-06 11:19:32","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","true","","","","",""
"3","ThreeCycle","34","eval_input","2020-04-06 11:19:43","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A
}","false","","","","",""
"2","IsDag","17","quiz_answer","2020-04-06 11:19:45","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"3","ThreeCycle","35","eval_input","2020-04-06 11:19:57","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> D + D -> A
}","true","","","","",""
"2","IsDag","18","quiz_answer","2020-04-06 11:19:57","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"2","IsDag","19","final_answer","2020-04-06 11:20:00","","","","","","returns if the given graph is acyclic",""
"3","ThreeCycle","36","eval_input","2020-04-06 11:20:21","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","false","","","","",""
"3","ThreeCycle","37","eval_input","2020-04-06 11:20:33","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
         + C -> A
}","true","","","","",""
"2","ThreeCycle","20","eval_input","2020-04-06 11:20:49","inst myInst {
  Node = A+B+C+D
  edges = A->A
}","false","","","","",""
"2","ThreeCycle","21","eval_input","2020-04-06 11:21:09","inst myInst {
  Node = A+B+C+D
  edges = none
  
}","false","","","","",""
"2","ThreeCycle","22","eval_input","2020-04-06 11:21:15","inst myInst {
  Node = A
  edges = none
  
}","false","","","","",""
"2","ThreeCycle","23","eval_input","2020-04-06 11:21:28","inst myInst {
  Node = A+B
  edges = A->B
  
}","false","","","","",""
"3","ThreeCycle","38","quiz_answer","2020-04-06 11:27:30","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"3","ThreeCycle","39","quiz_answer","2020-04-06 11:27:35","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"3","ThreeCycle","40","quiz_answer","2020-04-06 11:27:39","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"3","ThreeCycle","41","quiz_answer","2020-04-06 11:27:51","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"3","ThreeCycle","42","quiz_answer","2020-04-06 11:27:58","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"3","ThreeCycle","43","quiz_answer","2020-04-06 11:28:03","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"3","ThreeCycle","44","quiz_answer","2020-04-06 11:28:09","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"3","ThreeCycle","45","quiz_answer","2020-04-06 11:28:15","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"3","ThreeCycle","46","final_answer","2020-04-06 11:28:18","","","","","","--graph requires a cycle of three elements
some a,b,c: Node |  (b + c) in (a.edges + edges.a) and (b+c) in (a.^edges) and (b in (c.edges or (edges.c))",""
"3","IsDag","47","eval_input","2020-04-06 11:28:41","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
         + C -> A
}","false","","","","",""
"3","IsDag","48","eval_input","2020-04-06 11:28:49","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"3","IsDag","49","eval_input","2020-04-06 11:28:56","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"3","IsDag","50","eval_input","2020-04-06 11:29:00","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"3","IsDag","51","eval_input","2020-04-06 11:29:05","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"3","IsDag","52","eval_input","2020-04-06 11:29:12","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"3","IsDag","53","eval_input","2020-04-06 11:29:17","inst myInst {
  Node = A + B
  edges = A -> B + B-> A
}","false","","","","",""
"3","IsDag","54","eval_input","2020-04-06 11:29:23","inst myInst {
  Node = A + B + C
  edges = A -> B
}","true","","","","",""
"3","IsDag","55","eval_input","2020-04-06 11:29:29","inst myInst {
  Node = A + B + C
  edges = A -> B + B-> C
}","true","","","","",""
"3","IsDag","56","eval_input","2020-04-06 11:29:33","inst myInst {
  Node = A + B + C
  edges = A -> B + B-> C + C -> A
}","false","","","","",""
"3","IsDag","57","eval_input","2020-04-06 11:29:39","inst myInst {
  Node = A + B + C
  edges = A -> B + B-> C + C -> B
}","false","","","","",""
"3","IsDag","58","eval_input","2020-04-06 11:29:43","inst myInst {
  Node = A + B + C
  edges = A -> B + B-> C
}","true","","","","",""
"3","IsDag","59","eval_input","2020-04-06 11:30:18","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B-> C + D -> A + A -> C 
}","true","","","","",""
"3","IsDag","60","eval_input","2020-04-06 11:30:27","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B-> C + D -> A + A -> C + A -> A
}","false","","","","",""
"3","IsDag","61","quiz_answer","2020-04-06 11:30:38","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"3","IsDag","62","quiz_answer","2020-04-06 11:30:42","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"3","IsDag","63","quiz_answer","2020-04-06 11:30:46","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"3","IsDag","64","quiz_answer","2020-04-06 11:30:53","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"2","ThreeCycle","24","eval_input","2020-04-06 11:30:53","inst myInst {
  Node = none
  edges = none
  
}","false","","","","",""
"3","IsDag","65","quiz_answer","2020-04-06 11:31:02","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"2","ThreeCycle","25","eval_input","2020-04-06 11:31:02","inst myInst {
  Node = A
  edges = A->A
  
}","false","","","","",""
"3","IsDag","66","quiz_answer","2020-04-06 11:31:09","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"2","ThreeCycle","26","eval_input","2020-04-06 11:31:12","inst myInst {
  Node = A+B
  edges = A->B+B->A
  
}","false","","","","",""
"3","IsDag","67","quiz_answer","2020-04-06 11:31:13","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"3","IsDag","68","quiz_answer","2020-04-06 11:31:18","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"3","IsDag","69","final_answer","2020-04-06 11:31:19","","","","","","graph is acyclic",""
"2","ThreeCycle","27","eval_input","2020-04-06 11:31:22","inst myInst {
  Node = A+B
  edges = A->B+B->A+A->A+B->B
  
}","false","","","","",""
"3","IsBipartite","70","eval_input","2020-04-06 11:31:32","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B-> C + D -> A + A -> C + A -> A
}","false","","","","",""
"3","IsBipartite","71","eval_input","2020-04-06 11:31:36","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"3","IsBipartite","72","eval_input","2020-04-06 11:31:42","inst myInst {
  Node = A + B + C + D
  edges =  A-> B
}","true","","","","",""
"3","IsBipartite","73","eval_input","2020-04-06 11:31:48","inst myInst {
  Node = A + B + C + D
  edges =  A-> B + B-> C
}","true","","","","",""
"3","IsBipartite","74","eval_input","2020-04-06 11:31:54","inst myInst {
  Node = A + B + C + D
  edges =  A-> B + B-> C + C -> D
}","true","","","","",""
"2","ThreeCycle","28","eval_input","2020-04-06 11:32:06","inst myInst {
  Node = A+B
  edges = A->B+B->A
  
}","false","","","","",""
"3","IsBipartite","75","eval_input","2020-04-06 11:32:07","inst myInst {
  Node = A + B + C + D
  edges =  A-> B + B-> C + C -> D + A -> D
}","true","","","","",""
"3","IsBipartite","76","eval_input","2020-04-06 11:32:17","inst myInst {
  Node = A
  edges =  none
}","true","","","","",""
"2","ThreeCycle","29","eval_input","2020-04-06 11:32:27","inst myInst {
  Node = A+B
  edges = A->B+B->A
  
}","false","","","","",""
"3","IsBipartite","77","eval_input","2020-04-06 11:32:32","inst myInst {
  Node = A
  edges =  A -> A
}","false","","","","",""
"3","IsBipartite","78","eval_input","2020-04-06 11:32:37","inst myInst {
  Node = A + B
  edges =  A -> B
}","true","","","","",""
"3","IsBipartite","79","eval_input","2020-04-06 11:32:43","inst myInst {
  Node = A + B
  edges =  A -> B + B -> A
}","true","","","","",""
"3","IsBipartite","80","eval_input","2020-04-06 11:33:14","inst myInst {
  Node = A + B
  edges =  A -> B + B -> A
}","true","","","","",""
"3","IsBipartite","81","eval_input","2020-04-06 11:33:20","inst myInst {
  Node = A + B
  edges =  A -> B + B -> A + B -> B
}","false","","","","",""
"3","IsBipartite","82","eval_input","2020-04-06 11:33:28","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> A
}","true","","","","",""
"3","IsBipartite","83","eval_input","2020-04-06 11:33:37","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> A + C -> A
}","true","","","","",""
"3","IsBipartite","84","eval_input","2020-04-06 11:33:43","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> A + C -> A + A -> C
}","true","","","","",""
"2","ThreeCycle","30","eval_input","2020-04-06 11:33:46","inst myInst {
  Node = A+B+C
  edges = A->B+B->A
  
}","false","","","","",""
"2","ThreeCycle","31","eval_input","2020-04-06 11:33:53","inst myInst {
  Node = A+B+C
  edges = A->B+B->C
  
}","false","","","","",""
"3","IsBipartite","85","eval_input","2020-04-06 11:33:53","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> A + C -> A + A -> C
       + B-> C
}","false","","","","",""
"3","IsBipartite","86","eval_input","2020-04-06 11:34:02","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> A + A -> C
       + B-> C
}","true","","","","",""
"3","IsBipartite","87","eval_input","2020-04-06 11:35:40","inst myInst {
  Node = A + B 
  edges =  A -> B 
}","true","","","","",""
"3","IsBipartite","88","eval_input","2020-04-06 11:35:44","inst myInst {
  Node = A + B 
  edges =  none
}","true","","","","",""
"3","IsBipartite","89","eval_input","2020-04-06 11:35:53","inst myInst {
  Node = A + B 
  edges =  A -> B
}","true","","","","",""
"3","IsBipartite","90","eval_input","2020-04-06 11:36:00","inst myInst {
  Node = A + B 
  edges =  A -> A
}","false","","","","",""
"3","IsBipartite","91","eval_input","2020-04-06 11:36:12","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> C
}","true","","","","",""
"3","IsBipartite","92","eval_input","2020-04-06 11:36:19","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> C + C -> A
}","false","","","","",""
"3","IsBipartite","93","eval_input","2020-04-06 11:36:27","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> C + C -> A + A -> C
}","false","","","","",""
"3","IsBipartite","94","eval_input","2020-04-06 11:37:56","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> C + B -> A + C -> B
}","true","","","","",""
"3","IsBipartite","95","eval_input","2020-04-06 11:38:18","inst myInst {
  Node = A + B + C
  edges =  A -> B + B -> C + B -> A + C -> B + A -> C
}","false","","","","",""
"2","ThreeCycle","32","eval_input","2020-04-06 11:38:37","inst myInst {
  Node = A+B+C
  edges = A->B
  
}","false","","","","",""
"2","ThreeCycle","33","eval_input","2020-04-06 11:38:45","inst myInst {
  Node = A+B+C
  edges = none
  
}","false","","","","",""
"2","ThreeCycle","34","eval_input","2020-04-06 11:38:52","inst myInst {
  Node = A
  edges = none
  
}","false","","","","",""
"2","ThreeCycle","35","eval_input","2020-04-06 11:38:58","inst myInst {
  Node = A
  edges = A->A
  
}","false","","","","",""
"3","IsBipartite","96","eval_input","2020-04-06 11:38:58","inst myInst {
  Node = A + B + C + D
  edges =  A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"2","ThreeCycle","36","eval_input","2020-04-06 11:39:14","inst myInst {
  Node = A+B+C
  edges = A->B+B->C+C->A
  
}","true","","","","",""
"3","IsBipartite","97","eval_input","2020-04-06 11:39:19","inst myInst {
  Node = A + B + C + D + E
  edges =  A -> B + B -> C + C -> D 
        + D -> E + E -> A
}","false","","","","",""
"3","IsBipartite","98","eval_input","2020-04-06 11:39:27","inst myInst {
  Node = A + B + C + D + E
  edges =  A -> B + B -> C + C -> D 
        + D -> A + A -> E
}","true","","","","",""
"2","ThreeCycle","37","eval_input","2020-04-06 11:39:30","inst myInst {
  Node = A
  edges = A->A
  
}","false","","","","",""
"3","IsBipartite","99","eval_input","2020-04-06 11:39:40","inst myInst {
  Node = A + B + C + D + E
  edges =  A -> B + B -> C + C -> D 
        + D -> A + A -> E + B -> E 
}","true","","","","",""
"2","ThreeCycle","38","eval_input","2020-04-06 11:39:50","inst myInst {
  Node = A+B+C
  edges = A->A+A->B+B->C+C->A
  
}","true","","","","",""
"2","ThreeCycle","39","eval_input","2020-04-06 11:39:58","inst myInst {
  Node = A+B+C+D
  edges = A->A+A->B+B->C+C->A
  
}","true","","","","",""
"3","IsBipartite","100","quiz_answer","2020-04-06 11:40:22","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"3","IsBipartite","101","quiz_answer","2020-04-06 11:40:26","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"3","IsBipartite","102","quiz_answer","2020-04-06 11:40:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"3","IsBipartite","103","quiz_answer","2020-04-06 11:40:35","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"2","ThreeCycle","40","quiz_answer","2020-04-06 11:40:40","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"3","IsBipartite","104","quiz_answer","2020-04-06 11:40:41","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"3","IsBipartite","105","quiz_answer","2020-04-06 11:40:45","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"2","ThreeCycle","41","quiz_answer","2020-04-06 11:40:45","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"3","IsBipartite","106","quiz_answer","2020-04-06 11:40:49","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"3","IsBipartite","107","quiz_answer","2020-04-06 11:40:52","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"3","IsBipartite","108","final_answer","2020-04-06 11:40:53","","","","","","evaluates to true iff there are no odd-numbered cycles (i.e. cycles of one node, three nodes, or five nodes)",""
"2","ThreeCycle","42","eval_input","2020-04-06 11:42:39","inst myInst {
  Node = A+B
  edges = A->B+B->A
  
}","false","","","","",""
"2","ThreeCycle","43","quiz_answer","2020-04-06 11:43:14","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"2","ThreeCycle","44","quiz_answer","2020-04-06 11:43:17","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"2","ThreeCycle","45","quiz_answer","2020-04-06 11:43:21","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"2","ThreeCycle","46","quiz_answer","2020-04-06 11:43:34","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"2","ThreeCycle","47","quiz_answer","2020-04-06 11:43:41","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"2","ThreeCycle","48","quiz_answer","2020-04-06 11:43:47","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"2","ThreeCycle","49","quiz_answer","2020-04-06 11:43:59","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","false","false","",""
"2","ThreeCycle","50","quiz_answer","2020-04-06 11:44:22","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"2","ThreeCycle","51","quiz_answer","2020-04-06 11:44:26","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"2","ThreeCycle","52","quiz_answer","2020-04-06 11:44:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"2","ThreeCycle","53","quiz_answer","2020-04-06 11:44:33","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"2","ThreeCycle","54","quiz_answer","2020-04-06 11:44:39","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"2","ThreeCycle","55","quiz_answer","2020-04-06 11:44:43","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"2","ThreeCycle","56","quiz_answer","2020-04-06 11:44:52","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"2","ThreeCycle","57","quiz_answer","2020-04-06 11:45:04","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"2","ThreeCycle","58","final_answer","2020-04-06 11:45:09","","","","","","returns true if the directed graph has a cycle of exactly 3 nodes",""
"2","IsBipartite","59","eval_input","2020-04-06 11:45:26","inst myInst {
  Node = A+B
  edges = A->B+B->A
  
}","true","","","","",""
"2","IsBipartite","60","eval_input","2020-04-06 11:45:35","inst myInst {
  Node = A
  edges = none
  
}","true","","","","",""
"2","IsBipartite","61","eval_input","2020-04-06 11:45:43","inst myInst {
  Node = none
  edges = none
  
}","true","","","","",""
"2","IsBipartite","62","eval_input","2020-04-06 11:46:45","inst myInst {
  Node = A
  edges = none
  
}","true","","","","",""
"4","ThreeCycle","0","eval_input","2020-04-06 11:46:53","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"4","ThreeCycle","1","eval_input","2020-04-06 11:46:55","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"2","IsBipartite","63","eval_input","2020-04-06 11:46:59","inst myInst {
  Node = A+B
  edges = A->A
  
}","false","","","","",""
"2","IsBipartite","64","eval_input","2020-04-06 11:47:08","inst myInst {
  Node = A+B
  edges = A->B
  
}","true","","","","",""
"4","ThreeCycle","2","eval_input","2020-04-06 11:47:14","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B
}","false","","","","",""
"2","IsBipartite","65","eval_input","2020-04-06 11:47:16","inst myInst {
  Node = A+B
  edges = A->B+B->B
  
}","false","","","","",""
"4","ThreeCycle","3","eval_input","2020-04-06 11:47:22","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + A-> C
}","false","","","","",""
"4","ThreeCycle","4","eval_input","2020-04-06 11:47:35","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + A-> C + B -> C
}","false","","","","",""
"4","ThreeCycle","5","eval_input","2020-04-06 11:47:57","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"4","ThreeCycle","6","eval_input","2020-04-06 11:48:03","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"4","ThreeCycle","7","eval_input","2020-04-06 11:48:12","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"2","IsBipartite","66","quiz_answer","2020-04-06 11:48:18","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"2","IsBipartite","67","quiz_answer","2020-04-06 11:48:21","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"4","ThreeCycle","8","eval_input","2020-04-06 11:48:25","inst myInst {
  Node = A + B
  edges = A -> B
}","false","","","","",""
"2","IsBipartite","68","quiz_answer","2020-04-06 11:48:26","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"4","ThreeCycle","9","eval_input","2020-04-06 11:48:31","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"2","IsBipartite","69","quiz_answer","2020-04-06 11:48:51","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"2","IsBipartite","70","quiz_answer","2020-04-06 11:48:55","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"4","ThreeCycle","10","eval_input","2020-04-06 11:48:55","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C-> A
}","true","","","","",""
"2","IsBipartite","71","quiz_answer","2020-04-06 11:48:57","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"2","IsBipartite","72","quiz_answer","2020-04-06 11:49:01","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"2","IsBipartite","73","quiz_answer","2020-04-06 11:49:04","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"4","ThreeCycle","11","eval_input","2020-04-06 11:49:06","inst myInst {
  Node = A + B
  edges = A -> B + B -> A 
}","false","","","","",""
"4","ThreeCycle","12","eval_input","2020-04-06 11:49:23","inst myInst {
  Node = A + B
  edges = A -> B + B -> A + A-> A + B-> B
}","false","","","","",""
"2","IsBipartite","74","eval_input","2020-04-06 11:49:28","inst myInst {
  Node = A+B+C
  edges = A->B+B->C
  
}","true","","","","",""
"2","IsBipartite","75","eval_input","2020-04-06 11:49:38","inst myInst {
  Node = A+B+C
  edges = A->B+B->C+C->A
  
}","false","","","","",""
"4","ThreeCycle","13","eval_input","2020-04-06 11:49:42","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","true","","","","",""
"4","ThreeCycle","14","eval_input","2020-04-06 11:49:47","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A + A-> A
}","true","","","","",""
"4","ThreeCycle","15","eval_input","2020-04-06 11:49:59","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A 
}","false","","","","",""
"4","ThreeCycle","16","eval_input","2020-04-06 11:50:08","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A  + B-> C + C->A
}","true","","","","",""
"2","IsBipartite","76","quiz_answer","2020-04-06 11:50:11","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"2","IsBipartite","77","quiz_answer","2020-04-06 11:50:14","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"4","ThreeCycle","17","eval_input","2020-04-06 11:50:18","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A  + B-> C + C->A
}","true","","","","",""
"4","ThreeCycle","18","eval_input","2020-04-06 11:50:27","inst myInst {
  Node = A + B + C + D
  edges = none
}","false","","","","",""
"2","IsBipartite","78","quiz_answer","2020-04-06 11:50:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"4","ThreeCycle","19","eval_input","2020-04-06 11:50:31","inst myInst {
  Node = A + B + C + D
  edges = A-> B
}","false","","","","",""
"4","ThreeCycle","20","eval_input","2020-04-06 11:50:36","inst myInst {
  Node = A + B + C + D
  edges = A-> B + C-> D
}","false","","","","",""
"4","ThreeCycle","21","eval_input","2020-04-06 11:50:50","inst myInst {
  Node = A + B 
  edges = A-> A + A-> B
}","false","","","","",""
"2","IsBipartite","79","eval_input","2020-04-06 11:50:54","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D+D->A
  
}","true","","","","",""
"2","IsBipartite","80","eval_input","2020-04-06 11:51:09","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D+D->A+B->B
  
}","false","","","","",""
"4","ThreeCycle","22","eval_input","2020-04-06 11:51:20","inst myInst {
  Node = A 
  + B 
  edges = A-> A 
  + A-> B
  + B-> A
  + B->B
}","false","","","","",""
"4","ThreeCycle","23","eval_input","2020-04-06 11:51:40","inst myInst {
  Node = A 
  + B 
  edges = A-> A 
  + A-> B
  + B-> A
  + B->B
}","false","","","","",""
"4","ThreeCycle","24","eval_input","2020-04-06 11:51:58","inst myInst {
  Node = A 
  + B 
  edges = A-> A 
 
}","false","","","","",""
"4","ThreeCycle","25","eval_input","2020-04-06 11:52:08","inst myInst {
  Node = A 
  + B 
  edges = A-> A + A-> B
 
}","false","","","","",""
"4","ThreeCycle","26","eval_input","2020-04-06 11:52:14","inst myInst {
  Node = A 
  + B 
  edges = A-> A + B-> A
 
}","false","","","","",""
"4","ThreeCycle","27","eval_input","2020-04-06 11:52:32","inst myInst {
  Node = A 
  + B 
  edges = A-> A + B-> B
 
}","false","","","","",""
"4","ThreeCycle","28","eval_input","2020-04-06 11:52:43","inst myInst {
  Node = A + B + C + D
  edges = A-> A + B-> B
 
}","false","","","","",""
"4","ThreeCycle","29","eval_input","2020-04-06 11:52:48","inst myInst {
  Node = A + B + C + D
  edges = A-> B
 
}","false","","","","",""
"4","ThreeCycle","30","eval_input","2020-04-06 11:52:53","inst myInst {
  Node = A + B + C + D
  edges = A-> B + B-> C
 
}","false","","","","",""
"4","ThreeCycle","31","eval_input","2020-04-06 11:52:59","inst myInst {
  Node = A + B + C + D
  edges = A-> B + B-> C + C->D
 
}","false","","","","",""
"4","ThreeCycle","32","eval_input","2020-04-06 11:53:05","inst myInst {
  Node = A + B + C + D
  edges = A-> B + B-> C + C->D + D-> A
 
}","false","","","","",""
"2","IsBipartite","81","quiz_answer","2020-04-06 11:53:16","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"4","ThreeCycle","33","eval_input","2020-04-06 11:53:22","inst myInst {
  Node = A + B + C + D
  edges = A-> B + B-> C + C->D + D-> A 
          + C -> A
 
}","true","","","","",""
"2","IsBipartite","82","quiz_answer","2020-04-06 11:53:22","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"4","ThreeCycle","34","eval_input","2020-04-06 11:53:45","inst myInst {
  Node = A + B + C + D
  edges =  B-> C + C->D + D-> A 
          + C -> A 
 
}","false","","","","",""
"2","IsBipartite","83","quiz_answer","2020-04-06 11:53:45","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"2","IsBipartite","84","quiz_answer","2020-04-06 11:53:48","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"4","ThreeCycle","35","eval_input","2020-04-06 11:53:51","inst myInst {
  Node = A + B + C + D
  edges =  B-> C + C->D + D-> A 
 
}","false","","","","",""
"2","IsBipartite","85","quiz_answer","2020-04-06 11:53:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"2","IsBipartite","86","quiz_answer","2020-04-06 11:53:59","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"4","ThreeCycle","36","eval_input","2020-04-06 11:54:04","inst myInst {
  Node = A + B + C + D
  edges =  A-> B + B->C + C-> A 
 
}","true","","","","",""
"2","IsBipartite","87","quiz_answer","2020-04-06 11:54:04","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"4","ThreeCycle","37","eval_input","2020-04-06 11:54:10","inst myInst {
  Node = A + B + C + D
  edges =  A-> B + B->D + D-> A 
 
}","true","","","","",""
"2","IsBipartite","88","quiz_answer","2020-04-06 11:54:12","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"2","IsBipartite","89","quiz_answer","2020-04-06 11:54:22","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"2","IsBipartite","90","quiz_answer","2020-04-06 11:54:38","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"4","ThreeCycle","38","eval_input","2020-04-06 11:54:45","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> B + B->C + C-> D + D->E 
  + E-> A
 
}","false","","","","",""
"4","ThreeCycle","39","eval_input","2020-04-06 11:55:00","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> B + B->C + C-> D + D->E 
  + E-> A + E->C
 
}","true","","","","",""
"2","IsBipartite","91","eval_input","2020-04-06 11:55:16","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D+D->A
  
}","true","","","","",""
"4","ThreeCycle","40","eval_input","2020-04-06 11:55:55","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> A + B-> A + A-> E + E-> A
 
}","false","","","","",""
"2","IsBipartite","92","eval_input","2020-04-06 11:56:12","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->E+E->A
  
}","false","","","","",""
"4","ThreeCycle","41","eval_input","2020-04-06 11:56:14","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> A + B-> A + E-> B +  A -> E
 
}","true","","","","",""
"2","IsBipartite","93","eval_input","2020-04-06 11:56:39","inst myInst {
  Node = A+B+C+D+E+F
  edges = A->B+B->C+C->D+D->E+E->F+F->A
  
}","true","","","","",""
"2","IsBipartite","94","eval_input","2020-04-06 11:56:49","inst myInst {
  Node = A+B+C+D+E+F+G
  edges = A->B+B->C+C->D+D->E+E->F+F->G+G->A
  
}","false","","","","",""
"4","ThreeCycle","42","eval_input","2020-04-06 11:57:09","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> B + B-> C + C-> A  + C -> D + D->E+E->C
 
}","true","","","","",""
"2","IsBipartite","95","quiz_answer","2020-04-06 11:57:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"2","IsBipartite","96","quiz_answer","2020-04-06 11:58:01","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"2","IsBipartite","97","quiz_answer","2020-04-06 11:58:05","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"2","IsBipartite","98","quiz_answer","2020-04-06 11:58:09","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"2","IsBipartite","99","quiz_answer","2020-04-06 11:58:15","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"2","IsBipartite","100","quiz_answer","2020-04-06 11:58:20","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"2","IsBipartite","101","quiz_answer","2020-04-06 11:58:26","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"2","IsBipartite","102","quiz_answer","2020-04-06 11:58:30","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"2","IsBipartite","103","final_answer","2020-04-06 11:58:32","","","","","","returns true if there is no odd numbered(1,3,5,7...)-cycle, false otherwise",""
"4","ThreeCycle","43","eval_input","2020-04-06 11:59:44","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> B + B-> C + C-> A  + C -> D + D->E+E->C
 
}","true","","","","",""
"4","ThreeCycle","44","eval_input","2020-04-06 12:00:00","inst myInst {
  Node = A + B + C + D + E
  edges =  A->C + C-> E + E->A
 
}","true","","","","",""
"4","ThreeCycle","45","eval_input","2020-04-06 12:00:07","inst myInst {
  Node = A + B + C + D + E
  edges =  A->C + C-> E + E->B + B->A
 
}","false","","","","",""
"4","ThreeCycle","46","eval_input","2020-04-06 12:00:23","inst myInst {
  Node = A + B + C + D + E
  edges =  A->C + C-> E + E->B + B->D + D->A
 
}","false","","","","",""
"4","ThreeCycle","47","quiz_answer","2020-04-06 12:01:33","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"4","ThreeCycle","48","quiz_answer","2020-04-06 12:01:41","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"4","ThreeCycle","49","quiz_answer","2020-04-06 12:01:46","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"4","ThreeCycle","50","quiz_answer","2020-04-06 12:01:53","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"4","ThreeCycle","51","quiz_answer","2020-04-06 12:01:58","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"4","ThreeCycle","52","quiz_answer","2020-04-06 12:02:03","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"4","ThreeCycle","53","quiz_answer","2020-04-06 12:02:09","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"4","ThreeCycle","54","quiz_answer","2020-04-06 12:02:16","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"4","ThreeCycle","55","final_answer","2020-04-06 12:02:19","","","","","","-- there exist length 3 cycle

some A: node | some B: node - A| some C:node-A-B | A->B + B-> C + C->A in edges",""
"4","IsBipartite","56","eval_input","2020-04-06 12:02:32","inst myInst {
  Node = A + B + C + D + E
  edges =  A->C + C-> E + E->B + B->D + D->A
 
}","false","","","","",""
"4","IsBipartite","57","eval_input","2020-04-06 12:02:40","inst myInst {
  Node = none
  edges =  none
 
}","true","","","","",""
"4","IsBipartite","58","eval_input","2020-04-06 12:03:07","inst myInst {
  Node = A
  edges =  none
 
}","true","","","","",""
"4","IsBipartite","59","eval_input","2020-04-06 12:03:13","inst myInst {
  Node = A
  edges =  A -> A
 
}","false","","","","",""
"4","IsBipartite","60","eval_input","2020-04-06 12:03:23","inst myInst {
  Node = A + B
  edges =  A -> A
 
}","false","","","","",""
"4","IsBipartite","61","eval_input","2020-04-06 12:03:28","inst myInst {
  Node = A + B
  edges =  A -> A + B->B
 
}","false","","","","",""
"4","IsBipartite","62","eval_input","2020-04-06 12:03:35","inst myInst {
  Node = A + B
  edges =  A -> B
 
}","true","","","","",""
"4","IsBipartite","63","eval_input","2020-04-06 12:03:45","inst myInst {
  Node = A + B
  edges =  A -> B + B->A
 
}","true","","","","",""
"4","IsBipartite","64","eval_input","2020-04-06 12:03:53","inst myInst {
  Node = A + B + C
  edges =  none
 
}","true","","","","",""
"4","IsBipartite","65","eval_input","2020-04-06 12:04:00","inst myInst {
  Node = A + B + C
  edges =  A->B
 
}","true","","","","",""
"4","IsBipartite","66","eval_input","2020-04-06 12:04:08","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A
 
}","true","","","","",""
"4","IsBipartite","67","eval_input","2020-04-06 12:04:18","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + B->C
 
}","true","","","","",""
"4","IsBipartite","68","eval_input","2020-04-06 12:04:25","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + B->C + C->B
 
}","true","","","","",""
"5","ThreeCycle","0","eval_input","2020-04-06 12:04:27","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"4","IsBipartite","69","eval_input","2020-04-06 12:04:32","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + B->C + C->B + C->C
 
}","false","","","","",""
"4","IsBipartite","70","eval_input","2020-04-06 12:04:39","inst myInst {
  Node = A + B + C
  edges =  A->A
 
}","false","","","","",""
"5","ThreeCycle","1","eval_input","2020-04-06 12:04:39","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"5","ThreeCycle","2","eval_input","2020-04-06 12:04:43","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"4","IsBipartite","71","eval_input","2020-04-06 12:04:45","inst myInst {
  Node = A + B + C
  edges =  B->B
 
}","false","","","","",""
"5","ThreeCycle","3","eval_input","2020-04-06 12:04:51","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"4","IsBipartite","72","eval_input","2020-04-06 12:04:55","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->A
 
}","false","","","","",""
"5","ThreeCycle","4","eval_input","2020-04-06 12:04:59","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"5","ThreeCycle","5","eval_input","2020-04-06 12:05:05","inst myInst {
  Node = A
       
  edges = A->A
}","false","","","","",""
"4","IsBipartite","73","eval_input","2020-04-06 12:05:10","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A
 
}","true","","","","",""
"5","ThreeCycle","6","eval_input","2020-04-06 12:05:14","inst myInst {
  Node = A + B
       
  edges = A->B
}","false","","","","",""
"5","ThreeCycle","7","eval_input","2020-04-06 12:05:23","inst myInst {
  Node = A + B
       
  edges = A->B + B->A
}","false","","","","",""
"4","IsBipartite","74","eval_input","2020-04-06 12:05:29","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->C + C->D + D-> A
 
}","true","","","","",""
"4","IsBipartite","75","eval_input","2020-04-06 12:05:42","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->C + C->D + D-> A + C->A
 
}","false","","","","",""
"5","ThreeCycle","8","eval_input","2020-04-06 12:05:53","inst myInst {
  Node = A + B + C
       
  edges = B->C + C->A
}","false","","","","",""
"4","IsBipartite","76","eval_input","2020-04-06 12:06:03","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->C + C->D + D-> A + C->A + A->A
 
}","false","","","","",""
"5","ThreeCycle","9","eval_input","2020-04-06 12:06:07","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C + C->A + A->C
}","true","","","","",""
"4","IsBipartite","77","eval_input","2020-04-06 12:06:07","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->C + C->D + D-> A + A->A
 
}","false","","","","",""
"5","ThreeCycle","10","eval_input","2020-04-06 12:06:34","inst myInst {
  Node = A
       
  edges = none
}","false","","","","",""
"5","ThreeCycle","11","eval_input","2020-04-06 12:06:39","inst myInst {
  Node = A
       
  edges = A->A
}","false","","","","",""
"5","ThreeCycle","12","eval_input","2020-04-06 12:06:55","inst myInst {
  Node = A + B
       
  edges = A->A + B->B
}","false","","","","",""
"4","IsBipartite","78","eval_input","2020-04-06 12:06:55","inst myInst {
  Node = A + B + C + D
  edges =  none
 
}","true","","","","",""
"5","ThreeCycle","13","eval_input","2020-04-06 12:07:02","inst myInst {
  Node = A + B
       
  edges = A->B 
}","false","","","","",""
"5","ThreeCycle","14","eval_input","2020-04-06 12:07:07","inst myInst {
  Node = A + B
       
  edges = A->B 
}","false","","","","",""
"5","ThreeCycle","15","eval_input","2020-04-06 12:07:15","inst myInst {
  Node = A + B
       
  edges = A->B + B->A
}","false","","","","",""
"5","ThreeCycle","16","eval_input","2020-04-06 12:07:23","inst myInst {
  Node = A + B
       
  edges = A->B + B->A
}","false","","","","",""
"5","ThreeCycle","17","eval_input","2020-04-06 12:07:29","inst myInst {
  Node = A + B
       
  edges = A->B + B->A + A->A
}","false","","","","",""
"5","ThreeCycle","18","eval_input","2020-04-06 12:07:40","inst myInst {
  Node = A + B
       
  edges = A->B + B->A + A->A + B->B
}","false","","","","",""
"4","IsBipartite","79","eval_input","2020-04-06 12:07:40","inst myInst {
  Node = A + B + C + D 
  edges =  A-> B + B->A
 
}","true","","","","",""
"4","IsBipartite","80","eval_input","2020-04-06 12:07:44","inst myInst {
  Node = A + B + C + D 
  edges =  A-> B + B->A + A->A
 
}","false","","","","",""
"5","ThreeCycle","19","eval_input","2020-04-06 12:08:00","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->A + B->C + C->A
}","true","","","","",""
"5","ThreeCycle","20","eval_input","2020-04-06 12:08:03","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->A + B->C + C->A
}","true","","","","",""
"5","ThreeCycle","21","eval_input","2020-04-06 12:08:07","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->B + B->C + C->A
}","true","","","","",""
"4","IsBipartite","81","quiz_answer","2020-04-06 12:08:07","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"4","IsBipartite","82","quiz_answer","2020-04-06 12:08:11","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"4","IsBipartite","83","quiz_answer","2020-04-06 12:08:16","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"5","ThreeCycle","22","eval_input","2020-04-06 12:08:18","inst myInst {
  Node = A + B + C 
       
  edges = A->B + B->B + B->C 
}","false","","","","",""
"4","IsBipartite","84","quiz_answer","2020-04-06 12:08:24","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"4","IsBipartite","85","quiz_answer","2020-04-06 12:08:32","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"5","ThreeCycle","23","eval_input","2020-04-06 12:08:35","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->A
}","true","","","","",""
"4","IsBipartite","86","quiz_answer","2020-04-06 12:08:39","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"4","IsBipartite","87","quiz_answer","2020-04-06 12:08:47","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"4","IsBipartite","88","quiz_answer","2020-04-06 12:08:52","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"5","ThreeCycle","24","eval_input","2020-04-06 12:08:52","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->D + D->A
}","true","","","","",""
"5","ThreeCycle","25","eval_input","2020-04-06 12:08:59","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->D + D->C
}","false","","","","",""
"5","ThreeCycle","26","eval_input","2020-04-06 12:09:08","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->D + D->C
}","false","","","","",""
"5","ThreeCycle","27","eval_input","2020-04-06 12:09:12","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->D + D->A
}","true","","","","",""
"4","IsBipartite","89","eval_input","2020-04-06 12:10:37","inst myInst {
  Node = A + B + C + D + E 
  edges =  A-> B + B->C + C->D + D->A
 
}","true","","","","",""
"4","IsBipartite","90","eval_input","2020-04-06 12:10:51","inst myInst {
  Node = A + B + C + D + E 
  edges =  A-> B + B->C + C->D + D->E + E->A
 
}","false","","","","",""
"5","ThreeCycle","28","quiz_answer","2020-04-06 12:10:54","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"5","ThreeCycle","29","quiz_answer","2020-04-06 12:10:58","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"5","ThreeCycle","30","quiz_answer","2020-04-06 12:11:02","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"4","IsBipartite","91","eval_input","2020-04-06 12:11:05","inst myInst {
  Node = A + B + C + D + E +F
  edges =  A-> B + B->C + C->D + D->E + E->F + F->A
 
}","true","","","","",""
"5","ThreeCycle","31","quiz_answer","2020-04-06 12:11:10","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"5","ThreeCycle","32","quiz_answer","2020-04-06 12:11:14","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"5","ThreeCycle","33","quiz_answer","2020-04-06 12:11:22","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"5","ThreeCycle","34","quiz_answer","2020-04-06 12:11:30","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","false","false","",""
"5","ThreeCycle","35","eval_input","2020-04-06 12:12:08","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"4","IsBipartite","92","eval_input","2020-04-06 12:12:31","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A-> B + B->C + C->D + D->E + E->F + F->A + G->A
 
}","true","","","","",""
"5","ThreeCycle","36","eval_input","2020-04-06 12:12:34","inst myInst {
  Node = A + B + C + D + E
       
  edges = C->D + D->E + E->C + D->A
}","true","","","","",""
"5","ThreeCycle","37","eval_input","2020-04-06 12:12:40","inst myInst {
  Node = A + B + C + D + E + J
       
  edges = C->D + D->E + E->C + D->A
}","true","","","","",""
"4","IsBipartite","93","eval_input","2020-04-06 12:13:12","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A-> B + B->C + C->D + D->E + E->F + F->A + G->A
}","true","","","","",""
"4","IsBipartite","94","eval_input","2020-04-06 12:13:18","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A-> B + B->C + C->D + D->E + E->A + F->A + G->A
}","false","","","","",""
"4","IsBipartite","95","eval_input","2020-04-06 12:13:33","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A-> B + B->C + C->D + D->E +C->A + F->A + G->A
}","false","","","","",""
"5","ThreeCycle","38","quiz_answer","2020-04-06 12:14:33","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"5","ThreeCycle","39","quiz_answer","2020-04-06 12:14:38","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"5","ThreeCycle","40","quiz_answer","2020-04-06 12:14:41","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"5","ThreeCycle","41","quiz_answer","2020-04-06 12:14:45","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"5","ThreeCycle","42","quiz_answer","2020-04-06 12:14:49","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"5","ThreeCycle","43","quiz_answer","2020-04-06 12:14:52","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"5","ThreeCycle","44","quiz_answer","2020-04-06 12:15:01","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"5","ThreeCycle","45","quiz_answer","2020-04-06 12:15:49","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"5","ThreeCycle","46","final_answer","2020-04-06 12:15:51","","","","","","some a,b,c: Node | a != b and b!=c and c!=a and a->b in edges and b->c in edges and c->a in edges",""
"4","IsBipartite","96","eval_input","2020-04-06 12:16:10","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A-> B + B->C + C->D + D->E +C->A + F->A + G->A
}","false","","","","",""
"4","IsBipartite","97","eval_input","2020-04-06 12:16:32","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"4","IsBipartite","98","eval_input","2020-04-06 12:18:00","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A->B + A->C + C->B
}","true","","","","",""
"5","IsBipartite","47","eval_input","2020-04-06 12:18:30","inst myInst {
  Node = A
       
  edges = none
}","true","","","","",""
"5","IsBipartite","48","eval_input","2020-04-06 12:18:36","inst myInst {
  Node = A + B
       
  edges = none
}","true","","","","",""
"5","IsBipartite","49","eval_input","2020-04-06 12:18:40","inst myInst {
  Node = A + B
       
  edges = A->B
}","true","","","","",""
"5","IsBipartite","50","eval_input","2020-04-06 12:18:45","inst myInst {
  Node = A + B
       
  edges = A->B + B->A
}","true","","","","",""
"5","IsBipartite","51","eval_input","2020-04-06 12:18:49","inst myInst {
  Node = A + B
       
  edges = A->A + B->A
}","false","","","","",""
"5","IsBipartite","52","eval_input","2020-04-06 12:18:57","inst myInst {
  Node = A
       
  edges = A->A 
}","false","","","","",""
"5","IsBipartite","53","eval_input","2020-04-06 12:19:03","inst myInst {
  Node = A + B + C
       
  edges = A->A 
}","false","","","","",""
"5","IsBipartite","54","eval_input","2020-04-06 12:19:10","inst myInst {
  Node = A + B + C
       
  edges = A->A + B->C
}","false","","","","",""
"5","IsBipartite","55","eval_input","2020-04-06 12:19:14","inst myInst {
  Node = A + B + C
       
  edges = B->B + B->C
}","false","","","","",""
"5","IsBipartite","56","eval_input","2020-04-06 12:19:17","inst myInst {
  Node = A + B + C
       
  edges = B->A + B->C
}","true","","","","",""
"5","IsBipartite","57","quiz_answer","2020-04-06 12:19:40","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"5","IsBipartite","58","quiz_answer","2020-04-06 12:19:44","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"5","IsBipartite","59","quiz_answer","2020-04-06 12:19:47","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"5","IsBipartite","60","quiz_answer","2020-04-06 12:19:51","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"5","IsBipartite","61","quiz_answer","2020-04-06 12:19:55","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"5","IsBipartite","62","eval_input","2020-04-06 12:20:17","inst myInst {
  Node = A + B + C
       
  edges = B->A + A->B
}","true","","","","",""
"6","IsBipartite","0","eval_input","2020-04-06 12:20:44","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"5","IsBipartite","63","quiz_answer","2020-04-06 12:20:48","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"4","IsBipartite","99","quiz_answer","2020-04-06 12:20:53","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"6","IsBipartite","1","eval_input","2020-04-06 12:20:53","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"4","IsBipartite","100","quiz_answer","2020-04-06 12:20:57","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"6","IsBipartite","2","eval_input","2020-04-06 12:21:00","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"4","IsBipartite","101","quiz_answer","2020-04-06 12:21:02","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"4","IsBipartite","102","quiz_answer","2020-04-06 12:21:08","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"6","IsBipartite","3","eval_input","2020-04-06 12:21:09","inst myInst {
  Node = A
       + B
       + C
  edges = A->C
}","true","","","","",""
"4","IsBipartite","103","quiz_answer","2020-04-06 12:21:16","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"5","IsBipartite","64","eval_input","2020-04-06 12:21:18","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"4","IsBipartite","104","quiz_answer","2020-04-06 12:21:23","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"6","IsBipartite","4","eval_input","2020-04-06 12:21:24","inst myInst {
  Node = A
       + B
       + C
  edges = B->A
}","true","","","","",""
"6","IsBipartite","5","eval_input","2020-04-06 12:21:27","inst myInst {
  Node = A
       + B
       + C
  edges = B->B
}","false","","","","",""
"4","IsBipartite","105","quiz_answer","2020-04-06 12:21:28","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"6","IsBipartite","6","eval_input","2020-04-06 12:21:31","inst myInst {
  Node = A
       + B
       + C
  edges = B->C
}","true","","","","",""
"4","IsBipartite","106","quiz_answer","2020-04-06 12:21:37","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"4","IsBipartite","107","final_answer","2020-04-06 12:21:38","","","","","","all n:node | n not in n.edges.edges + n.edges.edges.edges.edges.edges",""
"5","IsBipartite","65","eval_input","2020-04-06 12:21:38","inst myInst {
  Node = A + B 
       
  edges = A->B + B->A 
}","true","","","","",""
"6","IsBipartite","7","eval_input","2020-04-06 12:21:47","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->A
}","true","","","","",""
"5","IsBipartite","66","eval_input","2020-04-06 12:21:56","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->A 
}","true","","","","",""
"6","IsBipartite","8","eval_input","2020-04-06 12:21:59","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->A + C->B
}","true","","","","",""
"6","IsBipartite","10","eval_input","2020-04-06 12:22:05","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->B
}","true","","","","",""
"6","IsBipartite","9","eval_input","2020-04-06 12:22:05","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->B
}","true","","","","",""
"5","IsBipartite","67","eval_input","2020-04-06 12:22:10","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"6","IsBipartite","11","eval_input","2020-04-06 12:22:12","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->B + C->C
}","false","","","","",""
"5","IsBipartite","68","eval_input","2020-04-06 12:22:17","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"6","IsBipartite","12","eval_input","2020-04-06 12:22:21","inst myInst {
  Node = A
       + B
       + C
  edges = C->C
}","false","","","","",""
"6","IsBipartite","13","eval_input","2020-04-06 12:22:26","inst myInst {
  Node = A
       + B
       + C
  edges = C->C + A->A
}","false","","","","",""
"6","IsBipartite","14","eval_input","2020-04-06 12:22:35","inst myInst {
  Node = A
       + B
       + C
  edges = C->C + A->A + B->B
}","false","","","","",""
"6","IsBipartite","15","eval_input","2020-04-06 12:22:41","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"5","IsBipartite","69","quiz_answer","2020-04-06 12:23:09","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"5","IsBipartite","70","quiz_answer","2020-04-06 12:23:13","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"6","IsBipartite","16","quiz_answer","2020-04-06 12:23:14","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"5","IsBipartite","71","quiz_answer","2020-04-06 12:23:16","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"6","IsBipartite","17","quiz_answer","2020-04-06 12:23:22","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"6","IsBipartite","18","quiz_answer","2020-04-06 12:23:26","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"5","IsBipartite","72","quiz_answer","2020-04-06 12:23:27","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"5","IsBipartite","73","quiz_answer","2020-04-06 12:23:33","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"6","IsBipartite","19","quiz_answer","2020-04-06 12:23:33","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"5","IsBipartite","74","quiz_answer","2020-04-06 12:23:38","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"6","IsBipartite","20","quiz_answer","2020-04-06 12:23:40","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"5","IsBipartite","75","quiz_answer","2020-04-06 12:23:45","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"5","IsBipartite","76","quiz_answer","2020-04-06 12:23:56","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"5","IsBipartite","77","final_answer","2020-04-06 12:23:57","","","","","","there is no cycle with odd number of nodes",""
"6","IsBipartite","21","eval_input","2020-04-06 12:24:07","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","true","","","","",""
"6","IsBipartite","22","eval_input","2020-04-06 12:24:20","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"6","IsBipartite","23","eval_input","2020-04-06 12:24:47","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + C->B + B->A
}","false","","","","",""
"5","IsDag","78","eval_input","2020-04-06 12:25:04","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"5","IsDag","79","eval_input","2020-04-06 12:25:10","inst myInst {
  Node = A 
       
  edges = none
}","true","","","","",""
"5","IsDag","80","eval_input","2020-04-06 12:25:14","inst myInst {
  Node = A + B
       
  edges = none
}","true","","","","",""
"5","IsDag","81","eval_input","2020-04-06 12:25:18","inst myInst {
  Node = A + B
       
  edges = A->A
}","false","","","","",""
"5","IsDag","82","eval_input","2020-04-06 12:25:25","inst myInst {
  Node = A + B
       
  edges = A->A + A->B
}","false","","","","",""
"4","IsDag","108","eval_input","2020-04-06 12:25:25","inst myInst {
  Node = A + B + C + D + E +F + G
  edges =  A->B + B->C + C->D + D-> E + E-> F + F->G + G->A
}","false","","","","",""
"5","IsDag","83","eval_input","2020-04-06 12:25:30","inst myInst {
  Node = A + B
       
  edges = A->A + B->B
}","false","","","","",""
"5","IsDag","84","eval_input","2020-04-06 12:25:39","inst myInst {
  Node = A + B + C
       
  edges = A->A + B->B
}","false","","","","",""
"6","IsBipartite","24","quiz_answer","2020-04-06 12:25:39","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"5","IsDag","85","eval_input","2020-04-06 12:25:45","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->A
}","false","","","","",""
"6","IsBipartite","25","quiz_answer","2020-04-06 12:25:47","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"6","IsBipartite","26","quiz_answer","2020-04-06 12:25:53","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"5","IsDag","86","eval_input","2020-04-06 12:25:55","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"6","IsBipartite","27","quiz_answer","2020-04-06 12:26:00","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"5","IsDag","87","eval_input","2020-04-06 12:26:01","inst myInst {
  Node = A 
       
  edges = A->A
}","false","","","","",""
"6","IsBipartite","28","quiz_answer","2020-04-06 12:26:05","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"6","IsBipartite","29","quiz_answer","2020-04-06 12:26:12","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"5","IsDag","88","eval_input","2020-04-06 12:26:15","inst myInst {
  Node = A + B + C + D
       
  edges = A->A + C->D
}","false","","","","",""
"6","IsBipartite","30","quiz_answer","2020-04-06 12:26:20","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"5","IsDag","89","quiz_answer","2020-04-06 12:26:28","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"6","IsBipartite","31","quiz_answer","2020-04-06 12:26:31","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"6","IsBipartite","32","final_answer","2020-04-06 12:26:33","","","","","","False if Odd  length cycle, e.g. reflexive edge or  A->C + C->B + B->A, True otherwise",""
"5","IsDag","90","quiz_answer","2020-04-06 12:26:40","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"5","IsDag","91","quiz_answer","2020-04-06 12:26:43","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"5","IsDag","92","quiz_answer","2020-04-06 12:26:46","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"5","IsDag","93","quiz_answer","2020-04-06 12:26:51","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"5","IsDag","94","quiz_answer","2020-04-06 12:26:57","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"5","IsDag","95","quiz_answer","2020-04-06 12:27:00","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"5","IsDag","96","quiz_answer","2020-04-06 12:27:07","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"5","IsDag","97","quiz_answer","2020-04-06 12:27:14","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"5","IsDag","98","final_answer","2020-04-06 12:27:15","","","","","","Does not have a cycle",""
"6","ThreeCycle","33","eval_input","2020-04-06 12:27:16","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + C->B + B->A
}","true","","","","",""
"6","ThreeCycle","34","eval_input","2020-04-06 12:27:29","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"6","ThreeCycle","35","eval_input","2020-04-06 12:27:34","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"6","ThreeCycle","36","eval_input","2020-04-06 12:27:37","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"6","ThreeCycle","37","eval_input","2020-04-06 12:27:48","inst myInst {
  Node = A
       + B
       + C
  edges = A->C
}","false","","","","",""
"6","ThreeCycle","38","eval_input","2020-04-06 12:27:57","inst myInst {
  Node = A
       + B
       + C
  edges = B->A
}","false","","","","",""
"6","ThreeCycle","39","eval_input","2020-04-06 12:28:01","inst myInst {
  Node = A
       + B
       + C
  edges = B->B
}","false","","","","",""
"6","ThreeCycle","40","eval_input","2020-04-06 12:28:12","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"6","ThreeCycle","41","eval_input","2020-04-06 12:28:19","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"6","ThreeCycle","42","eval_input","2020-04-06 12:28:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"6","ThreeCycle","43","eval_input","2020-04-06 12:28:50","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"6","ThreeCycle","44","eval_input","2020-04-06 12:29:16","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->D + D->E + E->F + F-> A
}","false","","","","",""
"6","ThreeCycle","45","eval_input","2020-04-06 12:29:26","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->D
}","false","","","","",""
"6","ThreeCycle","46","eval_input","2020-04-06 12:29:32","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + B->A
}","false","","","","",""
"6","ThreeCycle","47","eval_input","2020-04-06 12:29:41","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->B
}","false","","","","",""
"6","ThreeCycle","48","eval_input","2020-04-06 12:29:49","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->C
}","false","","","","",""
"6","ThreeCycle","49","eval_input","2020-04-06 12:30:18","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + A->C + B->C
}","false","","","","",""
"6","ThreeCycle","50","eval_input","2020-04-06 12:30:41","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A
}","true","","","","",""
"6","ThreeCycle","51","eval_input","2020-04-06 12:30:49","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + C->C
}","true","","","","",""
"6","ThreeCycle","52","eval_input","2020-04-06 12:30:53","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + C->B
}","true","","","","",""
"6","ThreeCycle","53","eval_input","2020-04-06 12:31:04","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + A->C + C->B + B->A
}","true","","","","",""
"6","ThreeCycle","54","eval_input","2020-04-06 12:31:30","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E
}","true","","","","",""
"6","ThreeCycle","55","eval_input","2020-04-06 12:31:42","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"6","ThreeCycle","56","quiz_answer","2020-04-06 12:31:51","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"6","ThreeCycle","57","quiz_answer","2020-04-06 12:31:54","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"6","ThreeCycle","58","quiz_answer","2020-04-06 12:31:57","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"6","ThreeCycle","59","quiz_answer","2020-04-06 12:32:02","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"6","ThreeCycle","60","quiz_answer","2020-04-06 12:32:07","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"6","ThreeCycle","61","quiz_answer","2020-04-06 12:32:12","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"6","ThreeCycle","62","quiz_answer","2020-04-06 12:32:16","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"6","ThreeCycle","63","quiz_answer","2020-04-06 12:32:24","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"6","ThreeCycle","64","final_answer","2020-04-06 12:32:25","","","","","","true if theres a cycle of length three, false else",""
"4","IsDag","109","eval_input","2020-04-06 12:32:48","inst myInst {
  Node = none
  edges =  none
}","true","","","","",""
"4","IsDag","110","eval_input","2020-04-06 12:33:19","inst myInst {
  Node = A
  edges =  none
}","true","","","","",""
"4","IsDag","111","eval_input","2020-04-06 12:34:08","inst myInst {
  Node = A
  edges =  A->A
}","false","","","","",""
"4","IsDag","112","eval_input","2020-04-06 12:34:14","inst myInst {
  Node = A + B
  edges =  A->A
}","false","","","","",""
"4","IsDag","113","eval_input","2020-04-06 12:34:18","inst myInst {
  Node = A + B
  edges =  none
}","true","","","","",""
"4","IsDag","114","eval_input","2020-04-06 12:34:24","inst myInst {
  Node = A + B
  edges =  A->B
}","true","","","","",""
"4","IsDag","115","eval_input","2020-04-06 12:40:15","inst myInst {
  Node = A + B
  edges =  A->B + B->A
}","false","","","","",""
"6","IsDag","65","eval_input","2020-04-06 12:40:20","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","false","","","","",""
"4","IsDag","116","eval_input","2020-04-06 12:40:31","inst myInst {
  Node = A + B
  edges =  A->A
}","false","","","","",""
"6","IsDag","66","eval_input","2020-04-06 12:40:32","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = none
}","true","","","","",""
"6","IsDag","67","eval_input","2020-04-06 12:40:40","inst myInst {
  Node = A
       + B
       + C
       + D
       + E

  edges = none
}","true","","","","",""
"6","IsDag","68","eval_input","2020-04-06 12:40:44","inst myInst {
  Node = A
       + B


  edges = none
}","true","","","","",""
"6","IsDag","69","eval_input","2020-04-06 12:40:48","inst myInst {
  Node = A
       + B


  edges = none
}","true","","","","",""
"6","IsDag","70","eval_input","2020-04-06 12:41:00","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"6","IsDag","71","eval_input","2020-04-06 12:41:08","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B
}","true","","","","",""
"6","IsDag","72","eval_input","2020-04-06 12:41:13","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->A
}","false","","","","",""
"6","IsDag","73","eval_input","2020-04-06 12:41:31","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B
}","true","","","","",""
"6","IsDag","74","eval_input","2020-04-06 12:41:36","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->C
}","true","","","","",""
"6","IsDag","75","eval_input","2020-04-06 12:41:53","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->A
}","false","","","","",""
"6","IsDag","76","eval_input","2020-04-06 12:41:57","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C
}","true","","","","",""
"6","IsDag","77","eval_input","2020-04-06 12:42:01","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->B
}","false","","","","",""
"6","IsDag","78","eval_input","2020-04-06 12:42:11","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A
}","false","","","","",""
"6","IsDag","79","eval_input","2020-04-06 12:42:19","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->B
}","false","","","","",""
"6","IsDag","80","eval_input","2020-04-06 12:42:25","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->D
}","true","","","","",""
"6","IsDag","81","eval_input","2020-04-06 12:42:49","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + C->D
}","false","","","","",""
"6","IsDag","82","eval_input","2020-04-06 12:43:07","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","false","","","","",""
"6","IsDag","83","quiz_answer","2020-04-06 12:43:20","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"6","IsDag","84","quiz_answer","2020-04-06 12:43:26","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"6","IsDag","85","quiz_answer","2020-04-06 12:43:30","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"6","IsDag","86","quiz_answer","2020-04-06 12:43:37","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"6","IsDag","87","quiz_answer","2020-04-06 12:43:41","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"6","IsDag","88","quiz_answer","2020-04-06 12:43:46","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"6","IsDag","89","quiz_answer","2020-04-06 12:43:51","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"6","IsDag","90","quiz_answer","2020-04-06 12:43:55","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"6","IsDag","91","final_answer","2020-04-06 12:43:56","","","","","","false if theres a cycle, true else",""
"4","IsDag","117","eval_input","2020-04-06 12:44:32","inst myInst {
  Node = A + B + C
  edges =  none
}","true","","","","",""
"4","IsDag","118","eval_input","2020-04-06 12:44:41","inst myInst {
  Node = A + B + C
  edges =  A-> B + B->C
}","true","","","","",""
"4","IsDag","119","eval_input","2020-04-06 12:44:45","inst myInst {
  Node = A + B + C
  edges =  A-> B + B->C + A->C
}","true","","","","",""
"4","IsDag","120","eval_input","2020-04-06 12:44:57","inst myInst {
  Node = A + B + C
  edges =  A-> B + B->C + C -> A
}","false","","","","",""
"4","IsDag","121","eval_input","2020-04-06 12:46:26","inst myInst {
  Node = A + B + C +D
  edges =  A-> B + B->C + C -> D + D->A
}","false","","","","",""
"4","IsDag","122","eval_input","2020-04-06 12:50:08","inst myInst {
  Node = A + B + C + D
  edges =  A-> B + B->C + C -> D 
}","true","","","","",""
"4","IsDag","123","eval_input","2020-04-06 12:57:00","inst myInst {
  Node = A + B + C + D
  edges =  A-> B + B->C + C -> D  + D->A
}","false","","","","",""
"4","IsDag","124","eval_input","2020-04-06 12:57:28","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> B + B->C + C->D + D -> E + E->A
}","false","","","","",""
"4","IsDag","125","eval_input","2020-04-06 12:57:46","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> B + B->C + C->D + D -> E + E->A + A ->E
}","false","","","","",""
"4","IsDag","126","eval_input","2020-04-06 12:57:51","inst myInst {
  Node = A + B + C + D + E
  edges =  A-> B + B->C + C->D + D -> E + A ->E
}","true","","","","",""
"4","IsDag","127","quiz_answer","2020-04-06 12:58:00","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"4","IsDag","128","quiz_answer","2020-04-06 12:58:04","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"4","IsDag","129","quiz_answer","2020-04-06 12:58:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"4","IsDag","130","quiz_answer","2020-04-06 12:58:12","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"4","IsDag","131","quiz_answer","2020-04-06 12:58:16","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"4","IsDag","132","quiz_answer","2020-04-06 12:58:20","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"4","IsDag","133","quiz_answer","2020-04-06 12:58:27","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"4","IsDag","134","quiz_answer","2020-04-06 12:58:31","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"4","IsDag","135","final_answer","2020-04-06 12:58:32","","","","","","there is no loop",""
"7","IsDag","0","eval_input","2020-04-06 14:39:40","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"7","IsDag","1","eval_input","2020-04-06 14:39:51","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"7","IsDag","2","eval_input","2020-04-06 14:39:55","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"7","IsDag","3","eval_input","2020-04-06 14:39:55","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"7","IsDag","4","eval_input","2020-04-06 14:40:02","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"7","IsDag","5","eval_input","2020-04-06 14:40:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"7","IsDag","6","eval_input","2020-04-06 14:40:15","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->B
}","false","","","","",""
"7","IsDag","7","eval_input","2020-04-06 14:40:24","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->B + B->A
}","false","","","","",""
"7","IsDag","8","eval_input","2020-04-06 14:40:35","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"7","IsDag","9","eval_input","2020-04-06 14:40:42","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"7","IsDag","10","quiz_answer","2020-04-06 14:41:11","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"7","IsDag","11","quiz_answer","2020-04-06 14:41:18","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"7","IsDag","12","quiz_answer","2020-04-06 14:41:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"7","IsDag","13","quiz_answer","2020-04-06 14:42:05","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"7","IsDag","14","quiz_answer","2020-04-06 14:42:14","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"7","IsDag","15","quiz_answer","2020-04-06 14:42:28","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"7","IsDag","16","quiz_answer","2020-04-06 14:42:44","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"7","IsDag","17","quiz_answer","2020-04-06 14:42:52","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"7","IsDag","18","final_answer","2020-04-06 14:42:54","","","","","","No cycles",""
"7","IsBipartite","19","eval_input","2020-04-06 14:43:12","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"7","IsBipartite","20","eval_input","2020-04-06 14:43:13","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"7","IsBipartite","21","eval_input","2020-04-06 14:43:19","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"7","IsBipartite","22","eval_input","2020-04-06 14:43:47","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"7","IsBipartite","23","eval_input","2020-04-06 14:44:06","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"7","IsBipartite","24","eval_input","2020-04-06 14:44:12","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"7","IsBipartite","25","eval_input","2020-04-06 14:44:26","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"7","IsBipartite","26","eval_input","2020-04-06 14:44:45","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"7","IsBipartite","27","eval_input","2020-04-06 14:44:51","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + C->A
}","true","","","","",""
"7","IsBipartite","28","eval_input","2020-04-06 14:45:22","inst myInst {
  Node = A + B + C
  edges = B->A
}","true","","","","",""
"7","IsBipartite","29","eval_input","2020-04-06 14:45:26","inst myInst {
  Node = A + B + C
  edges = B->A + C->A
}","true","","","","",""
"7","IsBipartite","30","eval_input","2020-04-06 14:45:35","inst myInst {
  Node = A + B + C
  edges = B->A + C->A + C->C
}","false","","","","",""
"7","IsBipartite","31","eval_input","2020-04-06 14:46:01","inst myInst {
  Node = A + B + C
  edges = B->A + C->A + C->C
}","false","","","","",""
"7","IsBipartite","32","eval_input","2020-04-06 14:46:16","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->B
}","false","","","","",""
"7","IsBipartite","33","eval_input","2020-04-06 14:46:28","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->B + C->C
}","false","","","","",""
"7","IsBipartite","34","eval_input","2020-04-06 14:46:33","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->B + C->C + D->D
}","false","","","","",""
"7","IsBipartite","35","eval_input","2020-04-06 14:47:14","inst myInst {
  Node = A + B + C + D
  edges = A->A +A->B
}","false","","","","",""
"7","IsBipartite","36","eval_input","2020-04-06 14:47:15","inst myInst {
  Node = A + B + C + D
  edges = A->A +A->B
}","false","","","","",""
"7","IsBipartite","37","eval_input","2020-04-06 14:47:40","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + D->A
}","true","","","","",""
"7","IsBipartite","38","eval_input","2020-04-06 14:47:51","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + D->A + B->C
}","true","","","","",""
"7","IsBipartite","39","eval_input","2020-04-06 14:47:57","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + D->A + B->C + B->B
}","false","","","","",""
"7","IsBipartite","40","eval_input","2020-04-06 14:50:40","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->B
}","false","","","","",""
"7","IsBipartite","41","eval_input","2020-04-06 14:50:50","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->C
}","false","","","","",""
"7","IsBipartite","42","eval_input","2020-04-06 14:50:55","inst myInst {
  Node = A + B + C 
  edges = A->A + B->C
}","false","","","","",""
"7","IsBipartite","43","eval_input","2020-04-06 14:52:45","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A
}","false","","","","",""
"7","IsBipartite","44","eval_input","2020-04-06 14:52:56","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A + C->C
}","false","","","","",""
"7","IsBipartite","45","eval_input","2020-04-06 14:58:40","inst myInst {
  Node = A + B + C 
  edges = A->B + A->C + C->A
}","true","","","","",""
"7","IsBipartite","46","eval_input","2020-04-06 14:59:01","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"7","IsBipartite","47","eval_input","2020-04-06 14:59:25","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"7","IsBipartite","48","eval_input","2020-04-06 14:59:36","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"7","IsBipartite","49","eval_input","2020-04-06 14:59:45","inst myInst {
  Node = A + B + C + D  + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"7","IsBipartite","50","quiz_answer","2020-04-06 15:00:03","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"7","IsBipartite","51","quiz_answer","2020-04-06 15:00:10","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"7","IsBipartite","52","quiz_answer","2020-04-06 15:00:20","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"7","IsBipartite","53","quiz_answer","2020-04-06 15:00:42","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"7","IsBipartite","54","quiz_answer","2020-04-06 15:00:51","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"7","IsBipartite","55","quiz_answer","2020-04-06 15:01:04","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"7","IsBipartite","56","quiz_answer","2020-04-06 15:01:14","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"7","IsBipartite","57","quiz_answer","2020-04-06 15:01:21","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"7","IsBipartite","58","final_answer","2020-04-06 15:01:24","","","","","","No odd sized rings",""
"7","ThreeCycle","59","eval_input","2020-04-06 15:02:04","inst myInst {
  Node = A + B + C + D  + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"7","ThreeCycle","60","eval_input","2020-04-06 15:02:11","inst myInst {
  Node = A 
  edges = none
}","false","","","","",""
"7","ThreeCycle","61","eval_input","2020-04-06 15:02:24","inst myInst {
  Node = A 
  edges = A->A
}","false","","","","",""
"7","ThreeCycle","62","eval_input","2020-04-06 15:02:42","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"7","ThreeCycle","63","eval_input","2020-04-06 15:02:47","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"7","ThreeCycle","64","eval_input","2020-04-06 15:02:52","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"7","ThreeCycle","65","eval_input","2020-04-06 15:03:04","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A + B->B
}","false","","","","",""
"7","ThreeCycle","66","eval_input","2020-04-06 15:03:09","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A 
}","false","","","","",""
"7","ThreeCycle","67","eval_input","2020-04-06 15:03:13","inst myInst {
  Node = A + B
  edges = A->B + A->A 
}","false","","","","",""
"7","ThreeCycle","68","eval_input","2020-04-06 15:03:18","inst myInst {
  Node = A + B
  edges = A->B + B->B
}","false","","","","",""
"7","ThreeCycle","69","eval_input","2020-04-06 15:03:37","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"7","ThreeCycle","70","eval_input","2020-04-06 15:03:58","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"7","ThreeCycle","71","eval_input","2020-04-06 15:04:36","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"7","ThreeCycle","72","eval_input","2020-04-06 15:05:22","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","false","","","","",""
"7","ThreeCycle","73","eval_input","2020-04-06 15:05:54","inst myInst {
  Node = A + B + C 
  edges = A->B + A->C
}","false","","","","",""
"7","ThreeCycle","74","eval_input","2020-04-06 15:06:45","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"7","ThreeCycle","75","eval_input","2020-04-06 15:07:45","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"7","ThreeCycle","76","eval_input","2020-04-06 15:08:13","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A 
}","true","","","","",""
"7","ThreeCycle","77","eval_input","2020-04-06 15:08:20","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A 
}","true","","","","",""
"7","ThreeCycle","78","eval_input","2020-04-06 15:08:39","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + B->D 
}","true","","","","",""
"7","ThreeCycle","79","eval_input","2020-04-06 15:08:50","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + B->D + B->E
}","true","","","","",""
"7","ThreeCycle","80","eval_input","2020-04-06 15:09:07","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + B->D + B->E + C->E
}","true","","","","",""
"7","ThreeCycle","81","eval_input","2020-04-06 15:09:44","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + B->A + B->D + B->E + C->E
}","true","","","","",""
"7","ThreeCycle","82","eval_input","2020-04-06 15:10:20","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + B->A + A->C + C->B
}","true","","","","",""
"7","ThreeCycle","83","eval_input","2020-04-06 15:10:42","inst myInst {
  Node = A + B + C + D + E
  edges = A->B  + C->A + B->A + A->C 
}","false","","","","",""
"7","ThreeCycle","84","quiz_answer","2020-04-06 15:11:03","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"7","ThreeCycle","85","quiz_answer","2020-04-06 15:11:07","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"7","ThreeCycle","86","quiz_answer","2020-04-06 15:11:12","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"7","ThreeCycle","87","quiz_answer","2020-04-06 15:11:27","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"7","ThreeCycle","88","quiz_answer","2020-04-06 15:11:37","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"7","ThreeCycle","89","quiz_answer","2020-04-06 15:11:49","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"7","ThreeCycle","90","quiz_answer","2020-04-06 15:12:13","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"7","ThreeCycle","91","quiz_answer","2020-04-06 15:12:42","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"7","ThreeCycle","92","final_answer","2020-04-06 15:12:45","","","","","","Must contain a cycle of 3 nodes",""
"8","ThreeCycle","0","eval_input","2020-04-06 15:20:50","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"8","ThreeCycle","1","eval_input","2020-04-06 15:23:27","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"8","ThreeCycle","2","eval_input","2020-04-06 15:23:33","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"8","ThreeCycle","3","eval_input","2020-04-06 15:23:38","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"8","ThreeCycle","4","eval_input","2020-04-06 15:23:41","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"8","ThreeCycle","5","eval_input","2020-04-06 15:23:51","inst myInst {
  Node = A + B
  edges = B->A
}","false","","","","",""
"8","ThreeCycle","6","eval_input","2020-04-06 15:23:55","inst myInst {
  Node = A + B
  edges = B->A + A->B
}","false","","","","",""
"8","ThreeCycle","7","eval_input","2020-04-06 15:23:59","inst myInst {
  Node = A + B + C
  edges = B->A + A->B
}","false","","","","",""
"8","ThreeCycle","8","eval_input","2020-04-06 15:24:09","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"8","ThreeCycle","9","eval_input","2020-04-06 15:26:02","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"8","ThreeCycle","10","eval_input","2020-04-06 15:26:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + B->A
}","false","","","","",""
"8","ThreeCycle","11","eval_input","2020-04-06 15:26:11","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"8","ThreeCycle","12","eval_input","2020-04-06 15:26:16","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"8","ThreeCycle","13","eval_input","2020-04-06 15:26:42","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","false","","","","",""
"8","ThreeCycle","14","eval_input","2020-04-06 15:26:46","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"8","ThreeCycle","15","eval_input","2020-04-06 15:27:12","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"8","ThreeCycle","16","eval_input","2020-04-06 15:27:27","inst myInst {
  Node = A + B + C + D
  edges = B->D + D->A + A->B
}","true","","","","",""
"8","ThreeCycle","17","eval_input","2020-04-06 15:27:36","inst myInst {
  Node = A + B + C + D
  edges = B->D + D->A + A->B
}","true","","","","",""
"8","ThreeCycle","18","eval_input","2020-04-06 15:27:39","inst myInst {
  Node = A + B + C + D + E
  edges = B->D + D->A + A->B
}","true","","","","",""
"8","ThreeCycle","19","eval_input","2020-04-06 15:27:51","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A
}","true","","","","",""
"8","ThreeCycle","20","eval_input","2020-04-06 15:27:55","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E
}","true","","","","",""
"8","ThreeCycle","21","eval_input","2020-04-06 15:28:02","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->A
}","true","","","","",""
"8","ThreeCycle","22","eval_input","2020-04-06 15:28:13","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->A
          + B->A
}","true","","","","",""
"8","ThreeCycle","23","eval_input","2020-04-06 15:28:21","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A
}","true","","","","",""
"8","ThreeCycle","24","quiz_answer","2020-04-06 15:28:44","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"8","ThreeCycle","25","quiz_answer","2020-04-06 15:28:48","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"8","ThreeCycle","26","quiz_answer","2020-04-06 15:28:50","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"8","ThreeCycle","27","quiz_answer","2020-04-06 15:28:56","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"8","ThreeCycle","28","quiz_answer","2020-04-06 15:29:00","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"8","ThreeCycle","29","quiz_answer","2020-04-06 15:29:04","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"8","ThreeCycle","30","quiz_answer","2020-04-06 15:29:28","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"8","ThreeCycle","31","quiz_answer","2020-04-06 15:29:41","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"8","ThreeCycle","32","final_answer","2020-04-06 15:29:43","","","","","","there exists a cycle with 3 nodes",""
"8","IsDag","33","eval_input","2020-04-06 15:31:05","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A
}","false","","","","",""
"8","IsDag","34","eval_input","2020-04-06 15:31:15","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"8","IsDag","35","eval_input","2020-04-06 15:31:18","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"8","IsDag","36","eval_input","2020-04-06 15:31:22","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"8","IsDag","37","eval_input","2020-04-06 15:31:25","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"8","IsDag","38","eval_input","2020-04-06 15:31:29","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"8","IsDag","39","eval_input","2020-04-06 15:31:32","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"8","IsDag","40","eval_input","2020-04-06 15:31:36","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"8","IsDag","41","eval_input","2020-04-06 15:31:38","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"8","IsDag","42","eval_input","2020-04-06 15:31:42","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"8","IsDag","43","eval_input","2020-04-06 15:31:52","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + C->A
}","false","","","","",""
"8","IsDag","44","quiz_answer","2020-04-06 15:32:02","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"8","IsDag","45","quiz_answer","2020-04-06 15:32:05","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"8","IsDag","46","quiz_answer","2020-04-06 15:32:09","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"8","IsDag","47","quiz_answer","2020-04-06 15:32:18","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"8","IsDag","48","quiz_answer","2020-04-06 15:32:22","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"8","IsDag","49","quiz_answer","2020-04-06 15:32:30","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","true","false","",""
"8","IsDag","50","quiz_answer","2020-04-06 15:32:46","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"8","IsDag","51","quiz_answer","2020-04-06 15:32:49","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"8","IsDag","52","quiz_answer","2020-04-06 15:32:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"8","IsDag","53","quiz_answer","2020-04-06 15:32:53","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"8","IsDag","54","quiz_answer","2020-04-06 15:32:56","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"8","IsDag","55","quiz_answer","2020-04-06 15:33:02","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"8","IsDag","56","quiz_answer","2020-04-06 15:34:34","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"8","IsDag","57","quiz_answer","2020-04-06 15:34:39","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"8","IsDag","58","final_answer","2020-04-06 15:34:40","","","","","","no cycles!",""
"8","IsBipartite","59","eval_input","2020-04-06 15:35:07","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"8","IsBipartite","60","eval_input","2020-04-06 15:35:10","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"8","IsBipartite","61","eval_input","2020-04-06 15:35:13","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"8","IsBipartite","62","eval_input","2020-04-06 15:35:16","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"8","IsBipartite","63","eval_input","2020-04-06 15:35:19","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"8","IsBipartite","64","eval_input","2020-04-06 15:35:25","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"8","IsBipartite","65","eval_input","2020-04-06 15:35:29","inst myInst {
  Node = A + B
  edges = A->B + B->A + B->B
}","false","","","","",""
"8","IsBipartite","66","eval_input","2020-04-06 15:35:39","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->B
}","true","","","","",""
"8","IsBipartite","67","eval_input","2020-04-06 15:35:47","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->B + C->A
}","true","","","","",""
"8","IsBipartite","68","eval_input","2020-04-06 15:35:50","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->B + C->A + A->C
}","false","","","","",""
"8","IsBipartite","69","eval_input","2020-04-06 15:36:33","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->B + C->A
}","true","","","","",""
"8","IsBipartite","70","eval_input","2020-04-06 15:36:39","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->B + C->A + B->C
}","false","","","","",""
"8","IsBipartite","71","eval_input","2020-04-06 15:38:29","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A + C->B + C->A
}","true","","","","",""
"8","IsBipartite","72","eval_input","2020-04-06 15:38:35","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A + C->B + A->C
}","false","","","","",""
"8","IsBipartite","73","quiz_answer","2020-04-06 15:40:22","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"8","IsBipartite","74","eval_input","2020-04-06 15:40:58","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"8","IsBipartite","75","eval_input","2020-04-06 15:41:03","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C 
}","true","","","","",""
"8","IsBipartite","76","eval_input","2020-04-06 15:41:07","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + A->C
}","true","","","","",""
"8","IsBipartite","77","eval_input","2020-04-06 15:41:13","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + A->C + C->A
}","false","","","","",""
"8","IsBipartite","78","eval_input","2020-04-06 15:41:27","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->D
}","false","","","","",""
"8","IsBipartite","79","quiz_answer","2020-04-06 15:41:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"8","IsBipartite","80","quiz_answer","2020-04-06 15:41:40","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"8","IsBipartite","81","quiz_answer","2020-04-06 15:41:43","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"8","IsBipartite","82","eval_input","2020-04-06 15:41:52","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","true","","","","",""
"8","IsBipartite","83","eval_input","2020-04-06 15:42:03","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"8","IsBipartite","84","eval_input","2020-04-06 15:42:08","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"8","IsBipartite","85","eval_input","2020-04-06 15:42:13","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + D->D
}","false","","","","",""
"8","IsBipartite","86","eval_input","2020-04-06 15:42:22","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->D
}","true","","","","",""
"8","IsBipartite","87","eval_input","2020-04-06 15:43:52","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->D
}","true","","","","",""
"8","IsBipartite","88","eval_input","2020-04-06 15:45:23","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->D
}","true","","","","",""
"8","IsBipartite","89","eval_input","2020-04-06 15:48:05","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->D
}","true","","","","",""
"8","IsBipartite","90","eval_input","2020-04-06 15:48:13","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->A
}","false","","","","",""
"8","IsBipartite","91","eval_input","2020-04-06 15:48:21","inst myInst {
  Node = A + B + C + D
  edges = A->A
}","false","","","","",""
"8","IsBipartite","92","eval_input","2020-04-06 15:48:26","inst myInst {
  Node = A + B + C + D
  edges = D->D
}","false","","","","",""
"8","IsBipartite","93","eval_input","2020-04-06 15:48:33","inst myInst {
  Node = A + B + C + D
  edges = A->D
}","true","","","","",""
"8","IsBipartite","94","eval_input","2020-04-06 15:48:37","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"8","IsBipartite","95","eval_input","2020-04-06 15:48:43","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","true","","","","",""
"8","IsBipartite","96","eval_input","2020-04-06 15:48:47","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C
}","true","","","","",""
"8","IsBipartite","97","eval_input","2020-04-06 15:49:48","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"8","IsBipartite","98","eval_input","2020-04-06 15:49:57","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D
}","true","","","","",""
"9","ThreeCycle","0","eval_input","2020-04-06 15:50:18","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"8","IsBipartite","99","eval_input","2020-04-06 15:50:24","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"8","IsBipartite","100","eval_input","2020-04-06 15:50:29","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"9","ThreeCycle","1","eval_input","2020-04-06 15:50:34","inst myInst {
  Node = A
       + B
       + C
  edges = none
}

inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"8","IsBipartite","101","quiz_answer","2020-04-06 15:50:55","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"8","IsBipartite","102","quiz_answer","2020-04-06 15:50:59","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"8","IsBipartite","103","quiz_answer","2020-04-06 15:51:04","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"9","ThreeCycle","2","eval_input","2020-04-06 15:51:11","inst myInst {
  Node = none
  edges = none
}

inst myInst {
  Node = A
  edges = none
}

inst myInst {
  Node = A + B
  edges = none
}

inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"8","IsBipartite","104","quiz_answer","2020-04-06 15:51:14","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"8","IsBipartite","105","quiz_answer","2020-04-06 15:51:17","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"8","IsBipartite","106","quiz_answer","2020-04-06 15:51:23","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"8","IsBipartite","107","quiz_answer","2020-04-06 15:51:27","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"8","IsBipartite","108","quiz_answer","2020-04-06 15:51:33","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"8","IsBipartite","109","final_answer","2020-04-06 15:51:34","","","","","","odd cycle",""
"9","ThreeCycle","3","eval_input","2020-04-06 15:51:51","inst myInst {
  Node = A
  edges = none
}

inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"9","ThreeCycle","4","eval_input","2020-04-06 15:51:56","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"9","ThreeCycle","5","eval_input","2020-04-06 15:52:00","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"9","ThreeCycle","6","eval_input","2020-04-06 15:52:06","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"9","ThreeCycle","7","eval_input","2020-04-06 15:52:17","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"9","ThreeCycle","8","eval_input","2020-04-06 15:52:25","inst myInst {
  Node = A + B
  edges = A -> B
}","false","","","","",""
"9","ThreeCycle","9","eval_input","2020-04-06 15:52:27","inst myInst {
  Node = A + B
  edges = A -> B
}","false","","","","",""
"9","ThreeCycle","10","eval_input","2020-04-06 15:52:28","inst myInst {
  Node = A + B
  edges = A -> B
}","false","","","","",""
"9","ThreeCycle","11","eval_input","2020-04-06 15:52:34","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"9","ThreeCycle","12","eval_input","2020-04-06 15:52:51","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"9","ThreeCycle","13","eval_input","2020-04-06 15:52:58","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"9","ThreeCycle","14","eval_input","2020-04-06 15:53:10","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"9","ThreeCycle","15","eval_input","2020-04-06 15:53:15","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"9","ThreeCycle","16","eval_input","2020-04-06 15:53:17","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"9","ThreeCycle","17","eval_input","2020-04-06 15:53:17","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"9","ThreeCycle","18","eval_input","2020-04-06 15:53:24","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"9","ThreeCycle","19","eval_input","2020-04-06 15:53:29","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"9","ThreeCycle","20","eval_input","2020-04-06 15:53:38","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"9","ThreeCycle","21","eval_input","2020-04-06 15:53:58","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"9","ThreeCycle","22","eval_input","2020-04-06 15:54:24","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","false","","","","",""
"9","ThreeCycle","23","eval_input","2020-04-06 15:54:33","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"9","ThreeCycle","24","eval_input","2020-04-06 15:54:44","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"9","ThreeCycle","25","eval_input","2020-04-06 15:55:06","inst myInst {
  Node = A + B + C + D
  edges = B->C + C->A + A->B
}","true","","","","",""
"9","ThreeCycle","26","eval_input","2020-04-06 15:55:18","inst myInst {
  Node = A + B + C + D
  edges = B->C + C->A + A->D
}","false","","","","",""
"9","ThreeCycle","27","eval_input","2020-04-06 15:55:34","inst myInst {
  Node = A + B + C + D
  edges = D->C + C->A + A->D
}","true","","","","",""
"9","ThreeCycle","28","quiz_answer","2020-04-06 15:55:57","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"9","ThreeCycle","29","quiz_answer","2020-04-06 15:56:01","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"9","ThreeCycle","30","quiz_answer","2020-04-06 15:56:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"9","ThreeCycle","31","quiz_answer","2020-04-06 15:56:14","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"9","ThreeCycle","32","quiz_answer","2020-04-06 15:56:19","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"9","ThreeCycle","33","quiz_answer","2020-04-06 15:56:24","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"9","ThreeCycle","34","quiz_answer","2020-04-06 15:56:30","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"9","ThreeCycle","35","quiz_answer","2020-04-06 15:56:39","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"9","ThreeCycle","36","final_answer","2020-04-06 15:56:41","","","","","","Cycle of length/size 3",""
"9","IsDag","37","eval_input","2020-04-06 15:57:00","inst myInst {
  Node = A + B + C + D
  edges = D->C + C->A + A->D
}","false","","","","",""
"9","IsDag","38","eval_input","2020-04-06 15:57:13","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"9","IsDag","39","eval_input","2020-04-06 15:57:20","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"9","IsDag","40","eval_input","2020-04-06 15:57:24","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"9","IsDag","41","eval_input","2020-04-06 15:57:34","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"9","IsDag","42","eval_input","2020-04-06 15:57:39","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"9","IsDag","43","eval_input","2020-04-06 15:57:44","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"9","IsDag","44","eval_input","2020-04-06 15:57:47","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"9","IsDag","45","eval_input","2020-04-06 15:57:54","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"9","IsDag","46","eval_input","2020-04-06 15:58:02","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"9","IsDag","47","eval_input","2020-04-06 15:58:05","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"9","IsDag","48","eval_input","2020-04-06 15:58:09","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"9","IsDag","49","eval_input","2020-04-06 15:58:22","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"9","IsDag","50","eval_input","2020-04-06 15:58:40","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->B
}","true","","","","",""
"9","IsDag","51","eval_input","2020-04-06 15:58:46","inst myInst {
  Node = A + B + C + D
  edges = A->B + A->C
}","true","","","","",""
"9","IsDag","52","eval_input","2020-04-06 15:58:52","inst myInst {
  Node = A + B + C + D
  edges = A->B + A->C
}","true","","","","",""
"9","IsDag","53","eval_input","2020-04-06 15:58:52","inst myInst {
  Node = A + B + C + D
  edges = A->B + A->C
}","true","","","","",""
"9","IsDag","54","eval_input","2020-04-06 15:58:57","inst myInst {
  Node = A + B + C + D
  edges = A->B + A->C + D->C
}","true","","","","",""
"9","IsDag","55","eval_input","2020-04-06 15:59:02","inst myInst {
  Node = A + B + C + D
  edges = A->B + A->C + D->C
}","true","","","","",""
"9","IsDag","56","eval_input","2020-04-06 15:59:07","inst myInst {
  Node = A + B + C + D
  edges = A->B + A->C + D->C + C->A
}","false","","","","",""
"9","IsDag","57","eval_input","2020-04-06 15:59:18","inst myInst {
  Node = A + B + C + D
  edges = A->B + A->C + D->C + C->B
}","true","","","","",""
"9","IsDag","58","quiz_answer","2020-04-06 15:59:38","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"9","IsDag","59","quiz_answer","2020-04-06 15:59:41","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"9","IsDag","60","quiz_answer","2020-04-06 15:59:45","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"9","IsDag","61","quiz_answer","2020-04-06 15:59:54","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"9","IsDag","62","quiz_answer","2020-04-06 15:59:58","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"9","IsDag","63","quiz_answer","2020-04-06 16:00:05","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"9","IsDag","64","quiz_answer","2020-04-06 16:00:12","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"9","IsDag","65","quiz_answer","2020-04-06 16:00:23","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"9","IsDag","66","final_answer","2020-04-06 16:00:24","","","","","","does not contain cycles",""
"9","IsBipartite","67","eval_input","2020-04-06 16:00:42","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"9","IsBipartite","68","eval_input","2020-04-06 16:00:47","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"9","IsBipartite","69","eval_input","2020-04-06 16:00:51","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"9","IsBipartite","70","eval_input","2020-04-06 16:00:57","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"9","IsBipartite","71","eval_input","2020-04-06 16:01:00","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"9","IsBipartite","72","eval_input","2020-04-06 16:01:07","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"9","IsBipartite","73","eval_input","2020-04-06 16:01:22","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"9","IsBipartite","74","eval_input","2020-04-06 16:01:28","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"9","IsBipartite","75","eval_input","2020-04-06 16:01:37","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"9","IsBipartite","76","eval_input","2020-04-06 16:01:37","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"9","IsBipartite","77","eval_input","2020-04-06 16:01:41","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + C->C
}","false","","","","",""
"9","IsBipartite","78","eval_input","2020-04-06 16:02:01","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"9","IsBipartite","79","eval_input","2020-04-06 16:02:11","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"9","IsBipartite","80","eval_input","2020-04-06 16:02:23","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"9","IsBipartite","81","eval_input","2020-04-06 16:02:27","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"9","IsBipartite","82","eval_input","2020-04-06 16:02:27","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"9","IsBipartite","83","eval_input","2020-04-06 16:02:30","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"9","IsBipartite","84","eval_input","2020-04-06 16:02:46","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"9","IsBipartite","85","eval_input","2020-04-06 16:02:55","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A
}","false","","","","",""
"9","IsBipartite","86","eval_input","2020-04-06 16:03:10","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"9","IsBipartite","87","quiz_answer","2020-04-06 16:03:33","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"9","IsBipartite","88","quiz_answer","2020-04-06 16:03:36","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"9","IsBipartite","89","quiz_answer","2020-04-06 16:03:39","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"9","IsBipartite","90","quiz_answer","2020-04-06 16:03:48","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"9","IsBipartite","91","quiz_answer","2020-04-06 16:03:52","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"9","IsBipartite","92","quiz_answer","2020-04-06 16:03:56","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"9","IsBipartite","93","quiz_answer","2020-04-06 16:04:04","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"9","IsBipartite","94","quiz_answer","2020-04-06 16:04:09","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"9","IsBipartite","95","final_answer","2020-04-06 16:04:10","","","","","","true for relations which do not contain a cycle of an odd size",""
"10","IsDag","0","eval_input","2020-04-06 16:35:23","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"10","IsDag","1","eval_input","2020-04-06 16:35:49","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"10","IsDag","2","eval_input","2020-04-06 16:36:04","inst myInst {
  Node = A + B
  edges = A -> A
}","false","","","","",""
"10","IsDag","3","eval_input","2020-04-06 16:36:09","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"10","IsDag","4","eval_input","2020-04-06 16:36:22","inst myInst {
  Node = A + B
  edges = A -> A + B -> B
}","false","","","","",""
"10","IsDag","5","eval_input","2020-04-06 16:36:29","inst myInst {
  Node = A + B
  edges = A -> B + B -> B
}","false","","","","",""
"10","IsDag","6","eval_input","2020-04-06 16:36:45","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"10","IsDag","7","eval_input","2020-04-06 18:00:48","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"10","IsDag","8","quiz_answer","2020-04-06 18:03:49","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"10","IsDag","9","quiz_answer","2020-04-06 18:05:11","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","IsDag","10","quiz_answer","2020-04-06 18:05:23","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"10","IsDag","11","quiz_answer","2020-04-06 18:05:33","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"10","IsDag","12","quiz_answer","2020-04-06 18:05:50","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"10","IsDag","13","quiz_answer","2020-04-06 18:05:56","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"10","IsDag","14","quiz_answer","2020-04-06 18:06:03","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"10","IsDag","15","quiz_answer","2020-04-06 18:06:10","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"10","IsDag","16","quiz_answer","2020-04-06 18:06:16","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"10","IsDag","17","final_answer","2020-04-06 18:06:18","","","","","","It tests if the graph is acyclic.",""
"10","IsBipartite","18","eval_input","2020-04-06 18:08:03","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"11","IsDag","0","eval_input","2020-04-06 18:08:13","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"10","IsBipartite","19","eval_input","2020-04-06 18:08:18","inst myInst {
  Node = A + B + C
  edges = A -> A
}","false","","","","",""
"11","IsDag","1","eval_input","2020-04-06 18:08:18","inst myInst {
  Node = A
       + B
      
  edges = none
}","true","","","","",""
"11","IsDag","2","eval_input","2020-04-06 18:08:22","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"11","IsDag","3","eval_input","2020-04-06 18:08:27","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"11","IsDag","4","eval_input","2020-04-06 18:08:33","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"11","IsDag","5","eval_input","2020-04-06 18:08:39","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"10","IsBipartite","20","eval_input","2020-04-06 18:08:45","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A
}","true","","","","",""
"11","IsDag","6","eval_input","2020-04-06 18:08:51","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C + C->A
}","false","","","","",""
"10","IsBipartite","21","eval_input","2020-04-06 18:08:54","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A + A -> C
}","true","","","","",""
"11","IsDag","7","eval_input","2020-04-06 18:09:00","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C + C->B
}","false","","","","",""
"11","IsDag","8","eval_input","2020-04-06 18:09:04","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C + B->A
}","false","","","","",""
"10","IsBipartite","22","eval_input","2020-04-06 18:09:10","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"11","IsDag","9","eval_input","2020-04-06 18:09:16","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"11","IsDag","10","eval_input","2020-04-06 18:09:24","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D
}","true","","","","",""
"11","IsDag","11","eval_input","2020-04-06 18:09:35","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D
        + A->D
}","true","","","","",""
"11","IsDag","12","eval_input","2020-04-06 18:09:41","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D
        + A->D + B->D
}","true","","","","",""
"11","IsDag","13","eval_input","2020-04-06 18:09:45","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D
        + A->D + B->D + D->A
}","false","","","","",""
"12","IsBipartite","0","eval_input","2020-04-06 18:10:07","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"12","IsBipartite","1","eval_input","2020-04-06 18:10:34","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"12","IsBipartite","2","eval_input","2020-04-06 18:10:41","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->C
}","true","","","","",""
"10","IsBipartite","23","quiz_answer","2020-04-06 18:10:41","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"11","IsDag","14","eval_input","2020-04-06 18:10:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B
}","true","","","","",""
"12","IsBipartite","3","eval_input","2020-04-06 18:10:46","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->C+A->C
}","true","","","","",""
"12","IsBipartite","4","eval_input","2020-04-06 18:10:56","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->A
}","true","","","","",""
"11","IsDag","15","eval_input","2020-04-06 18:10:56","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"10","IsBipartite","24","eval_input","2020-04-06 18:11:03","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"12","IsBipartite","5","eval_input","2020-04-06 18:11:17","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->A+A->C+C->A+B->C+C->B
}","false","","","","",""
"12","IsBipartite","6","eval_input","2020-04-06 18:11:29","inst myInst {
  Node = A
       + B
  edges = A->B+B->A
}","true","","","","",""
"12","IsBipartite","7","eval_input","2020-04-06 18:11:49","inst myInst {
  Node = A
       + B
  edges = A->B
}","true","","","","",""
"11","IsDag","16","eval_input","2020-04-06 18:11:58","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->D
}","true","","","","",""
"12","IsBipartite","8","eval_input","2020-04-06 18:12:03","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+B->A+A->C+C->A+B->C+C->B
}","false","","","","",""
"11","IsDag","17","eval_input","2020-04-06 18:12:16","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"12","IsBipartite","9","eval_input","2020-04-06 18:12:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+B->A+A->C+C->A+B->C
}","false","","","","",""
"12","IsBipartite","10","eval_input","2020-04-06 18:12:26","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+B->A+A->C+C->A
}","true","","","","",""
"10","IsBipartite","25","eval_input","2020-04-06 18:12:29","inst myInst {
  Node = A + B
  edges = A -> A + B -> B
}","false","","","","",""
"10","IsBipartite","26","eval_input","2020-04-06 18:12:40","inst myInst {
  Node = A + B
  edges = A -> A + B -> B + A -> B
}","false","","","","",""
"10","IsBipartite","27","eval_input","2020-04-06 18:12:48","inst myInst {
  Node = A + B
  edges = A -> A + B -> B + A -> B + B -> A
}","false","","","","",""
"10","IsBipartite","28","eval_input","2020-04-06 18:12:55","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","true","","","","",""
"10","IsBipartite","29","eval_input","2020-04-06 18:13:08","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"12","IsBipartite","11","eval_input","2020-04-06 18:13:26","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+B->A+A->C+C->A+C->B
}","false","","","","",""
"10","IsBipartite","30","eval_input","2020-04-06 18:13:41","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A + B -> C + C -> B + C -> A + A -> C
}","false","","","","",""
"12","IsBipartite","12","eval_input","2020-04-06 18:13:46","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+A->C+C->A+C->B
}","true","","","","",""
"11","IsDag","18","quiz_answer","2020-04-06 18:14:25","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","IsDag","19","quiz_answer","2020-04-06 18:14:34","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"11","IsDag","20","quiz_answer","2020-04-06 18:14:38","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"11","IsDag","21","quiz_answer","2020-04-06 18:14:46","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"10","IsBipartite","31","eval_input","2020-04-06 18:14:46","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A + A -> C + C -> A
}","true","","","","",""
"11","IsDag","22","quiz_answer","2020-04-06 18:14:50","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"10","IsBipartite","32","eval_input","2020-04-06 18:14:56","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A + A -> C + C -> D
}","true","","","","",""
"11","IsDag","23","quiz_answer","2020-04-06 18:14:56","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"11","IsDag","24","quiz_answer","2020-04-06 18:15:10","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"10","IsBipartite","33","quiz_answer","2020-04-06 18:15:19","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","IsDag","25","quiz_answer","2020-04-06 18:15:20","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"11","IsDag","26","final_answer","2020-04-06 18:15:22","","","","","","pred rules{
    edges.edges in edges  --transitive
    no iden & edges.            --irreflexive
    ~edges not in edges    --antisymmetric
}",""
"10","IsBipartite","34","quiz_answer","2020-04-06 18:15:24","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"10","IsBipartite","35","quiz_answer","2020-04-06 18:15:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"10","IsBipartite","36","quiz_answer","2020-04-06 18:15:38","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"12","IsBipartite","13","eval_input","2020-04-06 18:15:52","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+B->A+A->C+C->A
}","true","","","","",""
"12","IsBipartite","14","eval_input","2020-04-06 18:16:01","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+B->A+A->C+C->A+B->C
}","false","","","","",""
"11","IsBipartite","27","eval_input","2020-04-06 18:16:07","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"10","IsBipartite","37","eval_input","2020-04-06 18:16:11","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C
}","true","","","","",""
"11","IsBipartite","28","eval_input","2020-04-06 18:16:16","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B
}","true","","","","",""
"11","IsBipartite","29","eval_input","2020-04-06 18:16:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A
}","true","","","","",""
"10","IsBipartite","38","eval_input","2020-04-06 18:16:22","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D
}","true","","","","",""
"10","IsBipartite","39","eval_input","2020-04-06 18:16:34","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + E -> B
}","true","","","","",""
"11","IsBipartite","30","eval_input","2020-04-06 18:16:54","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + C->A
}","true","","","","",""
"10","IsBipartite","40","eval_input","2020-04-06 18:16:56","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + E -> B + E -> D
}","true","","","","",""
"11","IsBipartite","31","eval_input","2020-04-06 18:17:01","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + C->A + A->C
}","true","","","","",""
"10","IsBipartite","41","eval_input","2020-04-06 18:17:07","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + E -> B + E -> D + D -> A
}","true","","","","",""
"11","IsBipartite","32","eval_input","2020-04-06 18:17:15","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C
}","true","","","","",""
"11","IsBipartite","33","eval_input","2020-04-06 18:17:26","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->A
}","false","","","","",""
"12","IsBipartite","15","eval_input","2020-04-06 18:17:27","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B+B->A+A->C+C->A+B->C
}","false","","","","",""
"12","IsBipartite","16","eval_input","2020-04-06 18:17:31","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B+B->A+A->C+C->A+B->C
}","false","","","","",""
"10","IsBipartite","42","eval_input","2020-04-06 18:17:37","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + E -> B + E -> D + D -> A + D -> E
}","true","","","","",""
"11","IsBipartite","34","eval_input","2020-04-06 18:17:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->B
}","true","","","","",""
"11","IsBipartite","35","eval_input","2020-04-06 18:17:50","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->B + B->A
}","false","","","","",""
"10","IsBipartite","43","eval_input","2020-04-06 18:18:14","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + E -> B + E -> D + D -> A + D -> E + C -> A
}","false","","","","",""
"11","IsBipartite","36","eval_input","2020-04-06 18:18:19","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->B + C->D
}","true","","","","",""
"11","IsBipartite","37","eval_input","2020-04-06 18:18:23","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->B + C->D + D->B
}","false","","","","",""
"12","IsBipartite","17","quiz_answer","2020-04-06 18:18:26","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","IsBipartite","38","eval_input","2020-04-06 18:18:27","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D + D->B
}","false","","","","",""
"12","IsBipartite","18","quiz_answer","2020-04-06 18:18:31","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"11","IsBipartite","39","eval_input","2020-04-06 18:18:32","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D
}","true","","","","",""
"11","IsBipartite","40","eval_input","2020-04-06 18:18:38","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D + D->C
}","true","","","","",""
"10","IsBipartite","44","quiz_answer","2020-04-06 18:18:42","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","IsBipartite","19","quiz_answer","2020-04-06 18:18:46","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"10","IsBipartite","45","quiz_answer","2020-04-06 18:18:47","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"10","IsBipartite","46","quiz_answer","2020-04-06 18:18:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"11","IsBipartite","41","eval_input","2020-04-06 18:19:22","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D + D->C
        + A->D
}","true","","","","",""
"11","IsBipartite","42","eval_input","2020-04-06 18:19:29","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + A->C + C->D + D->C
        + A->D
}","true","","","","",""
"11","IsBipartite","43","eval_input","2020-04-06 18:19:41","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->B
}","true","","","","",""
"12","IsBipartite","20","eval_input","2020-04-06 18:19:58","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B+B->A+A->C+C->A+B->C
}","false","","","","",""
"11","IsBipartite","44","eval_input","2020-04-06 18:20:01","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->B + A->C
}","true","","","","",""
"10","IsBipartite","47","eval_input","2020-04-06 18:20:07","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"10","IsBipartite","48","eval_input","2020-04-06 18:20:15","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","true","","","","",""
"10","IsBipartite","49","eval_input","2020-04-06 18:20:24","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A
}","true","","","","",""
"11","IsBipartite","45","eval_input","2020-04-06 18:20:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->B + A->C
}","true","","","","",""
"10","IsBipartite","50","eval_input","2020-04-06 18:20:39","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A + C -> D
}","true","","","","",""
"10","IsBipartite","51","eval_input","2020-04-06 18:20:53","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A + C -> D + B -> C
}","true","","","","",""
"10","IsBipartite","52","eval_input","2020-04-06 18:20:59","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A + B -> C
}","true","","","","",""
"10","IsBipartite","53","eval_input","2020-04-06 18:21:08","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A + B -> C + A -> C
}","true","","","","",""
"10","IsBipartite","54","eval_input","2020-04-06 18:21:20","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> A + B -> C + C -> A
}","false","","","","",""
"10","IsBipartite","55","eval_input","2020-04-06 18:21:28","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"10","IsBipartite","56","eval_input","2020-04-06 18:21:40","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> A + C -> D
}","false","","","","",""
"11","IsBipartite","46","eval_input","2020-04-06 18:21:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"11","IsBipartite","47","eval_input","2020-04-06 18:21:48","inst myInst {
  Node = none 
  edges = none
}","true","","","","",""
"11","IsBipartite","48","eval_input","2020-04-06 18:21:52","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->B + A->C
}","true","","","","",""
"11","IsBipartite","49","eval_input","2020-04-06 18:22:13","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C
}","true","","","","",""
"11","IsBipartite","50","eval_input","2020-04-06 18:22:19","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C
}","true","","","","",""
"11","IsBipartite","51","eval_input","2020-04-06 18:22:48","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + B->A
}","true","","","","",""
"11","IsBipartite","52","eval_input","2020-04-06 18:22:54","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + B->A + C->A
}","false","","","","",""
"11","IsBipartite","53","eval_input","2020-04-06 18:23:01","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + B->A + C->B
}","false","","","","",""
"11","IsBipartite","54","eval_input","2020-04-06 18:23:35","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + A->C + C->D + D->B
}","false","","","","",""
"11","IsBipartite","55","eval_input","2020-04-06 18:24:01","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->C + C->D + D->B
}","false","","","","",""
"11","IsBipartite","56","eval_input","2020-04-06 18:24:07","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->C + C->D + C->B
}","true","","","","",""
"11","IsBipartite","57","eval_input","2020-04-06 18:24:11","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->C + C->D + C->B + D->C
}","true","","","","",""
"11","IsBipartite","58","quiz_answer","2020-04-06 18:24:35","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","IsBipartite","59","quiz_answer","2020-04-06 18:24:42","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"11","IsBipartite","60","quiz_answer","2020-04-06 18:24:49","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"11","IsBipartite","61","quiz_answer","2020-04-06 18:24:57","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"10","IsBipartite","57","eval_input","2020-04-06 18:25:00","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> A + C -> D + D -> C
}","false","","","","",""
"11","IsBipartite","62","quiz_answer","2020-04-06 18:25:01","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"11","IsBipartite","63","quiz_answer","2020-04-06 18:25:05","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"11","IsBipartite","64","quiz_answer","2020-04-06 18:25:12","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"11","IsBipartite","65","quiz_answer","2020-04-06 18:26:03","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"12","IsBipartite","21","quiz_answer","2020-04-06 18:26:39","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","IsBipartite","66","quiz_answer","2020-04-06 18:26:39","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","IsBipartite","67","quiz_answer","2020-04-06 18:26:43","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"12","IsBipartite","22","quiz_answer","2020-04-06 18:26:43","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"12","IsBipartite","23","quiz_answer","2020-04-06 18:26:48","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"12","IsBipartite","24","final_answer","2020-04-06 18:26:50","","","","","","contains no self-loops",""
"11","IsBipartite","68","quiz_answer","2020-04-06 18:26:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"10","IsBipartite","58","quiz_answer","2020-04-06 18:26:53","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","IsBipartite","69","quiz_answer","2020-04-06 18:26:55","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"10","IsBipartite","59","quiz_answer","2020-04-06 18:26:58","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"11","IsBipartite","70","quiz_answer","2020-04-06 18:26:59","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"11","IsBipartite","71","quiz_answer","2020-04-06 18:27:02","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"11","IsBipartite","72","quiz_answer","2020-04-06 18:27:05","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"10","IsBipartite","60","quiz_answer","2020-04-06 18:27:07","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"11","IsBipartite","73","quiz_answer","2020-04-06 18:27:13","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"11","IsBipartite","74","final_answer","2020-04-06 18:27:22","","","","","","true if directed graph (doesn't need to be acyclic, but no loops greater than one node apart? kind of confusing)",""
"10","IsBipartite","61","quiz_answer","2020-04-06 18:27:32","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"11","ThreeCycle","75","eval_input","2020-04-06 18:27:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->C + C->D + C->B + D->C
}","false","","","","",""
"11","ThreeCycle","76","eval_input","2020-04-06 18:27:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + C->B + D->C
}","false","","","","",""
"11","ThreeCycle","77","eval_input","2020-04-06 18:27:51","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D
}","false","","","","",""
"11","ThreeCycle","78","eval_input","2020-04-06 18:27:56","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"11","ThreeCycle","79","eval_input","2020-04-06 18:28:00","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"11","ThreeCycle","80","eval_input","2020-04-06 18:28:05","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"11","ThreeCycle","81","eval_input","2020-04-06 18:28:07","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"12","ThreeCycle","25","eval_input","2020-04-06 18:28:24","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->A
}","false","","","","",""
"11","ThreeCycle","82","eval_input","2020-04-06 18:28:28","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A + B->B
}","false","","","","",""
"11","ThreeCycle","83","eval_input","2020-04-06 18:28:31","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A
}","false","","","","",""
"12","ThreeCycle","26","eval_input","2020-04-06 18:28:34","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->A
}","false","","","","",""
"11","ThreeCycle","84","eval_input","2020-04-06 18:28:34","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"11","ThreeCycle","85","eval_input","2020-04-06 18:28:37","inst myInst {
  Node = A + B
  edges = B->A
}","false","","","","",""
"12","ThreeCycle","27","eval_input","2020-04-06 18:28:41","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B
}","false","","","","",""
"12","ThreeCycle","28","eval_input","2020-04-06 18:28:55","inst myInst {
  Node = A
       + B
  edges = A->B
}","false","","","","",""
"11","ThreeCycle","86","eval_input","2020-04-06 18:28:58","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"12","ThreeCycle","29","eval_input","2020-04-06 18:29:00","inst myInst {
  Node = A
       + B
  edges = A->B+B->A
}","false","","","","",""
"10","IsBipartite","62","quiz_answer","2020-04-06 18:29:01","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"12","ThreeCycle","30","eval_input","2020-04-06 18:29:11","inst myInst {
  Node = A
       + B
  edges = A->B
}","false","","","","",""
"12","ThreeCycle","31","eval_input","2020-04-06 18:29:18","inst myInst {
  Node = A
       + B
       + C
  edges = A->B 
}","false","","","","",""
"12","ThreeCycle","32","eval_input","2020-04-06 18:29:26","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->A+A->C+C->A
}","false","","","","",""
"10","IsBipartite","63","quiz_answer","2020-04-06 18:29:32","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","IsBipartite","64","quiz_answer","2020-04-06 18:29:37","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"11","ThreeCycle","87","quiz_answer","2020-04-06 18:29:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"11","ThreeCycle","88","quiz_answer","2020-04-06 18:29:40","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"11","ThreeCycle","89","quiz_answer","2020-04-06 18:29:42","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"10","IsBipartite","65","quiz_answer","2020-04-06 18:29:44","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"11","ThreeCycle","90","quiz_answer","2020-04-06 18:29:46","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"11","ThreeCycle","91","quiz_answer","2020-04-06 18:29:49","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"11","ThreeCycle","92","quiz_answer","2020-04-06 18:29:53","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"10","IsBipartite","66","quiz_answer","2020-04-06 18:29:56","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"11","ThreeCycle","93","quiz_answer","2020-04-06 18:29:58","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"11","ThreeCycle","94","quiz_answer","2020-04-06 18:30:01","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"12","ThreeCycle","33","quiz_answer","2020-04-06 18:30:02","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","ThreeCycle","34","quiz_answer","2020-04-06 18:30:06","inst myInst {
      Node = A
      edges = none
    }","true","1","false","false","",""
"11","ThreeCycle","95","final_answer","2020-04-06 18:30:14","","","","","","True if it can be divided into loops of odd size (the opposite of the previous predicate)",""
"12","ThreeCycle","35","quiz_answer","2020-04-06 18:30:21","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","ThreeCycle","36","quiz_answer","2020-04-06 18:30:24","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"12","ThreeCycle","37","quiz_answer","2020-04-06 18:30:27","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"12","ThreeCycle","38","quiz_answer","2020-04-06 18:30:33","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"12","ThreeCycle","39","quiz_answer","2020-04-06 18:30:39","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"12","ThreeCycle","40","eval_input","2020-04-06 18:31:22","inst myInst {
  Node = A
       + B
       + C
  edges = A->C+C->B+B->A
}","true","","","","",""
"10","IsBipartite","67","quiz_answer","2020-04-06 18:31:38","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"12","ThreeCycle","41","quiz_answer","2020-04-06 18:32:16","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","ThreeCycle","42","quiz_answer","2020-04-06 18:32:19","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"12","ThreeCycle","43","quiz_answer","2020-04-06 18:32:24","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"12","ThreeCycle","44","quiz_answer","2020-04-06 18:32:28","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"12","ThreeCycle","45","quiz_answer","2020-04-06 18:32:31","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"10","IsBipartite","68","eval_input","2020-04-06 18:32:34","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"12","ThreeCycle","46","quiz_answer","2020-04-06 18:32:43","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","ThreeCycle","47","quiz_answer","2020-04-06 18:32:46","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"12","ThreeCycle","48","quiz_answer","2020-04-06 18:32:50","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"12","ThreeCycle","49","quiz_answer","2020-04-06 18:32:53","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"12","ThreeCycle","50","quiz_answer","2020-04-06 18:32:57","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"12","ThreeCycle","51","quiz_answer","2020-04-06 18:33:02","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"12","ThreeCycle","52","quiz_answer","2020-04-06 18:33:08","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","false","false","",""
"12","ThreeCycle","53","quiz_answer","2020-04-06 18:33:44","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","ThreeCycle","54","quiz_answer","2020-04-06 18:33:50","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"12","ThreeCycle","55","quiz_answer","2020-04-06 18:33:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"10","IsBipartite","69","eval_input","2020-04-06 18:33:53","inst myInst {
  Node = A + B
  edges = A -> A + B -> B
}","false","","","","",""
"12","ThreeCycle","56","quiz_answer","2020-04-06 18:33:56","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"12","ThreeCycle","57","quiz_answer","2020-04-06 18:33:59","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"10","IsBipartite","70","eval_input","2020-04-06 18:34:00","inst myInst {
  Node = A + B
  edges = A -> A + B -> B + A -> B
}","false","","","","",""
"12","ThreeCycle","58","quiz_answer","2020-04-06 18:34:02","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"12","ThreeCycle","59","quiz_answer","2020-04-06 18:34:05","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"10","IsBipartite","71","eval_input","2020-04-06 18:34:06","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"12","ThreeCycle","60","quiz_answer","2020-04-06 18:34:16","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"12","ThreeCycle","61","quiz_answer","2020-04-06 18:34:43","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","IsBipartite","72","eval_input","2020-04-06 18:34:46","inst myInst {
  Node = A + B + C
  edges = A -> B + A -> C
}","true","","","","",""
"12","ThreeCycle","62","quiz_answer","2020-04-06 18:34:47","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"12","ThreeCycle","63","quiz_answer","2020-04-06 18:34:49","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"12","ThreeCycle","64","quiz_answer","2020-04-06 18:34:52","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"12","ThreeCycle","65","quiz_answer","2020-04-06 18:34:54","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"12","ThreeCycle","66","quiz_answer","2020-04-06 18:34:57","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"10","IsBipartite","73","eval_input","2020-04-06 18:34:58","inst myInst {
  Node = A + B + C
  edges = A -> B + A -> C + B -> A
}","true","","","","",""
"12","ThreeCycle","67","quiz_answer","2020-04-06 18:35:00","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"12","ThreeCycle","68","quiz_answer","2020-04-06 18:35:02","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"12","ThreeCycle","69","final_answer","2020-04-06 18:35:05","","","","","","cycle of 3 edges",""
"12","IsDag","70","eval_input","2020-04-06 18:35:16","inst myInst {
  Node = A
       + B
       + C
  edges = A->C+C->B+B->A
}","false","","","","",""
"10","IsBipartite","74","eval_input","2020-04-06 18:35:20","inst myInst {
  Node = A + B + C
  edges = A -> B + A -> C + B -> A + A -> A
}","false","","","","",""
"12","IsDag","71","eval_input","2020-04-06 18:35:22","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"12","IsDag","72","eval_input","2020-04-06 18:35:26","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"12","IsDag","73","eval_input","2020-04-06 18:35:37","inst myInst {
  Node = A+B
  edges = A->B
}","true","","","","",""
"12","IsDag","74","eval_input","2020-04-06 18:35:42","inst myInst {
  Node = A+B+C
  edges = A->B
}","true","","","","",""
"12","IsDag","75","quiz_answer","2020-04-06 18:35:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","IsDag","76","quiz_answer","2020-04-06 18:35:56","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"12","IsDag","77","quiz_answer","2020-04-06 18:35:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"10","IsBipartite","75","quiz_answer","2020-04-06 18:36:11","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","IsBipartite","76","quiz_answer","2020-04-06 18:36:16","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"10","IsBipartite","77","quiz_answer","2020-04-06 18:36:21","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"12","IsDag","78","quiz_answer","2020-04-06 18:36:26","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"10","IsBipartite","78","quiz_answer","2020-04-06 18:36:37","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"10","IsBipartite","79","quiz_answer","2020-04-06 18:36:57","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","IsBipartite","80","quiz_answer","2020-04-06 18:37:01","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"12","IsDag","79","quiz_answer","2020-04-06 18:37:01","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"12","IsDag","80","quiz_answer","2020-04-06 18:37:04","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"10","IsBipartite","81","quiz_answer","2020-04-06 18:37:05","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"12","IsDag","81","quiz_answer","2020-04-06 18:37:06","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"12","IsDag","82","quiz_answer","2020-04-06 18:37:09","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"12","IsDag","83","final_answer","2020-04-06 18:37:10","","","","","","# edges < # nodes",""
"10","IsBipartite","82","quiz_answer","2020-04-06 18:37:24","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"10","IsBipartite","83","quiz_answer","2020-04-06 18:37:34","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"10","IsBipartite","84","quiz_answer","2020-04-06 18:37:40","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"10","IsBipartite","85","quiz_answer","2020-04-06 18:37:45","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"10","IsBipartite","86","eval_input","2020-04-06 18:38:25","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + A -> A
}","false","","","","",""
"10","IsBipartite","87","eval_input","2020-04-06 18:38:34","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"10","IsBipartite","88","quiz_answer","2020-04-06 18:42:50","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","IsBipartite","89","quiz_answer","2020-04-06 18:42:53","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"10","IsBipartite","90","quiz_answer","2020-04-06 18:43:21","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"10","IsBipartite","91","quiz_answer","2020-04-06 18:44:33","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"10","IsBipartite","92","eval_input","2020-04-06 18:47:27","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C
}","true","","","","",""
"10","IsBipartite","93","eval_input","2020-04-06 18:47:36","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C
}","true","","","","",""
"10","IsBipartite","94","eval_input","2020-04-06 18:48:34","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"10","IsBipartite","95","eval_input","2020-04-06 18:48:59","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"10","IsBipartite","96","eval_input","2020-04-06 18:57:30","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"10","IsBipartite","97","eval_input","2020-04-06 19:07:44","inst myInst {
  Node = A + B + C + D
  edges = A -> A
}","false","","","","",""
"10","IsBipartite","98","eval_input","2020-04-06 19:07:49","inst myInst {
  Node = A + B + C + D
  edges = A -> B
}","true","","","","",""
"10","IsBipartite","99","eval_input","2020-04-06 19:07:57","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C
}","true","","","","",""
"10","IsBipartite","100","eval_input","2020-04-06 19:08:09","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + A -> C
}","true","","","","",""
"10","IsBipartite","101","eval_input","2020-04-06 19:09:52","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"10","IsBipartite","102","eval_input","2020-04-06 19:10:12","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"10","IsBipartite","103","eval_input","2020-04-06 19:10:25","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> E + E -> A
}","false","","","","",""
"10","IsBipartite","104","quiz_answer","2020-04-06 19:11:21","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","IsBipartite","105","quiz_answer","2020-04-06 19:11:25","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"10","IsBipartite","106","quiz_answer","2020-04-06 19:11:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"10","IsBipartite","107","quiz_answer","2020-04-06 19:11:45","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"10","IsBipartite","108","quiz_answer","2020-04-06 19:11:52","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"10","IsBipartite","109","quiz_answer","2020-04-06 19:12:06","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"10","IsBipartite","110","quiz_answer","2020-04-06 19:12:16","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"10","IsBipartite","111","quiz_answer","2020-04-06 19:12:24","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"10","IsBipartite","112","final_answer","2020-04-06 19:12:26","","","","","","It tests graphs with cycles of even number nodes.",""
"10","ThreeCycle","113","eval_input","2020-04-06 19:13:10","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> E + E -> A
}","false","","","","",""
"10","ThreeCycle","114","eval_input","2020-04-06 19:13:25","inst myInst {
  Node = A + B
  edges = A -> A
}","false","","","","",""
"10","ThreeCycle","115","eval_input","2020-04-06 19:13:29","inst myInst {
  Node = A + B
  edges = A -> B
}","false","","","","",""
"10","ThreeCycle","116","eval_input","2020-04-06 19:13:37","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"10","ThreeCycle","117","eval_input","2020-04-06 19:13:49","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"10","ThreeCycle","118","eval_input","2020-04-06 19:14:07","inst myInst {
  Node = A + B
  edges = A -> A + B -> B
}","false","","","","",""
"10","ThreeCycle","119","eval_input","2020-04-06 19:14:23","inst myInst {
  Node = A + B
  edges = A -> A + B -> B + A -> B
}","false","","","","",""
"10","ThreeCycle","120","eval_input","2020-04-06 19:14:39","inst myInst {
  Node = A + B + C
  edges = A -> A + B -> B + A -> B
}","false","","","","",""
"10","ThreeCycle","121","eval_input","2020-04-06 19:14:49","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C
}","false","","","","",""
"10","ThreeCycle","122","eval_input","2020-04-06 19:14:55","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C
}","false","","","","",""
"10","ThreeCycle","123","eval_input","2020-04-06 19:15:03","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","true","","","","",""
"10","ThreeCycle","124","eval_input","2020-04-06 19:15:20","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"10","ThreeCycle","125","eval_input","2020-04-06 19:15:43","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","false","","","","",""
"10","ThreeCycle","126","eval_input","2020-04-06 19:15:58","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A + C -> A
}","true","","","","",""
"10","ThreeCycle","127","quiz_answer","2020-04-06 19:16:42","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"10","ThreeCycle","128","quiz_answer","2020-04-06 19:16:47","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"10","ThreeCycle","129","quiz_answer","2020-04-06 19:16:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"10","ThreeCycle","130","quiz_answer","2020-04-06 19:17:06","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"10","ThreeCycle","131","quiz_answer","2020-04-06 19:17:11","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"10","ThreeCycle","132","quiz_answer","2020-04-06 19:17:17","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"10","ThreeCycle","133","quiz_answer","2020-04-06 19:17:21","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"10","ThreeCycle","134","quiz_answer","2020-04-06 19:17:32","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"10","ThreeCycle","135","final_answer","2020-04-06 19:17:33","","","","","","It is to test if a graph has a triangle.",""
"13","IsDag","0","eval_input","2020-04-06 22:49:31","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"13","IsDag","1","eval_input","2020-04-06 22:49:49","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"13","IsDag","2","eval_input","2020-04-06 22:49:54","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"13","IsDag","4","eval_input","2020-04-06 22:50:01","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"13","IsDag","3","eval_input","2020-04-06 22:50:01","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"13","IsDag","5","eval_input","2020-04-06 22:50:06","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"13","IsDag","6","eval_input","2020-04-06 22:50:10","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"13","IsDag","7","eval_input","2020-04-06 22:50:13","inst myInst {
  Node = A + B
  edges = B->B
}","false","","","","",""
"13","IsDag","8","eval_input","2020-04-06 22:50:28","inst myInst {
  Node = A + B
  edges = B->B
}","false","","","","",""
"13","IsDag","9","eval_input","2020-04-06 22:50:33","inst myInst {
  Node = A + B + C
  edges = B->C 
}","true","","","","",""
"13","IsDag","10","eval_input","2020-04-06 22:50:37","inst myInst {
  Node = A + B + C
  edges = C->C 
}","false","","","","",""
"13","IsDag","11","eval_input","2020-04-06 22:50:41","inst myInst {
  Node = A + B + C
  edges = A->C 
}","true","","","","",""
"13","IsDag","12","quiz_answer","2020-04-06 22:52:26","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"13","IsDag","13","quiz_answer","2020-04-06 22:52:30","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"13","IsDag","14","quiz_answer","2020-04-06 22:52:38","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"13","IsDag","15","eval_input","2020-04-06 22:52:52","inst myInst {
  Node = A + B + C
  edges = A->C + A->B
}","true","","","","",""
"13","IsDag","16","eval_input","2020-04-06 22:53:00","inst myInst {
  Node = A + B + C
  edges = A->C + A->A
}","false","","","","",""
"13","IsDag","17","eval_input","2020-04-06 22:53:04","inst myInst {
  Node = A + B + C
  edges = A->C + B->A
}","true","","","","",""
"13","IsDag","18","quiz_answer","2020-04-06 22:53:26","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"13","IsDag","19","quiz_answer","2020-04-06 22:53:32","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"13","IsDag","20","quiz_answer","2020-04-06 22:53:39","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"13","IsDag","21","eval_input","2020-04-06 22:53:54","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"13","IsDag","22","eval_input","2020-04-06 22:53:59","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"13","IsDag","23","eval_input","2020-04-06 22:54:11","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","false","","","","",""
"13","IsDag","24","eval_input","2020-04-06 22:54:17","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"13","IsDag","25","eval_input","2020-04-06 22:54:37","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + B->A
}","false","","","","",""
"13","IsDag","26","eval_input","2020-04-06 22:59:36","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A 
}","false","","","","",""
"13","IsDag","27","quiz_answer","2020-04-06 23:00:20","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"13","IsDag","28","quiz_answer","2020-04-06 23:00:28","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"13","IsDag","29","quiz_answer","2020-04-06 23:00:37","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"13","IsDag","30","quiz_answer","2020-04-06 23:00:49","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"13","IsDag","31","quiz_answer","2020-04-06 23:00:54","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"13","IsDag","32","quiz_answer","2020-04-06 23:01:00","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"13","IsDag","33","quiz_answer","2020-04-06 23:01:08","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"13","IsDag","34","quiz_answer","2020-04-06 23:01:17","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"13","IsDag","35","final_answer","2020-04-06 23:01:18","","","","","","pred acyclic {

no iden & ^edges


}",""
"13","IsBipartite","36","eval_input","2020-04-06 23:01:44","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A 
}","false","","","","",""
"13","IsBipartite","37","eval_input","2020-04-06 23:01:51","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->C 
}","false","","","","",""
"13","IsBipartite","38","eval_input","2020-04-06 23:01:56","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C  
}","true","","","","",""
"13","IsBipartite","39","eval_input","2020-04-06 23:02:08","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"13","IsBipartite","40","eval_input","2020-04-06 23:02:14","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"13","IsBipartite","41","eval_input","2020-04-06 23:02:32","inst myInst {
  Node = A + B + C + D
  edges = A->B
}","true","","","","",""
"13","IsBipartite","42","eval_input","2020-04-06 23:02:42","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D
}","true","","","","",""
"13","IsBipartite","43","eval_input","2020-04-06 23:02:48","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D
}","true","","","","",""
"13","IsBipartite","44","eval_input","2020-04-06 23:03:00","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D + D->A
}","false","","","","",""
"13","IsBipartite","45","eval_input","2020-04-06 23:03:08","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D + D->B
}","true","","","","",""
"13","IsBipartite","46","eval_input","2020-04-06 23:03:17","inst myInst {
  Node = A + B + C + D
  edges =  B->D + D->B
}","true","","","","",""
"13","IsBipartite","47","eval_input","2020-04-06 23:03:34","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D + D->B + B->A
}","true","","","","",""
"13","IsBipartite","48","eval_input","2020-04-06 23:04:08","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D + D->B + B->A + C->A
}","true","","","","",""
"13","IsBipartite","49","eval_input","2020-04-06 23:04:21","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D + D->B + B->A + C->A + A->C
}","true","","","","",""
"13","IsBipartite","50","eval_input","2020-04-06 23:04:42","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D + D->B + B->A + C->A + A->C + D->C
}","true","","","","",""
"13","IsBipartite","51","eval_input","2020-04-06 23:05:33","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->C + A->D + C->D + B->D + D->B + B->A + C->A + D->C
}","false","","","","",""
"13","IsBipartite","52","eval_input","2020-04-06 23:05:43","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->C + A->D + C->D + B->D + D->B + B->A + C->A + D->C
}","false","","","","",""
"13","IsBipartite","53","eval_input","2020-04-06 23:05:47","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->C + C->D + B->D + D->B + B->A + C->A + D->C
}","true","","","","",""
"13","IsBipartite","54","eval_input","2020-04-06 23:06:04","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->C + C->D + B->D + D->B + B->A + C->A + D->C + C->B
}","false","","","","",""
"13","IsBipartite","55","eval_input","2020-04-06 23:06:15","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->A
}","false","","","","",""
"13","IsBipartite","56","eval_input","2020-04-06 23:06:19","inst myInst {
  Node = A + B + C + D 
  edges = A->A
}","false","","","","",""
"13","IsBipartite","57","eval_input","2020-04-06 23:06:41","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->C + A->D
}","true","","","","",""
"13","IsBipartite","58","eval_input","2020-04-06 23:06:55","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->C + A->D + C->A
}","true","","","","",""
"13","IsBipartite","59","eval_input","2020-04-06 23:07:10","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C
}","true","","","","",""
"13","IsBipartite","60","eval_input","2020-04-06 23:07:15","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->D
}","true","","","","",""
"13","IsBipartite","61","eval_input","2020-04-06 23:07:21","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"13","IsBipartite","62","quiz_answer","2020-04-06 23:07:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"13","IsBipartite","63","quiz_answer","2020-04-06 23:08:01","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"13","IsBipartite","64","quiz_answer","2020-04-06 23:08:09","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"13","IsBipartite","65","quiz_answer","2020-04-06 23:08:18","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"13","IsBipartite","66","quiz_answer","2020-04-06 23:08:34","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"13","IsBipartite","67","final_answer","2020-04-06 23:08:37","","","","","","Not sure",""
"13","ThreeCycle","68","eval_input","2020-04-06 23:09:12","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"13","ThreeCycle","69","eval_input","2020-04-06 23:09:26","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->A + D->A
}","true","","","","",""
"13","ThreeCycle","70","eval_input","2020-04-06 23:09:37","inst myInst {
  Node = A + B + C + D 
  edges = A->B + A->A
}","false","","","","",""
"13","ThreeCycle","71","eval_input","2020-04-06 23:09:46","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->A
}","false","","","","",""
"13","ThreeCycle","72","eval_input","2020-04-06 23:10:02","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C
}","false","","","","",""
"13","ThreeCycle","73","eval_input","2020-04-06 23:10:12","inst myInst {
  Node = A + B + C + D 
  edges = A->B + D->C
}","false","","","","",""
"13","ThreeCycle","74","eval_input","2020-04-06 23:10:27","inst myInst {
  Node = A + B + C + D 
  edges = A->B + D->C + B->D
}","false","","","","",""
"13","ThreeCycle","75","eval_input","2020-04-06 23:10:35","inst myInst {
  Node = A + B + C + D 
  edges = none
}","false","","","","",""
"13","ThreeCycle","76","eval_input","2020-04-06 23:10:39","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"13","ThreeCycle","77","eval_input","2020-04-06 23:11:15","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + D->A
}","true","","","","",""
"13","ThreeCycle","78","eval_input","2020-04-06 23:13:59","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + D->A
}","true","","","","",""
"13","ThreeCycle","79","eval_input","2020-04-06 23:14:23","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"13","ThreeCycle","80","eval_input","2020-04-06 23:14:27","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->B + D->A
}","false","","","","",""
"13","ThreeCycle","81","eval_input","2020-04-06 23:14:37","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A + C->A + D->A
}","false","","","","",""
"13","ThreeCycle","82","eval_input","2020-04-06 23:14:42","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + D->A
}","true","","","","",""
"13","ThreeCycle","83","eval_input","2020-04-06 23:14:56","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A 
}","true","","","","",""
"13","ThreeCycle","84","eval_input","2020-04-06 23:15:08","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A + C->B
}","true","","","","",""
"13","ThreeCycle","85","eval_input","2020-04-06 23:15:17","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A + C->B + C->C
}","true","","","","",""
"13","ThreeCycle","86","eval_input","2020-04-06 23:15:38","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A + C->B + C->C
}","true","","","","",""
"13","ThreeCycle","87","eval_input","2020-04-06 23:15:45","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A + C->B + C->C + A->A
}","true","","","","",""
"13","ThreeCycle","88","eval_input","2020-04-06 23:15:58","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A + C->B + C->C + A->A + A->C
}","true","","","","",""
"13","ThreeCycle","89","eval_input","2020-04-06 23:16:12","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + B->A + C->A + C->B + C->C + A->A + A->C
}","true","","","","",""
"13","ThreeCycle","90","eval_input","2020-04-06 23:16:16","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + B->A + C->A + C->B + C->C + A->A + A->C
}","true","","","","",""
"13","ThreeCycle","91","eval_input","2020-04-06 23:16:23","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + B->A + C->A + C->B + C->C + A->A + A->C
}","true","","","","",""
"13","ThreeCycle","92","eval_input","2020-04-06 23:16:29","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->A + B->A + C->A + C->B + C->C + A->A + A->C
}","true","","","","",""
"13","ThreeCycle","93","eval_input","2020-04-06 23:16:34","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->B + B->A + C->A + C->B + C->C + A->A + A->C
}","true","","","","",""
"13","ThreeCycle","94","eval_input","2020-04-06 23:20:49","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"13","ThreeCycle","95","eval_input","2020-04-06 23:21:06","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A  + A->A
}","false","","","","",""
"13","ThreeCycle","96","quiz_answer","2020-04-06 23:21:45","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"13","ThreeCycle","97","quiz_answer","2020-04-06 23:21:50","inst myInst {
      Node = A
      edges = none
    }","true","1","false","false","",""
"13","ThreeCycle","98","eval_input","2020-04-06 23:21:55","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A  + A->A
}","false","","","","",""
"13","ThreeCycle","99","quiz_answer","2020-04-06 23:22:25","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"13","ThreeCycle","100","quiz_answer","2020-04-06 23:22:28","inst myInst {
      Node = A
      edges = none
    }","true","1","false","false","",""
"13","ThreeCycle","101","quiz_answer","2020-04-06 23:22:53","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"13","ThreeCycle","102","quiz_answer","2020-04-06 23:22:57","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"13","ThreeCycle","103","quiz_answer","2020-04-06 23:23:00","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"13","ThreeCycle","104","final_answer","2020-04-06 23:23:03","","","","","","I'm genuinely unsure, this one is very tough!",""
"14","ThreeCycle","0","eval_input","2020-04-07 10:41:46","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"14","ThreeCycle","1","eval_input","2020-04-07 10:42:45","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B
}","false","","","","",""
"14","ThreeCycle","2","eval_input","2020-04-07 10:43:19","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B
}","false","","","","",""
"14","ThreeCycle","3","eval_input","2020-04-07 10:43:19","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B
}","false","","","","",""
"14","ThreeCycle","4","eval_input","2020-04-07 10:43:24","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B
}","false","","","","",""
"14","ThreeCycle","5","eval_input","2020-04-07 10:43:30","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> A
}","false","","","","",""
"14","ThreeCycle","6","eval_input","2020-04-07 10:43:42","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> C
}","false","","","","",""
"14","ThreeCycle","7","eval_input","2020-04-07 10:43:48","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> C + C -> A
}","true","","","","",""
"14","ThreeCycle","8","eval_input","2020-04-07 10:44:11","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> C + A -> C
}","false","","","","",""
"14","ThreeCycle","9","eval_input","2020-04-07 10:45:02","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B 
        + B -> C 
        + C -> A
}","true","","","","",""
"14","ThreeCycle","10","eval_input","2020-04-07 10:46:04","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B 
        + B -> C 
        + C -> D
        + D -> A
}","false","","","","",""
"14","ThreeCycle","11","eval_input","2020-04-07 10:46:42","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B 
        + B -> C 
        + C -> D
        + D -> A
}","false","","","","",""
"14","ThreeCycle","12","eval_input","2020-04-07 10:46:48","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B 
        + B -> C 
        + C -> D
        + D -> A
}","false","","","","",""
"14","ThreeCycle","13","eval_input","2020-04-07 10:46:59","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B 
        + B -> C 
        + C -> D
        + D -> E 
        + E -> A
}","false","","","","",""
"14","ThreeCycle","14","eval_input","2020-04-07 10:47:19","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B 
        + B -> C 
        + C -> A
}","true","","","","",""
"14","ThreeCycle","15","eval_input","2020-04-07 10:47:32","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B 
        + B -> A
}","false","","","","",""
"14","ThreeCycle","16","eval_input","2020-04-07 10:47:41","inst myInst {
  Node = A
       + B
       
  edges = A -> B 
        + B -> A
}","false","","","","",""
"14","ThreeCycle","17","eval_input","2020-04-07 10:50:00","inst myInst {
  Node = A
       
  edges = A -> A
}","false","","","","",""
"14","ThreeCycle","18","eval_input","2020-04-07 10:50:18","inst myInst {
  Node = A + B + C
       
  edges = A -> B
}","false","","","","",""
"14","ThreeCycle","19","eval_input","2020-04-07 10:50:19","inst myInst {
  Node = A + B + C
       
  edges = A -> B
}","false","","","","",""
"14","ThreeCycle","20","eval_input","2020-04-07 10:50:20","inst myInst {
  Node = A + B + C
       
  edges = A -> B
}","false","","","","",""
"14","ThreeCycle","21","eval_input","2020-04-07 10:51:04","inst myInst {
  Node = A + B + C
       
  edges = A -> B
          + B -> C 
          + C -> A
}","true","","","","",""
"14","ThreeCycle","22","eval_input","2020-04-07 10:51:26","inst myInst {
  Node = none
       
  edges = none
}","false","","","","",""
"14","ThreeCycle","23","quiz_answer","2020-04-07 10:51:41","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"14","ThreeCycle","24","quiz_answer","2020-04-07 10:51:51","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"14","ThreeCycle","25","quiz_answer","2020-04-07 10:51:55","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"14","ThreeCycle","26","quiz_answer","2020-04-07 10:52:03","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"14","ThreeCycle","27","quiz_answer","2020-04-07 10:52:22","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"14","ThreeCycle","28","quiz_answer","2020-04-07 10:52:31","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"14","ThreeCycle","29","quiz_answer","2020-04-07 10:52:38","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"14","ThreeCycle","30","quiz_answer","2020-04-07 10:52:43","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"14","ThreeCycle","31","final_answer","2020-04-07 10:52:45","","","","","","The graph must contain a cycle with 3 nodes",""
"14","IsBipartite","32","eval_input","2020-04-07 10:52:57","inst myInst {
  Node = none
       
  edges = none
}","true","","","","",""
"15","IsDag","0","eval_input","2020-04-07 10:53:18","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"15","IsDag","1","eval_input","2020-04-07 10:53:32","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"14","IsBipartite","33","eval_input","2020-04-07 10:53:38","inst myInst {
  Node = A
       
  edges = none
}","true","","","","",""
"15","IsDag","2","eval_input","2020-04-07 10:53:45","inst myInst {
  Node = A
       + B
       + C
  edges = none
}
inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"14","IsBipartite","34","eval_input","2020-04-07 10:53:49","inst myInst {
  Node = A
       
  edges = A -> A
}","false","","","","",""
"14","IsBipartite","35","eval_input","2020-04-07 10:54:03","inst myInst {
  Node = A + B
       
  edges = A -> B
}","true","","","","",""
"14","IsBipartite","36","eval_input","2020-04-07 10:54:17","inst myInst {
  Node = A + B
       
  edges = A -> B
}","true","","","","",""
"14","IsBipartite","37","eval_input","2020-04-07 10:54:22","inst myInst {
  Node = A + B
       
  edges = A -> B + B -> A
}","true","","","","",""
"15","IsDag","3","eval_input","2020-04-07 10:54:35","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"14","IsBipartite","38","eval_input","2020-04-07 10:54:42","inst myInst {
  Node = A + B + C
       
  edges = A -> B + B -> A
}","true","","","","",""
"14","IsBipartite","39","eval_input","2020-04-07 10:54:47","inst myInst {
  Node = A + B + C
       
  edges = A -> B + B -> A + A -> C
}","true","","","","",""
"14","IsBipartite","40","eval_input","2020-04-07 10:55:18","inst myInst {
  Node = A + B + C
       
  edges = A -> B + B -> A + A -> C + B -> B
}","false","","","","",""
"15","IsDag","4","eval_input","2020-04-07 10:55:39","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"14","IsBipartite","41","quiz_answer","2020-04-07 10:55:49","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"14","IsBipartite","42","quiz_answer","2020-04-07 10:55:53","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"14","IsBipartite","43","quiz_answer","2020-04-07 10:55:57","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"14","IsBipartite","44","quiz_answer","2020-04-07 10:56:00","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"14","IsBipartite","45","quiz_answer","2020-04-07 10:56:03","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"14","IsBipartite","46","eval_input","2020-04-07 10:56:44","inst myInst {
  Node = A + B + C
       
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"14","IsBipartite","47","eval_input","2020-04-07 10:57:19","inst myInst {
  Node = A + B + C
       
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"14","IsBipartite","48","eval_input","2020-04-07 10:57:28","inst myInst {
  Node = A + B + C + D
       
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"14","IsBipartite","49","quiz_answer","2020-04-07 10:58:14","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"14","IsBipartite","50","quiz_answer","2020-04-07 10:58:19","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"14","IsBipartite","51","quiz_answer","2020-04-07 10:58:24","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"14","IsBipartite","52","quiz_answer","2020-04-07 10:58:48","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"14","IsBipartite","53","quiz_answer","2020-04-07 10:58:54","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"14","IsBipartite","54","quiz_answer","2020-04-07 10:59:01","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"14","IsBipartite","55","quiz_answer","2020-04-07 10:59:14","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"14","IsBipartite","56","quiz_answer","2020-04-07 10:59:26","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"14","IsBipartite","57","final_answer","2020-04-07 10:59:28","","","","","","There can't be odd numbered cycles",""
"14","IsDag","58","eval_input","2020-04-07 11:00:36","inst myInst {
  Node = A + B + C + D
       
  edges = A -> B + B -> C + C -> D + D -> A
}","false","","","","",""
"14","IsDag","59","eval_input","2020-04-07 11:00:57","inst myInst {
  Node = A + B + C + D
       
  edges = A -> B + B -> C + C -> D
}","true","","","","",""
"14","IsDag","60","eval_input","2020-04-07 11:01:36","inst myInst {
  Node =none
       
  edges =  none
}","true","","","","",""
"14","IsDag","61","eval_input","2020-04-07 11:01:46","inst myInst {
  Node = A
       
  edges =  none
}","true","","","","",""
"14","IsDag","62","eval_input","2020-04-07 11:02:05","inst myInst {
  Node = A
       
  edges =  A -> A
}","false","","","","",""
"14","IsDag","63","eval_input","2020-04-07 11:02:25","inst myInst {
  Node = A + B
       
  edges =  A -> A
}","false","","","","",""
"14","IsDag","64","eval_input","2020-04-07 11:02:51","inst myInst {
  Node = A + B
       
  edges =  A -> A
}","false","","","","",""
"14","IsDag","65","eval_input","2020-04-07 11:02:54","inst myInst {
  Node = A + B + C
       
  edges =  A -> A
}","false","","","","",""
"14","IsDag","66","eval_input","2020-04-07 11:02:57","inst myInst {
  Node = A + B + C
       
  edges =  A -> B
}","true","","","","",""
"14","IsDag","67","eval_input","2020-04-07 11:02:59","inst myInst {
  Node = A + B + C
       
  edges =  A -> B
}","true","","","","",""
"14","IsDag","68","eval_input","2020-04-07 11:03:04","inst myInst {
  Node = A + B + C
       
  edges =  A -> B + B -> C
}","true","","","","",""
"14","IsDag","69","eval_input","2020-04-07 11:03:15","inst myInst {
  Node = A + B + C
       
  edges =  A -> B + B -> C + C -> A
}","false","","","","",""
"14","IsDag","70","eval_input","2020-04-07 11:03:24","inst myInst {
  Node = A + B + C
       
  edges =  A -> B + B -> A + B -> C
}","false","","","","",""
"14","IsDag","71","quiz_answer","2020-04-07 11:03:31","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"14","IsDag","72","quiz_answer","2020-04-07 11:03:35","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"14","IsDag","73","quiz_answer","2020-04-07 11:03:38","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"14","IsDag","74","quiz_answer","2020-04-07 11:03:44","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"14","IsDag","75","quiz_answer","2020-04-07 11:03:48","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"14","IsDag","76","quiz_answer","2020-04-07 11:03:53","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"14","IsDag","77","quiz_answer","2020-04-07 11:03:57","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"14","IsDag","78","quiz_answer","2020-04-07 11:04:03","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"14","IsDag","79","final_answer","2020-04-07 11:04:04","","","","","","No cycles",""
"15","IsDag","5","eval_input","2020-04-07 11:04:50","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->B + B->C
}","true","","","","",""
"15","IsDag","6","eval_input","2020-04-07 11:04:57","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->B + B->C + C->A
}","false","","","","",""
"15","IsDag","7","eval_input","2020-04-07 11:05:31","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"15","IsDag","8","eval_input","2020-04-07 11:05:35","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + B->C + C->D
}","true","","","","",""
"15","IsDag","9","eval_input","2020-04-07 11:05:53","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + B->C + A->C
}","true","","","","",""
"15","IsDag","10","eval_input","2020-04-07 11:06:03","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + B->C + A->C + A->D
}","true","","","","",""
"15","IsDag","11","eval_input","2020-04-07 11:06:33","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + A->C + A->D
}","true","","","","",""
"15","IsDag","12","eval_input","2020-04-07 11:07:03","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + C->D
}","true","","","","",""
"15","IsDag","13","eval_input","2020-04-07 11:07:21","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + C->D + D->D
}","false","","","","",""
"15","IsDag","14","eval_input","2020-04-07 11:08:25","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + B->D + D->E
}","true","","","","",""
"15","IsDag","15","quiz_answer","2020-04-07 11:09:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"15","IsDag","16","quiz_answer","2020-04-07 11:09:28","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"15","IsDag","17","quiz_answer","2020-04-07 11:09:37","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"15","IsDag","18","quiz_answer","2020-04-07 11:09:57","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"15","IsDag","19","quiz_answer","2020-04-07 11:10:05","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"15","IsDag","20","quiz_answer","2020-04-07 11:10:12","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"15","IsDag","21","quiz_answer","2020-04-07 11:10:26","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"15","IsDag","22","quiz_answer","2020-04-07 11:10:35","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"15","IsDag","23","final_answer","2020-04-07 11:10:37","","","","","","directed acyclic",""
"15","ThreeCycle","24","eval_input","2020-04-07 11:10:57","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + B->D + D->E
}","false","","","","",""
"15","ThreeCycle","25","eval_input","2020-04-07 11:11:36","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->D + D->E
}","false","","","","",""
"15","ThreeCycle","26","eval_input","2020-04-07 11:12:01","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->B + B->C + C->A
}","true","","","","",""
"15","ThreeCycle","27","eval_input","2020-04-07 11:12:15","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->A
}","false","","","","",""
"15","ThreeCycle","28","eval_input","2020-04-07 11:12:20","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->A + B->B
}","false","","","","",""
"15","ThreeCycle","29","eval_input","2020-04-07 11:12:24","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->A + B->B + C->C
}","false","","","","",""
"15","ThreeCycle","30","eval_input","2020-04-07 11:12:41","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->B + A->C + B->C
}","false","","","","",""
"15","ThreeCycle","31","eval_input","2020-04-07 11:12:52","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->B + B->A + A->C + B->C
}","false","","","","",""
"15","ThreeCycle","32","eval_input","2020-04-07 11:13:04","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->B + B->A + A->C + C->A + B->C
}","true","","","","",""
"15","ThreeCycle","33","eval_input","2020-04-07 11:13:45","inst myInst {
  Node = A
       + B
       + C
  
  edges = A->B + B->C + C->A
}","true","","","","",""
"15","ThreeCycle","34","eval_input","2020-04-07 11:13:56","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->E + E->D
}","true","","","","",""
"15","ThreeCycle","35","eval_input","2020-04-07 11:14:08","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->E + E->D + A->D
}","true","","","","",""
"15","ThreeCycle","36","eval_input","2020-04-07 11:15:13","inst myInst {
  Node = A
       + B
       + C
       + D
  
  edges = A->B + B->A + C->D + D->C
}","false","","","","",""
"15","ThreeCycle","37","eval_input","2020-04-07 11:15:31","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->A + C->D + D->C + D->E
}","false","","","","",""
"15","ThreeCycle","38","eval_input","2020-04-07 11:15:36","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->A + C->D + D->C + D->E + E->D
}","false","","","","",""
"15","ThreeCycle","39","eval_input","2020-04-07 11:15:55","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A
}","true","","","","",""
"15","ThreeCycle","40","eval_input","2020-04-07 11:16:36","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->A
}","false","","","","",""
"15","ThreeCycle","41","eval_input","2020-04-07 11:16:58","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"15","ThreeCycle","42","eval_input","2020-04-07 11:17:12","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"15","ThreeCycle","43","eval_input","2020-04-07 11:17:41","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->E + E->A
}","true","","","","",""
"15","ThreeCycle","44","eval_input","2020-04-07 11:17:48","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->D
}","true","","","","",""
"15","ThreeCycle","45","eval_input","2020-04-07 11:17:54","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->D + E->E
}","true","","","","",""
"15","ThreeCycle","46","eval_input","2020-04-07 11:17:58","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->D + E->A
}","true","","","","",""
"15","ThreeCycle","47","eval_input","2020-04-07 11:18:03","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->D + A->E
}","true","","","","",""
"15","ThreeCycle","48","eval_input","2020-04-07 11:18:14","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->D + A->E + E->B
}","true","","","","",""
"15","ThreeCycle","49","eval_input","2020-04-07 11:18:22","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + D->D + A->E + E->A
}","true","","","","",""
"15","ThreeCycle","50","eval_input","2020-04-07 11:18:52","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + A->C
}","true","","","","",""
"15","ThreeCycle","51","eval_input","2020-04-07 11:19:12","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  
  edges = A->B + B->C + C->A + A->C + B->A
}","true","","","","",""
"15","ThreeCycle","52","eval_input","2020-04-07 11:19:35","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->A
}","true","","","","",""
"15","ThreeCycle","53","eval_input","2020-04-07 11:19:43","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  
  edges = A->B + B->C + C->A
}","true","","","","",""
"15","ThreeCycle","54","eval_input","2020-04-07 11:20:13","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"15","ThreeCycle","55","eval_input","2020-04-07 11:20:19","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->B + D->E + E->F + F->D
}","true","","","","",""
"15","ThreeCycle","56","eval_input","2020-04-07 11:20:26","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + D->E + E->F + F->D
}","true","","","","",""
"15","ThreeCycle","57","eval_input","2020-04-07 11:20:39","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D + D->E + E->C
}","true","","","","",""
"15","ThreeCycle","58","eval_input","2020-04-07 11:21:16","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->A + E->B + C->E
}","true","","","","",""
"15","ThreeCycle","59","eval_input","2020-04-07 11:21:23","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + E->B + C->E
}","true","","","","",""
"15","ThreeCycle","60","eval_input","2020-04-07 11:21:45","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"15","ThreeCycle","61","eval_input","2020-04-07 11:22:17","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A + B->C + C->B + C->A + A->C
}","true","","","","",""
"15","ThreeCycle","62","quiz_answer","2020-04-07 11:22:55","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"15","ThreeCycle","63","quiz_answer","2020-04-07 11:22:59","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"15","ThreeCycle","64","quiz_answer","2020-04-07 11:23:02","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"15","ThreeCycle","65","quiz_answer","2020-04-07 11:23:13","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"15","ThreeCycle","66","quiz_answer","2020-04-07 11:23:18","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"15","ThreeCycle","67","quiz_answer","2020-04-07 11:23:22","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"15","ThreeCycle","68","quiz_answer","2020-04-07 11:23:27","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"15","ThreeCycle","69","quiz_answer","2020-04-07 11:23:32","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"15","ThreeCycle","70","final_answer","2020-04-07 11:23:34","","","","","","Must contain one directed 3-cycle (though it can be undirected).",""
"15","IsBipartite","71","eval_input","2020-04-07 11:23:41","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A + B->C + C->B + C->A + A->C
}","false","","","","",""
"15","IsBipartite","72","eval_input","2020-04-07 11:24:07","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->A
}","false","","","","",""
"15","IsBipartite","73","eval_input","2020-04-07 11:24:14","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = none
}","true","","","","",""
"15","IsBipartite","74","eval_input","2020-04-07 11:24:18","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B
}","true","","","","",""
"15","IsBipartite","75","eval_input","2020-04-07 11:24:29","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A
}","true","","","","",""
"15","IsBipartite","76","eval_input","2020-04-07 11:24:35","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C
}","true","","","","",""
"15","IsBipartite","77","eval_input","2020-04-07 11:24:47","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D
}","true","","","","",""
"15","IsBipartite","78","eval_input","2020-04-07 11:24:53","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D + A->D
}","true","","","","",""
"15","IsBipartite","79","eval_input","2020-04-07 11:25:00","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D + A->D + D->A
}","true","","","","",""
"15","IsBipartite","80","eval_input","2020-04-07 11:25:26","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->A
}","false","","","","",""
"15","IsBipartite","81","eval_input","2020-04-07 11:25:38","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->B
}","false","","","","",""
"15","IsBipartite","82","eval_input","2020-04-07 11:26:23","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C
}","true","","","","",""
"15","IsBipartite","83","eval_input","2020-04-07 11:26:36","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"15","IsBipartite","84","eval_input","2020-04-07 11:26:43","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->A
}","false","","","","",""
"15","IsBipartite","85","eval_input","2020-04-07 11:27:00","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"15","IsBipartite","86","eval_input","2020-04-07 11:27:36","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","true","","","","",""
"15","IsBipartite","87","eval_input","2020-04-07 11:28:08","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A + B->C + C->B
}","true","","","","",""
"15","IsBipartite","88","eval_input","2020-04-07 11:28:27","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A
}","true","","","","",""
"15","IsBipartite","89","eval_input","2020-04-07 11:28:43","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->A
}","false","","","","",""
"15","IsBipartite","90","eval_input","2020-04-07 11:28:58","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A + B->C + C->B + C->D + D->C
}","true","","","","",""
"15","IsBipartite","91","eval_input","2020-04-07 11:29:12","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A + B->C + C->B + C->A + A->C
}","false","","","","",""
"15","IsBipartite","92","eval_input","2020-04-07 11:29:28","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  
  edges = A->B + B->A + B->C + C->B + C->D + D->C + D->A + A->D
}","true","","","","",""
"15","IsBipartite","93","quiz_answer","2020-04-07 11:29:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"15","IsBipartite","94","quiz_answer","2020-04-07 11:30:01","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"15","IsBipartite","95","quiz_answer","2020-04-07 11:30:05","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"15","IsBipartite","96","quiz_answer","2020-04-07 11:30:15","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"15","IsBipartite","97","quiz_answer","2020-04-07 11:30:20","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"15","IsBipartite","98","quiz_answer","2020-04-07 11:30:25","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"15","IsBipartite","99","quiz_answer","2020-04-07 11:30:33","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"15","IsBipartite","100","quiz_answer","2020-04-07 11:30:40","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"15","IsBipartite","101","final_answer","2020-04-07 11:30:41","","","","","","No cycles with an odd number of edges",""
"16","IsBipartite","0","eval_input","2020-04-07 14:24:55","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"16","IsBipartite","1","eval_input","2020-04-07 14:25:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"16","IsBipartite","2","eval_input","2020-04-07 14:25:15","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"16","IsBipartite","3","eval_input","2020-04-07 14:25:19","inst myInst {
  Node = A
       + B
       + C
  edges = B->A
}","true","","","","",""
"16","IsBipartite","4","eval_input","2020-04-07 14:25:22","inst myInst {
  Node = A
       + B
       + C
  edges = B->B
}","false","","","","",""
"16","IsBipartite","5","eval_input","2020-04-07 14:25:34","inst myInst {
  Node = A
       + B
       + C
  edges = B->B + A->B
}","false","","","","",""
"16","IsBipartite","6","eval_input","2020-04-07 14:25:40","inst myInst {
  Node = A
       + B
       + C
  edges = B->B + A->B + C->B
}","false","","","","",""
"16","IsBipartite","7","eval_input","2020-04-07 14:25:47","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->B
}","true","","","","",""
"16","IsBipartite","8","eval_input","2020-04-07 14:26:01","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"16","IsBipartite","9","eval_input","2020-04-07 14:26:08","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"16","IsBipartite","10","eval_input","2020-04-07 14:26:14","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"16","IsBipartite","11","quiz_answer","2020-04-07 14:26:48","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","IsBipartite","12","quiz_answer","2020-04-07 14:26:51","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"16","IsBipartite","13","quiz_answer","2020-04-07 14:26:56","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"16","IsBipartite","14","quiz_answer","2020-04-07 14:27:01","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"16","IsBipartite","15","quiz_answer","2020-04-07 14:27:07","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"16","IsBipartite","16","quiz_answer","2020-04-07 14:27:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","IsBipartite","17","quiz_answer","2020-04-07 14:27:27","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"16","IsBipartite","18","quiz_answer","2020-04-07 14:27:33","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"16","IsBipartite","19","eval_input","2020-04-07 14:28:28","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"16","IsBipartite","20","eval_input","2020-04-07 14:28:40","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"16","IsBipartite","21","quiz_answer","2020-04-07 14:30:31","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","IsBipartite","22","quiz_answer","2020-04-07 14:30:34","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"16","IsBipartite","23","quiz_answer","2020-04-07 14:30:39","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"16","IsBipartite","24","quiz_answer","2020-04-07 14:30:45","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"16","IsBipartite","25","quiz_answer","2020-04-07 14:30:51","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"16","IsBipartite","26","quiz_answer","2020-04-07 14:30:56","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"16","IsBipartite","27","quiz_answer","2020-04-07 14:31:03","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"16","IsBipartite","28","quiz_answer","2020-04-07 14:31:08","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"16","IsBipartite","29","final_answer","2020-04-07 14:31:09","","","","","","something like acyclic / irreflexive but apparently even number of nodes in the cycle between are allowed (i.e. A->A is false, but A->B + B->A is true, but A->B + B->C + C->A is false, but A->B + B->C + C->D + D->A is true again)",""
"16","IsDag","30","eval_input","2020-04-07 14:31:28","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"16","IsDag","31","eval_input","2020-04-07 14:31:34","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"16","IsDag","32","eval_input","2020-04-07 14:31:37","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"16","IsDag","33","eval_input","2020-04-07 14:31:40","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"16","IsDag","34","quiz_answer","2020-04-07 14:31:46","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","IsDag","35","quiz_answer","2020-04-07 14:31:49","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"16","IsDag","36","quiz_answer","2020-04-07 14:31:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"16","IsDag","37","quiz_answer","2020-04-07 14:31:58","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"16","IsDag","38","quiz_answer","2020-04-07 14:32:02","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"16","IsDag","39","quiz_answer","2020-04-07 14:32:07","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"16","IsDag","40","quiz_answer","2020-04-07 14:32:11","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"16","IsDag","41","quiz_answer","2020-04-07 14:32:16","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"16","IsDag","42","final_answer","2020-04-07 14:32:17","","","","","","Acyclic",""
"16","ThreeCycle","43","eval_input","2020-04-07 14:32:28","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"16","ThreeCycle","44","eval_input","2020-04-07 14:32:32","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"16","ThreeCycle","45","eval_input","2020-04-07 14:32:36","inst myInst {
  Node = A + B + C
  edges = A->C
}","false","","","","",""
"16","ThreeCycle","46","eval_input","2020-04-07 14:32:41","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"16","ThreeCycle","47","eval_input","2020-04-07 14:32:47","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"16","ThreeCycle","48","eval_input","2020-04-07 14:32:56","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"16","ThreeCycle","49","eval_input","2020-04-07 14:33:01","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"16","ThreeCycle","50","eval_input","2020-04-07 14:33:05","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"16","ThreeCycle","51","quiz_answer","2020-04-07 14:33:18","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","ThreeCycle","52","quiz_answer","2020-04-07 14:33:20","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"16","ThreeCycle","53","quiz_answer","2020-04-07 14:33:23","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"16","ThreeCycle","54","quiz_answer","2020-04-07 14:33:26","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"16","ThreeCycle","55","quiz_answer","2020-04-07 14:33:28","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"16","ThreeCycle","56","quiz_answer","2020-04-07 14:33:55","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","ThreeCycle","57","quiz_answer","2020-04-07 14:33:59","inst myInst {
      Node = A
      edges = none
    }","true","1","false","false","",""
"16","ThreeCycle","58","quiz_answer","2020-04-07 14:34:28","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","ThreeCycle","59","quiz_answer","2020-04-07 14:34:31","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"16","ThreeCycle","60","quiz_answer","2020-04-07 14:34:33","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"16","ThreeCycle","61","quiz_answer","2020-04-07 14:34:39","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"16","ThreeCycle","62","quiz_answer","2020-04-07 14:34:42","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"16","ThreeCycle","63","quiz_answer","2020-04-07 14:34:45","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"16","ThreeCycle","64","quiz_answer","2020-04-07 14:34:51","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"16","ThreeCycle","65","quiz_answer","2020-04-07 14:34:56","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"16","ThreeCycle","66","quiz_answer","2020-04-07 14:35:16","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"16","ThreeCycle","67","quiz_answer","2020-04-07 14:35:18","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"16","ThreeCycle","68","quiz_answer","2020-04-07 14:35:21","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"16","ThreeCycle","69","quiz_answer","2020-04-07 14:35:23","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"16","ThreeCycle","70","quiz_answer","2020-04-07 14:35:26","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"16","ThreeCycle","71","quiz_answer","2020-04-07 14:35:29","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"16","ThreeCycle","72","quiz_answer","2020-04-07 14:35:34","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"16","ThreeCycle","73","quiz_answer","2020-04-07 14:35:36","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"16","ThreeCycle","74","final_answer","2020-04-07 14:35:37","","","","","","there specifically needs to be a cycle of three nodes",""
"17","IsBipartite","0","eval_input","2020-04-07 15:11:11","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"17","IsBipartite","1","eval_input","2020-04-07 15:11:26","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"17","IsBipartite","2","eval_input","2020-04-07 15:11:37","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","true","","","","",""
"17","IsBipartite","3","eval_input","2020-04-07 15:11:49","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C
}","true","","","","",""
"17","IsBipartite","4","eval_input","2020-04-07 15:11:55","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A
}","true","","","","",""
"17","IsBipartite","5","eval_input","2020-04-07 15:12:21","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A + B->C
}","false","","","","",""
"17","IsBipartite","6","eval_input","2020-04-07 15:13:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A + C->B
}","false","","","","",""
"17","IsBipartite","7","eval_input","2020-04-07 15:13:13","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A
}","true","","","","",""
"17","IsBipartite","8","eval_input","2020-04-07 15:13:27","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A + A->A
}","false","","","","",""
"17","IsBipartite","9","eval_input","2020-04-07 15:13:35","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A + B->B
}","false","","","","",""
"17","IsBipartite","10","eval_input","2020-04-07 15:13:43","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A + C->C
}","false","","","","",""
"17","IsBipartite","11","eval_input","2020-04-07 15:13:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + C->A
}","true","","","","",""
"17","IsBipartite","12","eval_input","2020-04-07 15:14:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A
}","true","","","","",""
"17","IsBipartite","13","eval_input","2020-04-07 15:14:39","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A + A->D
}","true","","","","",""
"17","IsBipartite","14","eval_input","2020-04-07 15:14:53","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A + A->D + D->A
}","true","","","","",""
"17","IsBipartite","15","eval_input","2020-04-07 15:15:10","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A + A->D + D->A + B->C
}","false","","","","",""
"17","IsBipartite","16","eval_input","2020-04-07 15:15:17","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A + A->D + D->A + B->D
}","false","","","","",""
"17","IsBipartite","17","eval_input","2020-04-07 15:15:28","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A + A->D + D->A + D->B
}","false","","","","",""
"17","IsBipartite","18","eval_input","2020-04-07 15:15:35","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A + A->D + D->A + D->C
}","false","","","","",""
"17","IsBipartite","19","eval_input","2020-04-07 15:15:40","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + A->C + C->A + A->D + D->A
}","true","","","","",""
"17","IsBipartite","20","eval_input","2020-04-07 15:16:29","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->D + D->C
}","true","","","","",""
"17","IsBipartite","21","eval_input","2020-04-07 15:16:53","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->D + D->C + B->A + D->B + C->D
}","true","","","","",""
"17","IsBipartite","22","eval_input","2020-04-07 15:17:05","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->D + D->C + B->A + D->B + C->D + C->A
}","true","","","","",""
"17","IsBipartite","23","eval_input","2020-04-07 15:17:38","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->D + D->C + B->A + D->B + C->D + C->A + A->C
}","true","","","","",""
"17","IsBipartite","24","eval_input","2020-04-07 15:18:28","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"17","IsBipartite","25","eval_input","2020-04-07 15:18:41","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"17","IsBipartite","26","eval_input","2020-04-07 15:18:59","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"17","IsBipartite","27","quiz_answer","2020-04-07 15:23:17","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"17","IsBipartite","28","quiz_answer","2020-04-07 15:23:32","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"17","IsBipartite","29","quiz_answer","2020-04-07 15:23:41","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"17","IsBipartite","30","quiz_answer","2020-04-07 15:24:06","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"17","IsBipartite","31","quiz_answer","2020-04-07 15:24:24","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"17","IsBipartite","32","quiz_answer","2020-04-07 15:24:32","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"17","IsBipartite","33","quiz_answer","2020-04-07 15:24:54","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"17","IsBipartite","34","quiz_answer","2020-04-07 15:25:03","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"17","IsBipartite","35","final_answer","2020-04-07 15:25:08","","","","","","If the instance has cycle(s) made up of the odd number of nodes (for example, A->A, or A->B + B->C + C-> A, etc.), evaluates to FALSE; otherwise, evaluates to TRUE",""
"17","ThreeCycle","36","eval_input","2020-04-07 15:25:46","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"17","ThreeCycle","37","eval_input","2020-04-07 15:26:11","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"17","ThreeCycle","38","eval_input","2020-04-07 15:26:39","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"17","ThreeCycle","39","eval_input","2020-04-07 15:26:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"17","ThreeCycle","40","eval_input","2020-04-07 15:27:20","inst myInst {
  Node = A
       + B
  edges = A->B + B->A
}","false","","","","",""
"17","ThreeCycle","41","eval_input","2020-04-07 15:27:40","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"17","ThreeCycle","42","eval_input","2020-04-07 15:28:16","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"17","ThreeCycle","43","eval_input","2020-04-07 15:28:55","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"17","ThreeCycle","44","eval_input","2020-04-07 15:29:00","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"17","ThreeCycle","45","eval_input","2020-04-07 15:29:04","inst myInst {
  Node = A + B + C + D
  edges = none
}","false","","","","",""
"17","ThreeCycle","46","eval_input","2020-04-07 15:29:08","inst myInst {
  Node = A + B + C + D + E
  edges = none
}","false","","","","",""
"17","ThreeCycle","47","eval_input","2020-04-07 15:29:19","inst myInst {
  Node = A + B + C + D + E + F
  edges = none
}","false","","","","",""
"17","ThreeCycle","48","eval_input","2020-04-07 15:29:32","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D
}","false","","","","",""
"17","ThreeCycle","49","eval_input","2020-04-07 15:29:42","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F
}","false","","","","",""
"17","ThreeCycle","50","eval_input","2020-04-07 15:29:47","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","false","","","","",""
"17","ThreeCycle","51","eval_input","2020-04-07 15:30:07","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"17","ThreeCycle","52","eval_input","2020-04-07 15:30:28","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"17","ThreeCycle","53","eval_input","2020-04-07 15:30:32","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"17","ThreeCycle","54","eval_input","2020-04-07 15:30:36","inst myInst {
  Node = A + B
  edges = B->A
}","false","","","","",""
"17","ThreeCycle","55","eval_input","2020-04-07 15:30:59","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"17","ThreeCycle","56","eval_input","2020-04-07 15:31:10","inst myInst {
  Node = A + B
  edges = A->A + B->B + A->B + B->A
}","false","","","","",""
"17","ThreeCycle","57","eval_input","2020-04-07 15:31:53","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"17","ThreeCycle","58","eval_input","2020-04-07 15:31:59","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + A->C
}","true","","","","",""
"17","ThreeCycle","59","eval_input","2020-04-07 15:32:25","inst myInst {
  Node = A + B + C
  edges = C->B + B->A + A->C
}","true","","","","",""
"17","ThreeCycle","60","eval_input","2020-04-07 15:32:35","inst myInst {
  Node = A + B + C
  edges = C->B + B->A + A->C + A->A
}","true","","","","",""
"17","ThreeCycle","61","eval_input","2020-04-07 15:33:02","inst myInst {
  Node = A + B + C
  edges = A->A + A->B
}","false","","","","",""
"17","ThreeCycle","62","eval_input","2020-04-07 15:33:10","inst myInst {
  Node = A + B + C
  edges = A->A + A->B + A->C
}","false","","","","",""
"17","ThreeCycle","63","eval_input","2020-04-07 15:33:19","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"17","ThreeCycle","64","eval_input","2020-04-07 15:33:26","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + A->A
}","true","","","","",""
"17","ThreeCycle","65","eval_input","2020-04-07 15:33:56","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"17","ThreeCycle","66","quiz_answer","2020-04-07 15:34:48","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"17","ThreeCycle","67","quiz_answer","2020-04-07 15:34:53","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"17","ThreeCycle","68","quiz_answer","2020-04-07 15:35:00","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"17","ThreeCycle","69","quiz_answer","2020-04-07 15:35:09","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"17","ThreeCycle","70","quiz_answer","2020-04-07 15:35:16","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"17","ThreeCycle","71","quiz_answer","2020-04-07 15:35:25","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"17","ThreeCycle","72","quiz_answer","2020-04-07 15:35:31","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"17","ThreeCycle","73","quiz_answer","2020-04-07 15:35:36","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"17","ThreeCycle","74","final_answer","2020-04-07 15:35:38","","","","","","If the instance has a cycle size=3, evaluates to TRUE; otherwise, evaluates to FALSE",""
"17","IsDag","75","eval_input","2020-04-07 15:36:16","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"17","IsDag","76","eval_input","2020-04-07 15:36:29","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"17","IsDag","77","eval_input","2020-04-07 15:36:48","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"17","IsDag","78","eval_input","2020-04-07 15:36:56","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->A + E->F
}","false","","","","",""
"17","IsDag","79","eval_input","2020-04-07 15:37:20","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"17","IsDag","80","eval_input","2020-04-07 15:37:38","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","false","","","","",""
"17","IsDag","81","eval_input","2020-04-07 15:37:59","inst myInst {
  Node = A + B + C + D + E + F + G
  edges = A->B + B->C + C->D + D->E + E->F + F->G + G->A
}","false","","","","",""
"17","IsDag","82","eval_input","2020-04-07 15:38:18","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"17","IsDag","83","eval_input","2020-04-07 15:38:48","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"17","IsDag","84","eval_input","2020-04-07 15:39:32","inst myInst {
  Node = A + B + C
  edges = A->B + C->B + A->C
}","true","","","","",""
"17","IsDag","85","eval_input","2020-04-07 15:39:54","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + A->D
}","true","","","","",""
"17","IsDag","86","eval_input","2020-04-07 15:40:05","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"17","IsDag","87","eval_input","2020-04-07 15:40:20","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"17","IsDag","88","eval_input","2020-04-07 15:40:35","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"17","IsDag","89","eval_input","2020-04-07 15:40:47","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"17","IsDag","90","eval_input","2020-04-07 15:40:58","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"17","IsDag","91","quiz_answer","2020-04-07 15:41:45","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"17","IsDag","92","quiz_answer","2020-04-07 15:41:50","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"17","IsDag","93","quiz_answer","2020-04-07 15:41:56","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"17","IsDag","94","quiz_answer","2020-04-07 15:42:05","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"17","IsDag","95","quiz_answer","2020-04-07 15:42:10","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"17","IsDag","96","quiz_answer","2020-04-07 15:42:15","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"17","IsDag","97","quiz_answer","2020-04-07 15:42:20","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"17","IsDag","98","quiz_answer","2020-04-07 15:42:26","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"17","IsDag","99","final_answer","2020-04-07 15:42:27","","","","","","if graph contains cycle, evaluates to FALSE; otherwise, evaluates to TRUE",""
"18","IsBipartite","0","eval_input","2020-04-07 16:00:43","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"19","ThreeCycle","0","eval_input","2020-04-07 16:00:54","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"18","IsBipartite","1","eval_input","2020-04-07 16:01:24","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"19","ThreeCycle","1","eval_input","2020-04-07 16:01:25","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"18","IsBipartite","2","eval_input","2020-04-07 16:01:26","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"18","IsBipartite","3","eval_input","2020-04-07 16:01:27","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"18","IsBipartite","4","eval_input","2020-04-07 16:01:34","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B
}","true","","","","",""
"18","IsBipartite","5","eval_input","2020-04-07 16:01:45","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> A
}","true","","","","",""
"19","ThreeCycle","2","eval_input","2020-04-07 16:02:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"18","IsBipartite","6","eval_input","2020-04-07 16:02:56","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C
}","true","","","","",""
"20","ThreeCycle","0","eval_input","2020-04-07 16:03:05","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"18","IsBipartite","7","eval_input","2020-04-07 16:03:06","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> B
}","true","","","","",""
"18","IsBipartite","8","eval_input","2020-04-07 16:03:13","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> B + B -> A
}","false","","","","",""
"18","IsBipartite","9","eval_input","2020-04-07 16:03:30","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A
}","true","","","","",""
"18","IsBipartite","10","eval_input","2020-04-07 16:03:44","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A + A -> B
}","true","","","","",""
"19","ThreeCycle","3","eval_input","2020-04-07 16:03:53","inst myInst {
  Node = A
       + B
       + C
  edges = A->C
}","false","","","","",""
"18","IsBipartite","11","eval_input","2020-04-07 16:03:57","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A + A -> B + B -> C + C -> B
}","false","","","","",""
"19","ThreeCycle","4","eval_input","2020-04-07 16:04:02","inst myInst {
  Node = A
       + B
       + C
  edges = C->B
}","false","","","","",""
"19","ThreeCycle","5","eval_input","2020-04-07 16:04:07","inst myInst {
  Node = A
       + B
       + C
  edges = C->A
}","false","","","","",""
"19","ThreeCycle","6","eval_input","2020-04-07 16:04:11","inst myInst {
  Node = A
       + B
       + C
  edges = B->A
}","false","","","","",""
"19","ThreeCycle","7","eval_input","2020-04-07 16:04:15","inst myInst {
  Node = A
       + B
       + C
  edges = B->C
}","false","","","","",""
"19","ThreeCycle","8","eval_input","2020-04-07 16:04:36","inst myInst {
  Node = A
       + B
       + C
  edges = A->C
}","false","","","","",""
"18","IsBipartite","12","eval_input","2020-04-07 16:04:50","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A + A -> B + B -> C
}","false","","","","",""
"18","IsBipartite","13","eval_input","2020-04-07 16:04:55","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A + A -> B + C -> B
}","false","","","","",""
"19","ThreeCycle","9","eval_input","2020-04-07 16:04:59","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"19","ThreeCycle","10","eval_input","2020-04-07 16:05:07","inst myInst {
  Node = A
       + B
       + C
  edges = B->A
}","false","","","","",""
"18","IsBipartite","14","eval_input","2020-04-07 16:05:08","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + C -> A + B -> A + A -> B
}","true","","","","",""
"19","ThreeCycle","11","eval_input","2020-04-07 16:05:10","inst myInst {
  Node = A
       + B
       + C
  edges = B->C
}","false","","","","",""
"20","ThreeCycle","1","eval_input","2020-04-07 16:05:13","inst myInst {
  Node = A
       + B
       + C
  edges = B->A
}","false","","","","",""
"19","ThreeCycle","12","eval_input","2020-04-07 16:05:14","inst myInst {
  Node = A
       + B
       + C
  edges = C->A
}","false","","","","",""
"20","ThreeCycle","2","eval_input","2020-04-07 16:05:17","inst myInst {
  Node = A
       + B
       + C
  edges = C->A
}","false","","","","",""
"19","ThreeCycle","13","eval_input","2020-04-07 16:05:18","inst myInst {
  Node = A
       + B
       + C
  edges = C->B
}","false","","","","",""
"19","ThreeCycle","14","eval_input","2020-04-07 16:05:21","inst myInst {
  Node = A
       + B
       + C
  edges = C->C
}","false","","","","",""
"19","ThreeCycle","15","eval_input","2020-04-07 16:05:27","inst myInst {
  Node = A
       + B
       + C
  edges = B->B
}","false","","","","",""
"19","ThreeCycle","16","eval_input","2020-04-07 16:05:32","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"18","IsBipartite","15","eval_input","2020-04-07 16:05:36","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A + A -> B + A -> A
}","false","","","","",""
"18","IsBipartite","16","eval_input","2020-04-07 16:06:00","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + C -> A + B -> A + A -> B + C -> D
}","true","","","","",""
"20","ThreeCycle","3","eval_input","2020-04-07 16:06:02","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","false","","","","",""
"18","IsBipartite","17","eval_input","2020-04-07 16:06:06","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + C -> A + B -> A + A -> B + C -> D + D -> C
}","true","","","","",""
"20","ThreeCycle","4","eval_input","2020-04-07 16:06:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"19","ThreeCycle","17","eval_input","2020-04-07 16:06:22","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->D
}","false","","","","",""
"20","ThreeCycle","5","eval_input","2020-04-07 16:06:32","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C + C->B
}","false","","","","",""
"20","ThreeCycle","6","eval_input","2020-04-07 16:06:46","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->D
}","false","","","","",""
"19","ThreeCycle","18","eval_input","2020-04-07 16:07:33","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->D
}","false","","","","",""
"18","IsBipartite","18","eval_input","2020-04-07 16:07:41","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + C -> A + B -> A + A -> B + C -> D + D -> C
}","true","","","","",""
"19","ThreeCycle","19","eval_input","2020-04-07 16:07:50","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = C->D
}","false","","","","",""
"18","IsBipartite","19","eval_input","2020-04-07 16:07:57","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + C -> A + B -> A + A -> B
}","true","","","","",""
"18","IsBipartite","20","eval_input","2020-04-07 16:08:03","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A + A -> B
}","true","","","","",""
"19","ThreeCycle","20","eval_input","2020-04-07 16:08:04","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->C + C->A
}","false","","","","",""
"20","ThreeCycle","7","eval_input","2020-04-07 16:08:08","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->C + C->A
}","false","","","","",""
"19","ThreeCycle","21","eval_input","2020-04-07 16:08:12","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + C->A
}","false","","","","",""
"18","IsBipartite","21","eval_input","2020-04-07 16:08:28","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + C -> A + B -> A + A -> B + B -> C
}","false","","","","",""
"20","ThreeCycle","8","eval_input","2020-04-07 16:08:31","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","false","","","","",""
"19","ThreeCycle","22","eval_input","2020-04-07 16:08:32","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"19","ThreeCycle","23","eval_input","2020-04-07 16:08:43","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"18","IsBipartite","22","eval_input","2020-04-07 16:08:46","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + A -> B + B -> C
}","true","","","","",""
"19","ThreeCycle","24","eval_input","2020-04-07 16:08:50","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"19","ThreeCycle","25","eval_input","2020-04-07 16:08:57","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"20","ThreeCycle","9","eval_input","2020-04-07 16:09:04","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"18","IsBipartite","23","eval_input","2020-04-07 16:09:09","inst myInst {
  Node = A
       + B
       + C
  edges = A -> C + B -> A + C -> B
}","false","","","","",""
"20","ThreeCycle","10","eval_input","2020-04-07 16:09:11","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"20","ThreeCycle","11","eval_input","2020-04-07 16:09:27","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"19","ThreeCycle","26","eval_input","2020-04-07 16:09:31","inst myInst {
  Node = A
        + B
        + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"18","IsBipartite","24","eval_input","2020-04-07 16:09:35","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + B -> A + C -> B
}","false","","","","",""
"20","ThreeCycle","12","eval_input","2020-04-07 16:09:40","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"18","IsBipartite","25","eval_input","2020-04-07 16:09:44","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> C + C -> D
}","true","","","","",""
"20","ThreeCycle","13","eval_input","2020-04-07 16:09:46","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"18","IsBipartite","26","eval_input","2020-04-07 16:09:49","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"20","ThreeCycle","14","eval_input","2020-04-07 16:10:30","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"18","IsBipartite","27","eval_input","2020-04-07 16:10:38","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + D -> E + E -> A
}","false","","","","",""
"20","ThreeCycle","15","eval_input","2020-04-07 16:10:55","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"18","IsBipartite","28","eval_input","2020-04-07 16:11:13","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + D -> E + E -> A
}","false","","","","",""
"18","IsBipartite","29","eval_input","2020-04-07 16:11:44","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> A
}","false","","","","",""
"18","IsBipartite","30","eval_input","2020-04-07 16:12:12","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> A
}","true","","","","",""
"18","IsBipartite","31","eval_input","2020-04-07 16:12:17","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"18","IsBipartite","32","eval_input","2020-04-07 16:12:23","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"21","ThreeCycle","0","eval_input","2020-04-07 16:12:23","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"21","ThreeCycle","1","eval_input","2020-04-07 16:12:27","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"21","ThreeCycle","2","eval_input","2020-04-07 16:12:33","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"21","ThreeCycle","3","eval_input","2020-04-07 16:12:37","inst myInst {
  Node = A + B + C
  edges = A->C
}","false","","","","",""
"21","ThreeCycle","4","eval_input","2020-04-07 16:12:39","inst myInst {
  Node = A + B + C
  edges = A->C
}","false","","","","",""
"18","IsBipartite","33","quiz_answer","2020-04-07 16:12:43","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","ThreeCycle","5","eval_input","2020-04-07 16:12:44","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"21","ThreeCycle","6","eval_input","2020-04-07 16:12:50","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"18","IsBipartite","34","quiz_answer","2020-04-07 16:12:53","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"21","ThreeCycle","7","eval_input","2020-04-07 16:12:55","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->A
}","false","","","","",""
"18","IsBipartite","35","quiz_answer","2020-04-07 16:13:02","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"21","ThreeCycle","8","eval_input","2020-04-07 16:13:18","inst myInst {
  Node = A + B + C
  edges = A->B + A->A + A->C
}","false","","","","",""
"18","IsBipartite","36","quiz_answer","2020-04-07 16:13:20","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"18","IsBipartite","37","quiz_answer","2020-04-07 16:13:30","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"21","ThreeCycle","9","eval_input","2020-04-07 16:13:33","inst myInst {
  Node = A + B + C
  edges = A->C + C->B + B->A
}","true","","","","",""
"18","IsBipartite","38","quiz_answer","2020-04-07 16:13:35","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"21","ThreeCycle","10","eval_input","2020-04-07 16:13:46","inst myInst {
  Node = A + B + C
  edges = C->B + B->A + A->C
}","true","","","","",""
"18","IsBipartite","39","quiz_answer","2020-04-07 16:13:51","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"21","ThreeCycle","11","eval_input","2020-04-07 16:13:51","inst myInst {
  Node = A + B + C
  edges = C->B + B->A + A->C + A->B
}","true","","","","",""
"21","ThreeCycle","12","eval_input","2020-04-07 16:13:59","inst myInst {
  Node = A + B + C
  edges = C->B + B->A + A->C + A->B + B->C
}","true","","","","",""
"18","IsBipartite","40","quiz_answer","2020-04-07 16:13:59","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"18","IsBipartite","41","final_answer","2020-04-07 16:14:01","","","","","","Each circle has only even nodes",""
"20","ThreeCycle","16","quiz_answer","2020-04-07 16:14:05","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"19","ThreeCycle","27","quiz_answer","2020-04-07 16:14:06","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","ThreeCycle","13","eval_input","2020-04-07 16:14:10","inst myInst {
  Node = A + B + C
  edges = B->A + A->C + A->B + B->C
}","false","","","","",""
"20","ThreeCycle","17","quiz_answer","2020-04-07 16:14:14","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"19","ThreeCycle","28","quiz_answer","2020-04-07 16:14:16","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"20","ThreeCycle","18","quiz_answer","2020-04-07 16:14:21","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"19","ThreeCycle","29","quiz_answer","2020-04-07 16:14:22","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"21","ThreeCycle","14","eval_input","2020-04-07 16:14:22","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"20","ThreeCycle","19","quiz_answer","2020-04-07 16:14:27","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"19","ThreeCycle","30","quiz_answer","2020-04-07 16:14:27","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"21","ThreeCycle","15","eval_input","2020-04-07 16:14:31","inst myInst {
  Node = A + B + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"19","ThreeCycle","31","quiz_answer","2020-04-07 16:14:31","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"20","ThreeCycle","20","quiz_answer","2020-04-07 16:14:31","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"18","IsDag","42","eval_input","2020-04-07 16:14:36","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + D -> A
}","false","","","","",""
"20","ThreeCycle","21","quiz_answer","2020-04-07 16:14:36","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"19","ThreeCycle","32","quiz_answer","2020-04-07 16:14:36","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"20","ThreeCycle","22","quiz_answer","2020-04-07 16:14:42","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"19","ThreeCycle","33","quiz_answer","2020-04-07 16:14:42","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"18","IsDag","43","eval_input","2020-04-07 16:14:44","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> A + D -> A
}","false","","","","",""
"18","IsDag","44","eval_input","2020-04-07 16:14:48","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"19","ThreeCycle","34","quiz_answer","2020-04-07 16:14:48","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"20","ThreeCycle","23","quiz_answer","2020-04-07 16:14:49","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"20","ThreeCycle","24","final_answer","2020-04-07 16:14:51","","","","","","All cycles have and only have 3 nodes.",""
"19","ThreeCycle","35","final_answer","2020-04-07 16:14:53","","","","","","It all cycles have and only have three nodes.",""
"18","IsDag","45","eval_input","2020-04-07 16:14:55","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C
}","true","","","","",""
"21","ThreeCycle","16","eval_input","2020-04-07 16:15:00","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","false","","","","",""
"18","IsDag","46","eval_input","2020-04-07 16:15:02","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> A + B -> C
}","false","","","","",""
"19","IsDag","36","eval_input","2020-04-07 16:15:16","inst myInst {
  Node = A
        + B
        + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"21","ThreeCycle","17","eval_input","2020-04-07 16:15:21","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->A
}","false","","","","",""
"21","ThreeCycle","18","eval_input","2020-04-07 16:15:30","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->A + C->A
}","false","","","","",""
"20","IsDag","25","eval_input","2020-04-07 16:15:38","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","false","","","","",""
"21","ThreeCycle","19","eval_input","2020-04-07 16:15:46","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->A + C->A + B->C
}","true","","","","",""
"18","IsDag","47","eval_input","2020-04-07 16:15:48","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> A
}","false","","","","",""
"19","IsDag","37","eval_input","2020-04-07 16:15:51","inst myInst {
  Node = A
        + B
        + C
  edges = A->B + B->A
}","false","","","","",""
"21","ThreeCycle","20","quiz_answer","2020-04-07 16:15:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","ThreeCycle","21","quiz_answer","2020-04-07 16:16:03","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"20","IsDag","26","eval_input","2020-04-07 16:16:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"21","ThreeCycle","22","quiz_answer","2020-04-07 16:16:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"18","IsDag","48","eval_input","2020-04-07 16:16:11","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"21","ThreeCycle","23","eval_input","2020-04-07 16:16:21","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"21","ThreeCycle","24","eval_input","2020-04-07 16:16:22","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"19","IsDag","38","eval_input","2020-04-07 16:16:23","inst myInst {
  Node = A
        + B
        + C
  edges = A->B + B->A 
}","false","","","","",""
"21","ThreeCycle","25","eval_input","2020-04-07 16:16:28","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"21","ThreeCycle","26","eval_input","2020-04-07 16:16:32","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"20","IsDag","27","eval_input","2020-04-07 16:16:33","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"19","IsDag","39","eval_input","2020-04-07 16:16:36","inst myInst {
  Node = A
        + B
        + C
  edges = A->B + B->C 
}","true","","","","",""
"20","IsDag","28","eval_input","2020-04-07 16:16:39","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"21","ThreeCycle","27","eval_input","2020-04-07 16:16:39","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A + B->B
}","false","","","","",""
"20","IsDag","29","eval_input","2020-04-07 16:16:41","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"20","IsDag","30","eval_input","2020-04-07 16:16:42","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"19","IsDag","40","eval_input","2020-04-07 16:16:44","inst myInst {
  Node = A
        + B
        + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"21","ThreeCycle","28","eval_input","2020-04-07 16:16:46","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A
}","false","","","","",""
"18","IsDag","49","quiz_answer","2020-04-07 16:16:49","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"20","IsDag","31","eval_input","2020-04-07 16:16:51","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"18","IsDag","50","quiz_answer","2020-04-07 16:16:54","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"21","ThreeCycle","29","eval_input","2020-04-07 16:16:56","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"18","IsDag","51","quiz_answer","2020-04-07 16:16:57","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"18","IsDag","52","quiz_answer","2020-04-07 16:17:04","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"19","IsDag","41","quiz_answer","2020-04-07 16:17:06","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","ThreeCycle","30","eval_input","2020-04-07 16:17:07","inst myInst {
  Node = A + B
  edges = A->A + B->B + A->B + B->A
}","false","","","","",""
"18","IsDag","53","quiz_answer","2020-04-07 16:17:09","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"18","IsDag","54","quiz_answer","2020-04-07 16:17:13","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","true","false","",""
"21","ThreeCycle","31","eval_input","2020-04-07 16:17:45","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"19","IsDag","42","quiz_answer","2020-04-07 16:17:58","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"21","ThreeCycle","32","eval_input","2020-04-07 16:18:04","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"21","ThreeCycle","33","eval_input","2020-04-07 16:18:19","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"21","ThreeCycle","34","eval_input","2020-04-07 16:18:21","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"20","IsDag","32","eval_input","2020-04-07 16:18:27","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"21","ThreeCycle","35","eval_input","2020-04-07 16:18:29","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + D->A
}","true","","","","",""
"20","IsDag","33","eval_input","2020-04-07 16:18:41","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->B
}","true","","","","",""
"21","ThreeCycle","36","quiz_answer","2020-04-07 16:18:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","ThreeCycle","37","quiz_answer","2020-04-07 16:18:55","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"21","ThreeCycle","38","quiz_answer","2020-04-07 16:18:57","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"21","ThreeCycle","39","quiz_answer","2020-04-07 16:19:08","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"21","ThreeCycle","40","quiz_answer","2020-04-07 16:19:11","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"18","IsDag","55","quiz_answer","2020-04-07 16:19:13","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"20","IsDag","34","quiz_answer","2020-04-07 16:19:17","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"18","IsDag","56","quiz_answer","2020-04-07 16:19:17","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"21","ThreeCycle","41","quiz_answer","2020-04-07 16:19:18","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"18","IsDag","57","quiz_answer","2020-04-07 16:19:22","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"19","IsDag","43","quiz_answer","2020-04-07 16:19:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"20","IsDag","35","quiz_answer","2020-04-07 16:19:26","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"21","ThreeCycle","42","quiz_answer","2020-04-07 16:19:26","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"19","IsDag","44","quiz_answer","2020-04-07 16:19:28","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"18","IsDag","58","quiz_answer","2020-04-07 16:19:29","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"20","IsDag","36","quiz_answer","2020-04-07 16:19:31","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"19","IsDag","45","quiz_answer","2020-04-07 16:19:32","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"18","IsDag","59","quiz_answer","2020-04-07 16:19:34","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"21","ThreeCycle","43","quiz_answer","2020-04-07 16:19:37","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"21","ThreeCycle","44","final_answer","2020-04-07 16:19:38","","","","","","at least one triangle formed with edges",""
"18","IsDag","60","quiz_answer","2020-04-07 16:19:38","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"20","IsDag","37","quiz_answer","2020-04-07 16:19:42","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"19","IsDag","46","quiz_answer","2020-04-07 16:19:43","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"18","IsDag","61","quiz_answer","2020-04-07 16:19:44","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"20","IsDag","38","quiz_answer","2020-04-07 16:19:46","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"19","IsDag","47","quiz_answer","2020-04-07 16:19:47","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"20","IsDag","39","quiz_answer","2020-04-07 16:19:50","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"18","IsDag","62","quiz_answer","2020-04-07 16:19:51","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"19","IsDag","48","quiz_answer","2020-04-07 16:19:51","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"20","IsDag","40","quiz_answer","2020-04-07 16:20:07","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"21","IsBipartite","45","eval_input","2020-04-07 16:20:07","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + D->A
}","false","","","","",""
"19","IsDag","49","quiz_answer","2020-04-07 16:20:08","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"20","IsDag","41","quiz_answer","2020-04-07 16:20:15","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"19","IsDag","50","quiz_answer","2020-04-07 16:20:15","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"20","IsDag","42","final_answer","2020-04-07 16:20:16","","","","","","The graph should be a directed acyclic graph",""
"18","IsDag","63","quiz_answer","2020-04-07 16:20:17","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","IsBipartite","46","eval_input","2020-04-07 16:20:17","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"19","IsDag","51","final_answer","2020-04-07 16:20:18","","","","","","Directed acyclic graph",""
"18","IsDag","64","quiz_answer","2020-04-07 16:20:21","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"18","IsDag","65","quiz_answer","2020-04-07 16:20:24","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"18","IsDag","66","quiz_answer","2020-04-07 16:20:29","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"18","IsDag","67","quiz_answer","2020-04-07 16:20:35","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"20","IsBipartite","43","eval_input","2020-04-07 16:20:37","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","true","","","","",""
"18","IsDag","68","quiz_answer","2020-04-07 16:20:40","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"21","IsBipartite","47","eval_input","2020-04-07 16:20:40","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"20","IsBipartite","44","eval_input","2020-04-07 16:20:46","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"18","IsDag","69","quiz_answer","2020-04-07 16:20:50","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"19","IsBipartite","52","eval_input","2020-04-07 16:20:56","inst myInst {
  Node = A
        + B
        + C
  edges = A->B + B->A
}","true","","","","",""
"18","IsDag","70","quiz_answer","2020-04-07 16:20:56","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"18","IsDag","71","final_answer","2020-04-07 16:20:57","","","","","","direct acrylic  graph",""
"18","ThreeCycle","72","eval_input","2020-04-07 16:21:03","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> A
}","true","","","","",""
"19","IsBipartite","53","quiz_answer","2020-04-07 16:21:11","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"18","ThreeCycle","73","eval_input","2020-04-07 16:21:11","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + D -> A
}","false","","","","",""
"21","IsBipartite","48","eval_input","2020-04-07 16:21:15","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"19","IsBipartite","54","quiz_answer","2020-04-07 16:21:15","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"21","IsBipartite","49","eval_input","2020-04-07 16:21:19","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","true","","","","",""
"19","IsBipartite","55","final_answer","2020-04-07 16:21:24","","","","","","All cycles have and only have even nodes.",""
"18","ThreeCycle","74","quiz_answer","2020-04-07 16:21:26","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","IsBipartite","50","eval_input","2020-04-07 16:21:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"20","IsBipartite","45","quiz_answer","2020-04-07 16:21:27","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"18","ThreeCycle","75","quiz_answer","2020-04-07 16:21:33","inst myInst {
      Node = A
      edges = none
    }","true","1","false","false","",""
"21","IsBipartite","51","eval_input","2020-04-07 16:21:33","inst myInst {
  Node =C
  edges = C->C
}","false","","","","",""
"21","IsBipartite","52","eval_input","2020-04-07 16:21:40","inst myInst {
  Node =C
  edges = C->C
}","false","","","","",""
"18","ThreeCycle","76","eval_input","2020-04-07 16:21:45","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B
}","false","","","","",""
"21","IsBipartite","53","eval_input","2020-04-07 16:21:46","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"21","IsBipartite","54","eval_input","2020-04-07 16:21:53","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"20","IsBipartite","46","quiz_answer","2020-04-07 16:22:00","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"20","IsBipartite","47","quiz_answer","2020-04-07 16:22:05","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"21","IsBipartite","55","eval_input","2020-04-07 16:22:08","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"18","ThreeCycle","77","quiz_answer","2020-04-07 16:22:08","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"18","ThreeCycle","78","quiz_answer","2020-04-07 16:22:11","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"21","IsBipartite","56","eval_input","2020-04-07 16:22:14","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"18","ThreeCycle","79","quiz_answer","2020-04-07 16:22:14","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"20","IsBipartite","48","quiz_answer","2020-04-07 16:22:20","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"18","ThreeCycle","80","quiz_answer","2020-04-07 16:22:20","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"18","ThreeCycle","81","quiz_answer","2020-04-07 16:22:24","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"21","IsBipartite","57","eval_input","2020-04-07 16:22:26","inst myInst {
  Node = A + B
  edges = A->B + B->A + B->B
}","false","","","","",""
"18","ThreeCycle","82","quiz_answer","2020-04-07 16:22:27","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"20","IsBipartite","49","quiz_answer","2020-04-07 16:22:27","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"18","ThreeCycle","83","quiz_answer","2020-04-07 16:22:32","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"20","IsBipartite","50","quiz_answer","2020-04-07 16:22:33","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"18","ThreeCycle","84","quiz_answer","2020-04-07 16:22:38","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"18","ThreeCycle","85","final_answer","2020-04-07 16:22:39","","","","","","must have one circle containing three nodes",""
"20","IsBipartite","51","quiz_answer","2020-04-07 16:22:41","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"20","IsBipartite","52","quiz_answer","2020-04-07 16:22:49","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"20","IsBipartite","53","final_answer","2020-04-07 16:22:50","","","","","","All cycles have and only have even number of nodes",""
"21","IsBipartite","58","eval_input","2020-04-07 16:22:57","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + A->C
}","true","","","","",""
"21","IsBipartite","59","eval_input","2020-04-07 16:23:11","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"21","IsBipartite","60","eval_input","2020-04-07 16:23:16","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"21","IsBipartite","61","eval_input","2020-04-07 16:23:26","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"21","IsBipartite","62","eval_input","2020-04-07 16:23:32","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"21","IsBipartite","63","eval_input","2020-04-07 16:24:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"21","IsBipartite","64","eval_input","2020-04-07 16:24:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"21","IsBipartite","65","eval_input","2020-04-07 16:24:22","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + C->B
}","true","","","","",""
"21","IsBipartite","66","eval_input","2020-04-07 16:24:34","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + C->B + C->A
}","false","","","","",""
"21","IsBipartite","67","eval_input","2020-04-07 16:25:24","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + C->B + B->A
}","false","","","","",""
"21","IsBipartite","68","eval_input","2020-04-07 16:25:39","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + C->B + A->A
}","false","","","","",""
"21","IsBipartite","69","eval_input","2020-04-07 16:25:45","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"21","IsBipartite","70","eval_input","2020-04-07 16:26:02","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"21","IsBipartite","71","eval_input","2020-04-07 16:26:16","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"21","IsBipartite","72","eval_input","2020-04-07 16:26:50","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"21","IsBipartite","73","eval_input","2020-04-07 16:27:16","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"21","IsBipartite","74","eval_input","2020-04-07 16:27:24","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + D->A
}","false","","","","",""
"21","IsBipartite","75","quiz_answer","2020-04-07 16:27:31","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","IsBipartite","76","quiz_answer","2020-04-07 16:27:35","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"21","IsBipartite","77","quiz_answer","2020-04-07 16:27:40","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"21","IsBipartite","78","quiz_answer","2020-04-07 16:27:48","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"21","IsBipartite","79","quiz_answer","2020-04-07 16:27:53","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"21","IsBipartite","80","quiz_answer","2020-04-07 16:28:01","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"21","IsBipartite","81","quiz_answer","2020-04-07 16:28:07","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"21","IsBipartite","82","quiz_answer","2020-04-07 16:28:14","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"21","IsBipartite","83","final_answer","2020-04-07 16:28:14","","","","","","false if there is cycle on odd number of nodes",""
"21","IsDag","84","eval_input","2020-04-07 16:28:37","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"21","IsDag","85","eval_input","2020-04-07 16:28:42","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"21","IsDag","86","eval_input","2020-04-07 16:28:44","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"21","IsDag","87","eval_input","2020-04-07 16:28:54","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"21","IsDag","88","eval_input","2020-04-07 16:29:03","inst myInst {
  Node = A + B
  edges = B->B + A->A
}","false","","","","",""
"21","IsDag","89","eval_input","2020-04-07 16:29:09","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"21","IsDag","90","eval_input","2020-04-07 16:29:16","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"21","IsDag","91","eval_input","2020-04-07 16:29:24","inst myInst {
  Node = A + B
  edges = B->A
}","true","","","","",""
"21","IsDag","92","eval_input","2020-04-07 16:29:40","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A + B->B
}","false","","","","",""
"21","IsDag","93","eval_input","2020-04-07 16:29:47","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A
}","false","","","","",""
"21","IsDag","94","eval_input","2020-04-07 16:29:54","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + A->A
}","false","","","","",""
"21","IsDag","95","eval_input","2020-04-07 16:30:01","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"21","IsDag","96","eval_input","2020-04-07 16:30:09","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"21","IsDag","97","eval_input","2020-04-07 16:30:16","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"21","IsDag","98","eval_input","2020-04-07 16:30:31","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + A->A
}","false","","","","",""
"21","IsDag","99","eval_input","2020-04-07 16:30:41","inst myInst {
  Node = A + B + C
  edges = B->A
}","true","","","","",""
"21","IsDag","100","eval_input","2020-04-07 16:30:46","inst myInst {
  Node = A + B + C
  edges = B->A + A->B
}","false","","","","",""
"21","IsDag","101","eval_input","2020-04-07 16:30:53","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"21","IsDag","102","eval_input","2020-04-07 16:30:56","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"21","IsDag","103","eval_input","2020-04-07 16:31:01","inst myInst {
  Node = A + B + C + D
  edges = A->A
}","false","","","","",""
"21","IsDag","104","eval_input","2020-04-07 16:31:07","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"21","IsDag","105","eval_input","2020-04-07 16:31:20","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"21","IsDag","106","eval_input","2020-04-07 16:31:35","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->A + C->B
}","false","","","","",""
"21","IsDag","107","quiz_answer","2020-04-07 16:31:55","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"21","IsDag","108","quiz_answer","2020-04-07 16:31:58","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"21","IsDag","109","quiz_answer","2020-04-07 16:32:00","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"21","IsDag","110","quiz_answer","2020-04-07 16:32:07","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"21","IsDag","111","quiz_answer","2020-04-07 16:32:10","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"21","IsDag","112","quiz_answer","2020-04-07 16:32:14","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"21","IsDag","113","quiz_answer","2020-04-07 16:32:19","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"21","IsDag","114","quiz_answer","2020-04-07 16:32:22","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"21","IsDag","115","final_answer","2020-04-07 16:32:23","","","","","","false if any cycle",""
"22","ThreeCycle","0","eval_input","2020-04-07 17:48:57","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"22","ThreeCycle","1","eval_input","2020-04-07 17:49:27","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"22","ThreeCycle","2","eval_input","2020-04-07 17:49:32","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"22","ThreeCycle","3","eval_input","2020-04-07 17:49:37","inst myInst {
  Node = A + B + C + D
  edges = none
}","false","","","","",""
"22","ThreeCycle","4","eval_input","2020-04-07 17:49:40","inst myInst {
  Node = A + B + C + D
  edges = A->B
}","false","","","","",""
"22","ThreeCycle","5","eval_input","2020-04-07 17:49:45","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"22","ThreeCycle","6","eval_input","2020-04-07 17:49:49","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"22","ThreeCycle","7","eval_input","2020-04-07 17:50:04","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"22","ThreeCycle","8","eval_input","2020-04-07 17:50:11","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"22","ThreeCycle","9","eval_input","2020-04-07 17:50:14","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"22","ThreeCycle","10","eval_input","2020-04-07 17:50:17","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"22","ThreeCycle","11","eval_input","2020-04-07 17:50:22","inst myInst {
  Node = A + B
  edges = B->A
}","false","","","","",""
"22","ThreeCycle","12","eval_input","2020-04-07 17:50:31","inst myInst {
  Node = A + B
  edges = B->A + A->B + A->A + B->B
}","false","","","","",""
"22","ThreeCycle","13","eval_input","2020-04-07 17:50:44","inst myInst {
  Node = A + B + C
  edges = B->A + A->B + A->A + B->B
}","false","","","","",""
"22","ThreeCycle","14","eval_input","2020-04-07 17:51:01","inst myInst {
  Node = A + B + C
  edges = B->A + A->B + A->A + B->B
}","false","","","","",""
"22","ThreeCycle","15","eval_input","2020-04-07 17:51:20","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"22","ThreeCycle","16","eval_input","2020-04-07 17:51:24","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"22","ThreeCycle","17","eval_input","2020-04-07 17:51:51","inst myInst {
  Node = A + B
  edges = A->B + A->A
}","false","","","","",""
"22","ThreeCycle","18","eval_input","2020-04-07 17:51:56","inst myInst {
  Node = A + B
  edges = B->B + A->A
}","false","","","","",""
"22","ThreeCycle","19","eval_input","2020-04-07 17:51:57","inst myInst {
  Node = A + B
  edges = B->B + A->B
}","false","","","","",""
"22","ThreeCycle","20","eval_input","2020-04-07 17:52:00","inst myInst {
  Node = A + B
  edges = B->B + B->A
}","false","","","","",""
"22","ThreeCycle","21","eval_input","2020-04-07 17:52:04","inst myInst {
  Node = A + B
  edges = B->B + B->A + A->A
}","false","","","","",""
"22","ThreeCycle","22","eval_input","2020-04-07 17:52:06","inst myInst {
  Node = A + B
  edges = B->B + B->A + A->B
}","false","","","","",""
"22","ThreeCycle","23","quiz_answer","2020-04-07 17:52:22","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"22","ThreeCycle","24","quiz_answer","2020-04-07 17:52:26","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"22","ThreeCycle","25","quiz_answer","2020-04-07 17:52:28","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"22","ThreeCycle","26","quiz_answer","2020-04-07 17:52:30","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"22","ThreeCycle","27","quiz_answer","2020-04-07 17:52:32","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"22","ThreeCycle","28","eval_input","2020-04-07 17:52:42","inst myInst {
  Node = A + B
  edges = B->B + B->A + A->B
}","false","","","","",""
"22","ThreeCycle","29","eval_input","2020-04-07 17:52:54","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"22","ThreeCycle","30","eval_input","2020-04-07 17:53:00","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"22","ThreeCycle","31","eval_input","2020-04-07 17:53:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"22","ThreeCycle","32","eval_input","2020-04-07 17:53:14","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + C->B
}","true","","","","",""
"22","ThreeCycle","33","eval_input","2020-04-07 17:53:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + C->C
}","true","","","","",""
"22","ThreeCycle","34","eval_input","2020-04-07 17:53:33","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"22","ThreeCycle","35","eval_input","2020-04-07 17:53:37","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"22","ThreeCycle","36","eval_input","2020-04-07 17:53:44","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + A->C + C->B
}","true","","","","",""
"22","ThreeCycle","37","eval_input","2020-04-07 17:53:59","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"22","ThreeCycle","38","eval_input","2020-04-07 17:54:16","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"22","ThreeCycle","39","eval_input","2020-04-07 17:54:34","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D
}","false","","","","",""
"22","ThreeCycle","40","eval_input","2020-04-07 17:54:37","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A
}","true","","","","",""
"22","ThreeCycle","41","eval_input","2020-04-07 17:54:48","inst myInst {
  Node = A + B + C + D + E
  edges = C->D + D->E + E->C
}","true","","","","",""
"22","ThreeCycle","42","eval_input","2020-04-07 17:54:58","inst myInst {
  Node = A + B + C + D + E
  edges = C->D + D->E + E->C + A->B + B->C
}","true","","","","",""
"22","ThreeCycle","43","eval_input","2020-04-07 17:55:02","inst myInst {
  Node = A + B + C + D + E
  edges = C->D + D->E + E->C + A->B + B->A
}","true","","","","",""
"22","ThreeCycle","44","eval_input","2020-04-07 17:55:18","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + C->D + D->E + E->A
}","true","","","","",""
"22","ThreeCycle","45","eval_input","2020-04-07 17:55:23","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A
}","true","","","","",""
"22","ThreeCycle","46","eval_input","2020-04-07 17:55:36","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D
}","false","","","","",""
"22","ThreeCycle","47","eval_input","2020-04-07 17:55:39","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A
}","true","","","","",""
"22","ThreeCycle","48","eval_input","2020-04-07 17:56:00","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + C->D + D->E + E->C
}","true","","","","",""
"22","ThreeCycle","49","eval_input","2020-04-07 17:56:12","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"22","ThreeCycle","50","eval_input","2020-04-07 17:56:17","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A
}","true","","","","",""
"22","ThreeCycle","51","quiz_answer","2020-04-07 17:56:30","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"22","ThreeCycle","52","quiz_answer","2020-04-07 17:56:33","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"22","ThreeCycle","53","quiz_answer","2020-04-07 17:56:35","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"22","ThreeCycle","54","quiz_answer","2020-04-07 17:56:40","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"22","ThreeCycle","55","quiz_answer","2020-04-07 17:56:43","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"22","ThreeCycle","56","quiz_answer","2020-04-07 17:56:48","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"22","ThreeCycle","57","quiz_answer","2020-04-07 17:56:54","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"22","ThreeCycle","58","quiz_answer","2020-04-07 17:57:00","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"22","ThreeCycle","59","final_answer","2020-04-07 17:57:01","","","","","","exists a loop of exactly three nodes?",""
"22","IsDag","60","eval_input","2020-04-07 17:57:15","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A
}","false","","","","",""
"22","IsDag","61","eval_input","2020-04-07 17:57:30","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"22","IsDag","62","eval_input","2020-04-07 17:57:34","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"22","IsDag","63","eval_input","2020-04-07 17:57:38","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"22","IsDag","64","eval_input","2020-04-07 17:57:40","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"22","IsDag","65","eval_input","2020-04-07 17:57:43","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"22","IsDag","66","eval_input","2020-04-07 17:57:47","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"22","IsDag","67","eval_input","2020-04-07 17:57:54","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"22","IsDag","68","eval_input","2020-04-07 17:57:59","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"22","IsDag","69","eval_input","2020-04-07 17:58:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"22","IsDag","70","eval_input","2020-04-07 17:58:06","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"22","IsDag","71","eval_input","2020-04-07 17:58:13","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"22","IsDag","72","quiz_answer","2020-04-07 17:58:27","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"22","IsDag","73","quiz_answer","2020-04-07 17:58:30","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"22","IsDag","74","quiz_answer","2020-04-07 17:58:32","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"22","IsDag","75","quiz_answer","2020-04-07 17:58:41","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"22","IsDag","76","quiz_answer","2020-04-07 17:58:45","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"22","IsDag","77","quiz_answer","2020-04-07 17:58:50","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"22","IsDag","78","quiz_answer","2020-04-07 17:59:02","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"22","IsDag","79","quiz_answer","2020-04-07 17:59:05","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"22","IsDag","80","final_answer","2020-04-07 17:59:06","","","","","","no cycles in graph",""
"22","IsBipartite","81","eval_input","2020-04-07 17:59:18","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"22","IsBipartite","82","eval_input","2020-04-07 17:59:21","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"22","IsBipartite","83","eval_input","2020-04-07 17:59:28","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"22","IsBipartite","84","eval_input","2020-04-07 17:59:35","inst myInst {
  Node = A + B + C
  edges = A->A + B->A
}","false","","","","",""
"22","IsBipartite","85","eval_input","2020-04-07 17:59:39","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"22","IsBipartite","86","eval_input","2020-04-07 17:59:45","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"22","IsBipartite","87","eval_input","2020-04-07 17:59:47","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"22","IsBipartite","88","eval_input","2020-04-07 17:59:50","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + A->A
}","false","","","","",""
"22","IsBipartite","89","eval_input","2020-04-07 17:59:58","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C
}","true","","","","",""
"22","IsBipartite","90","eval_input","2020-04-07 18:00:02","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B
}","true","","","","",""
"22","IsBipartite","91","eval_input","2020-04-07 18:00:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B + A->C + C->A
}","false","","","","",""
"22","IsBipartite","92","eval_input","2020-04-07 18:00:15","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B + A->C
}","false","","","","",""
"22","IsBipartite","93","eval_input","2020-04-07 18:00:26","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B
}","true","","","","",""
"22","IsBipartite","94","eval_input","2020-04-07 18:01:08","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"22","IsBipartite","95","eval_input","2020-04-07 18:01:11","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"22","IsBipartite","96","eval_input","2020-04-07 18:01:16","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"22","IsBipartite","97","eval_input","2020-04-07 18:01:23","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + C->A
}","false","","","","",""
"22","IsBipartite","98","eval_input","2020-04-07 18:01:41","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C 
}","true","","","","",""
"22","IsBipartite","99","eval_input","2020-04-07 18:01:57","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + A->A
}","false","","","","",""
"22","IsBipartite","100","eval_input","2020-04-07 18:02:02","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"22","IsBipartite","101","eval_input","2020-04-07 18:02:05","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"22","IsBipartite","102","eval_input","2020-04-07 18:02:14","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"22","IsBipartite","103","eval_input","2020-04-07 18:02:31","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"22","IsBipartite","104","eval_input","2020-04-07 18:02:36","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->B
}","false","","","","",""
"22","IsBipartite","105","eval_input","2020-04-07 18:02:38","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->C
}","true","","","","",""
"22","IsBipartite","106","eval_input","2020-04-07 18:02:41","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"22","IsBipartite","107","quiz_answer","2020-04-07 18:02:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"22","IsBipartite","108","quiz_answer","2020-04-07 18:02:54","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"22","IsBipartite","109","quiz_answer","2020-04-07 18:02:57","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"22","IsBipartite","110","quiz_answer","2020-04-07 18:03:06","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"22","IsBipartite","111","quiz_answer","2020-04-07 18:03:09","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"22","IsBipartite","112","quiz_answer","2020-04-07 18:03:14","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"22","IsBipartite","113","quiz_answer","2020-04-07 18:03:19","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"22","IsBipartite","114","quiz_answer","2020-04-07 18:03:21","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"22","IsBipartite","115","final_answer","2020-04-07 18:03:22","","","","","","no cycles with an odd number of nodes",""
"23","ThreeCycle","0","eval_input","2020-04-07 21:13:47","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"23","ThreeCycle","1","eval_input","2020-04-07 21:14:06","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"23","ThreeCycle","2","eval_input","2020-04-07 21:14:09","inst myInst {
  Node = A
       + B
       + C
  edges = A->C
}","false","","","","",""
"23","ThreeCycle","3","eval_input","2020-04-07 21:14:16","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"23","ThreeCycle","4","eval_input","2020-04-07 21:14:23","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"23","ThreeCycle","5","eval_input","2020-04-07 21:14:28","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->A
}","false","","","","",""
"23","ThreeCycle","6","eval_input","2020-04-07 21:14:32","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + C->A
}","false","","","","",""
"23","ThreeCycle","7","eval_input","2020-04-07 21:14:49","inst myInst {
  Node = A
       + C
  edges = A->C + C->A
}","false","","","","",""
"23","ThreeCycle","8","eval_input","2020-04-07 21:15:05","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + C->B + B->A
}","true","","","","",""
"23","ThreeCycle","9","eval_input","2020-04-07 21:15:12","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->C + C->B + B->A
}","true","","","","",""
"23","ThreeCycle","10","eval_input","2020-04-07 21:15:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"23","ThreeCycle","11","eval_input","2020-04-07 21:16:35","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"23","ThreeCycle","12","eval_input","2020-04-07 21:16:56","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A
}","false","","","","",""
"23","ThreeCycle","13","eval_input","2020-04-07 21:17:45","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->B
}","false","","","","",""
"23","ThreeCycle","14","eval_input","2020-04-07 21:17:54","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->B + B->A
}","false","","","","",""
"23","ThreeCycle","15","quiz_answer","2020-04-07 21:18:42","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"23","ThreeCycle","16","quiz_answer","2020-04-07 21:18:49","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"23","ThreeCycle","17","quiz_answer","2020-04-07 21:18:54","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"23","ThreeCycle","18","quiz_answer","2020-04-07 21:19:01","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"23","ThreeCycle","19","quiz_answer","2020-04-07 21:19:06","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"23","ThreeCycle","20","quiz_answer","2020-04-07 21:19:10","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"23","ThreeCycle","21","quiz_answer","2020-04-07 21:19:17","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"23","ThreeCycle","22","quiz_answer","2020-04-07 21:19:22","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"23","ThreeCycle","23","final_answer","2020-04-07 21:19:24","","","","","","A predicate that returns true if there is a cycle with only three nodes",""
"23","IsDag","24","eval_input","2020-04-07 21:19:44","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->B + B->A
}","false","","","","",""
"23","IsDag","25","eval_input","2020-04-07 21:19:54","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"23","IsDag","26","eval_input","2020-04-07 21:20:01","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"23","IsDag","27","eval_input","2020-04-07 21:20:05","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"23","IsDag","28","eval_input","2020-04-07 21:20:08","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"23","IsDag","29","eval_input","2020-04-07 21:20:13","inst myInst {
  Node = A + B 
  edges = A->B
}","true","","","","",""
"23","IsDag","30","eval_input","2020-04-07 21:20:18","inst myInst {
  Node = A + B 
  edges = A->B + B->A
}","false","","","","",""
"23","IsDag","31","eval_input","2020-04-07 21:20:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"23","IsDag","32","eval_input","2020-04-07 21:20:31","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"23","IsDag","33","quiz_answer","2020-04-07 21:20:52","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"23","IsDag","34","eval_input","2020-04-07 21:21:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"23","IsDag","35","quiz_answer","2020-04-07 21:21:17","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"23","IsDag","36","quiz_answer","2020-04-07 21:21:21","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"23","IsDag","37","quiz_answer","2020-04-07 21:21:27","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"23","IsDag","38","quiz_answer","2020-04-07 21:21:36","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"23","IsDag","39","quiz_answer","2020-04-07 21:21:40","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"23","IsDag","40","quiz_answer","2020-04-07 21:21:49","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"23","IsDag","41","quiz_answer","2020-04-07 21:22:00","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"23","IsDag","42","quiz_answer","2020-04-07 21:22:06","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"23","IsDag","43","final_answer","2020-04-07 21:22:07","","","","","","predicate returns true if there are no cycles"," else false"
"23","IsBipartite","44","eval_input","2020-04-07 21:22:18","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"23","IsBipartite","45","eval_input","2020-04-07 21:22:31","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C + C->A
}","false","","","","",""
"23","IsBipartite","46","eval_input","2020-04-07 21:22:37","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"23","IsBipartite","47","eval_input","2020-04-07 21:22:39","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"23","IsBipartite","48","eval_input","2020-04-07 21:22:42","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"23","IsBipartite","49","eval_input","2020-04-07 21:22:47","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"23","IsBipartite","50","eval_input","2020-04-07 21:22:53","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"23","IsBipartite","51","eval_input","2020-04-07 21:23:05","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"23","IsBipartite","52","quiz_answer","2020-04-07 21:23:51","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"23","IsBipartite","53","eval_input","2020-04-07 21:23:57","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"23","IsBipartite","54","eval_input","2020-04-07 21:24:09","inst myInst {
  Node = A + B + C
  edges = A->A + A->B
}","false","","","","",""
"23","IsBipartite","55","eval_input","2020-04-07 21:24:14","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"23","IsBipartite","56","quiz_answer","2020-04-07 21:25:29","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"23","IsBipartite","57","quiz_answer","2020-04-07 21:25:33","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"23","IsBipartite","58","quiz_answer","2020-04-07 21:25:40","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"23","IsBipartite","59","quiz_answer","2020-04-07 21:25:46","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"23","IsBipartite","60","quiz_answer","2020-04-07 21:25:50","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"23","IsBipartite","61","quiz_answer","2020-04-07 21:25:55","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"23","IsBipartite","62","quiz_answer","2020-04-07 21:25:59","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"23","IsBipartite","63","eval_input","2020-04-07 21:26:31","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"23","IsBipartite","64","eval_input","2020-04-07 21:26:43","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"23","IsBipartite","65","quiz_answer","2020-04-07 21:27:09","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"23","IsBipartite","66","quiz_answer","2020-04-07 21:27:29","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"23","IsBipartite","67","quiz_answer","2020-04-07 21:27:33","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"23","IsBipartite","68","quiz_answer","2020-04-07 21:27:38","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"23","IsBipartite","69","quiz_answer","2020-04-07 21:27:44","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"23","IsBipartite","70","quiz_answer","2020-04-07 21:27:48","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"23","IsBipartite","71","quiz_answer","2020-04-07 21:27:52","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"23","IsBipartite","72","quiz_answer","2020-04-07 21:28:00","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"23","IsBipartite","73","quiz_answer","2020-04-07 21:28:04","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"23","IsBipartite","74","final_answer","2020-04-07 21:28:05","","","","","","predicate returns true if there are no cycles, or cycles with even number of nodes; else false",""
"24","IsDag","0","eval_input","2020-04-07 21:43:19","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"24","IsDag","1","eval_input","2020-04-07 21:43:33","inst myInst {
  Node = A
       + B
      
  edges = none
}","true","","","","",""
"24","IsDag","2","eval_input","2020-04-07 21:43:37","inst myInst {
  Node = A
      
      
  edges = none
}","true","","","","",""
"24","IsDag","3","eval_input","2020-04-07 21:43:41","inst myInst {
  Node = none
      
      
  edges = none
}","true","","","","",""
"24","IsDag","4","eval_input","2020-04-07 21:43:52","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"24","IsDag","5","eval_input","2020-04-07 21:44:19","inst myInst {
  Node = A + B + C + D
  edges = A->B
}","true","","","","",""
"24","IsDag","6","eval_input","2020-04-07 21:44:27","inst myInst {
  Node = A + B + C + D
  edges = A->B + A-> C
}","true","","","","",""
"24","IsDag","7","eval_input","2020-04-07 21:44:38","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A
}","false","","","","",""
"24","IsDag","8","eval_input","2020-04-07 21:44:43","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->A
}","false","","","","",""
"24","IsDag","9","eval_input","2020-04-07 21:44:59","inst myInst {
  Node = A + B + C
  edges = A->C + B->A
}","true","","","","",""
"24","IsDag","10","eval_input","2020-04-07 21:45:04","inst myInst {
  Node = A + B + C
  edges = A->C + C->A
}","false","","","","",""
"24","IsDag","11","eval_input","2020-04-07 21:45:20","inst myInst {
  Node = A + B + C
  edges = A->C + C->A + C->C
}","false","","","","",""
"24","IsDag","12","eval_input","2020-04-07 21:45:32","inst myInst {
  Node = A + B + C
  edges = A->C + C->B + B->A
}","false","","","","",""
"24","IsDag","13","eval_input","2020-04-07 21:46:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"24","IsDag","14","eval_input","2020-04-07 21:46:14","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","false","","","","",""
"24","IsDag","15","eval_input","2020-04-07 21:46:34","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->B
}","false","","","","",""
"24","IsDag","16","eval_input","2020-04-07 21:46:43","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->B
}","true","","","","",""
"24","IsDag","17","quiz_answer","2020-04-07 21:49:16","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"24","IsDag","18","quiz_answer","2020-04-07 21:49:21","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"24","IsDag","19","quiz_answer","2020-04-07 21:49:26","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"24","IsDag","20","quiz_answer","2020-04-07 21:49:36","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"24","IsDag","21","quiz_answer","2020-04-07 21:49:41","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"24","IsDag","22","quiz_answer","2020-04-07 21:49:47","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"24","IsDag","23","quiz_answer","2020-04-07 21:49:58","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"24","IsDag","24","quiz_answer","2020-04-07 21:50:13","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"24","IsDag","25","final_answer","2020-04-07 21:50:15","","","","","","I think it's checking to see whether the instance is acyclic. For example, reflexive and symmetric edge relations produce FALSE, as do edge relations that make a cycle, like A->B + B->C + C->A",""
"24","IsBipartite","26","eval_input","2020-04-07 21:50:31","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->B
}","true","","","","",""
"24","IsBipartite","27","eval_input","2020-04-07 21:50:58","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->B + B->A
}","true","","","","",""
"24","IsBipartite","28","eval_input","2020-04-07 21:51:21","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->B + B->A + B->D
}","true","","","","",""
"24","IsBipartite","29","eval_input","2020-04-07 21:51:44","inst myInst {
  Node = A + B + C + D
  edges = A->A
}","false","","","","",""
"24","IsBipartite","30","eval_input","2020-04-07 21:51:54","inst myInst {
  Node = A + B + C + D
  edges = A->B
}","true","","","","",""
"24","IsBipartite","31","eval_input","2020-04-07 21:55:26","inst myInst {
  Node = A + B + C + D
  edges = A->B
}","true","","","","",""
"24","IsBipartite","32","eval_input","2020-04-07 21:55:31","inst myInst {
  Node = A + B + C + D
  edges = B->B
}","false","","","","",""
"24","IsBipartite","33","eval_input","2020-04-07 21:55:37","inst myInst {
  Node = B
  edges = B->B
}","false","","","","",""
"24","IsBipartite","34","eval_input","2020-04-07 21:55:45","inst myInst {
  Node = A+B
  edges = B->A
}","true","","","","",""
"24","IsBipartite","35","eval_input","2020-04-07 21:55:53","inst myInst {
  Node = A+B+C+D
  edges = B->C
}","true","","","","",""
"24","IsBipartite","36","eval_input","2020-04-07 21:56:08","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D
}","true","","","","",""
"24","IsBipartite","37","eval_input","2020-04-07 21:56:33","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D + D->C + D->A + D->B
}","false","","","","",""
"24","IsBipartite","38","eval_input","2020-04-07 21:57:23","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D + D->C + D->A
}","true","","","","",""
"24","IsBipartite","39","eval_input","2020-04-07 21:58:22","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D
}","true","","","","",""
"24","IsBipartite","40","eval_input","2020-04-07 21:58:45","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D + D->B
}","false","","","","",""
"24","ThreeCycle","41","eval_input","2020-04-07 21:59:33","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D + D->B
}","true","","","","",""
"24","ThreeCycle","42","eval_input","2020-04-07 21:59:53","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D + D->B + D->C
}","true","","","","",""
"24","ThreeCycle","43","eval_input","2020-04-07 22:00:01","inst myInst {
  Node = A+B+C+D
  edges = B->C + C->D + D->B + D->C + D->D
}","true","","","","",""
"24","ThreeCycle","44","eval_input","2020-04-07 22:00:33","inst myInst {
  Node = A+B+C+D
  edges = B->D + C->D + D->B + A->D
}","false","","","","",""
"24","ThreeCycle","45","eval_input","2020-04-07 22:00:40","inst myInst {
  Node = A+B+C+D
  edges = B->D + C->D + A->D
}","false","","","","",""
"24","ThreeCycle","46","eval_input","2020-04-07 22:00:57","inst myInst {
  Node = A+B+C+D
  edges = B->D + C->D
}","false","","","","",""
"24","ThreeCycle","47","eval_input","2020-04-07 22:01:08","inst myInst {
  Node = A+B+C+D
  edges = B->D + D->D
}","false","","","","",""
"24","ThreeCycle","48","eval_input","2020-04-07 22:01:31","inst myInst {
  Node = A+B+C+D
  edges = B->D + B->A
}","false","","","","",""
"24","ThreeCycle","49","eval_input","2020-04-07 22:02:27","inst myInst {
  Node = A+B+C+D
  edges = B->D + B->C
}","false","","","","",""
"24","ThreeCycle","50","eval_input","2020-04-07 22:02:40","inst myInst {
  Node = A+B+C+D
  edges = D->C + B->C
}","false","","","","",""
"24","ThreeCycle","51","quiz_answer","2020-04-07 22:03:55","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"24","ThreeCycle","52","quiz_answer","2020-04-07 22:04:01","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"24","ThreeCycle","53","quiz_answer","2020-04-07 22:04:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"24","ThreeCycle","54","final_answer","2020-04-07 22:04:18","","","","","","It is testing whether the instance is bijective (I think that's what it's called? i.e., as a function, each input corresponds to one and only one output, and each output can only be returned by one input)",""
"24","IsBipartite","55","eval_input","2020-04-07 22:04:43","inst myInst {
  Node = A+B+C+D
  edges = D->C + B->C
}","true","","","","",""
"24","IsBipartite","56","eval_input","2020-04-07 22:04:58","inst myInst {
  Node = A+B+C+D+E
  edges = D->C + B->C + C->A + C->E
}","true","","","","",""
"24","IsBipartite","57","eval_input","2020-04-07 22:05:03","inst myInst {
  Node = A+B+C+D+E
  edges = D->C + B->C + C->A + C->B
}","true","","","","",""
"24","IsBipartite","58","eval_input","2020-04-07 22:05:30","inst myInst {
  Node = A+B+C+D
  edges = D->C + B->C + A->C + C->C
}","false","","","","",""
"24","IsBipartite","59","eval_input","2020-04-07 22:05:40","inst myInst {
  Node = A+B+C+D
  edges = D->C + B->C + C->C
}","false","","","","",""
"24","IsBipartite","60","eval_input","2020-04-07 22:05:46","inst myInst {
  Node = A+B+C+D
  edges = C->C
}","false","","","","",""
"24","IsBipartite","61","eval_input","2020-04-07 22:05:51","inst myInst {
  Node = A+B+C+D
  edges = A->C
}","true","","","","",""
"24","IsBipartite","62","eval_input","2020-04-07 22:05:59","inst myInst {
  Node = A+B+C+D
  edges = none
}","true","","","","",""
"24","IsBipartite","63","eval_input","2020-04-07 22:06:08","inst myInst {
  Node = A+B+C+D
  edges = A->B + B->A
}","true","","","","",""
"24","IsBipartite","64","eval_input","2020-04-07 22:06:12","inst myInst {
  Node = A+B+C+D
  edges = A->B + B->B
}","false","","","","",""
"24","IsBipartite","65","eval_input","2020-04-07 22:06:35","inst myInst {
  Node = A+B+C+D
  edges = A->B + B->C + C->D + D->A + C->A + C->B 
}","false","","","","",""
"24","IsBipartite","66","eval_input","2020-04-07 22:07:09","inst myInst {
  Node = A+B+C+D+E
  edges = A->B + B->C + C->D + D->A + C->A + C->B 
}","false","","","","",""
"24","IsBipartite","67","eval_input","2020-04-07 22:07:17","inst myInst {
  Node = A+B+C+D+E
  edges = A->B + B->C + C->D + D->A + C->A + C->B + D->E 
}","false","","","","",""
"24","IsBipartite","68","eval_input","2020-04-07 22:07:37","inst myInst {
  Node = A+B+C+D
  edges = A->B + B->C + C->D + D->A + C->A + C->B + D->B 
}","false","","","","",""
"24","IsBipartite","69","eval_input","2020-04-07 22:09:29","inst myInst {
  Node = A+B+C
  edges = A->B + B->C + C->A
}","false","","","","",""
"25","IsDag","0","eval_input","2020-04-08 05:13:42","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"25","IsDag","1","eval_input","2020-04-08 05:13:51","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"25","IsDag","2","eval_input","2020-04-08 05:13:59","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> C
}","true","","","","",""
"25","IsDag","3","eval_input","2020-04-08 05:14:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> C + C-> A
}","false","","","","",""
"25","IsDag","4","eval_input","2020-04-08 05:14:28","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> C + B -> A
}","false","","","","",""
"25","IsDag","5","eval_input","2020-04-08 05:14:38","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> C + C->B
}","false","","","","",""
"25","IsDag","6","eval_input","2020-04-08 05:14:43","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> C + C -> B
}","false","","","","",""
"25","IsDag","7","eval_input","2020-04-08 05:14:50","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C -> B
}","true","","","","",""
"25","IsDag","8","eval_input","2020-04-08 05:15:15","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"25","IsDag","9","eval_input","2020-04-08 05:15:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B
}","true","","","","",""
"25","IsDag","10","eval_input","2020-04-08 05:15:27","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> A
}","false","","","","",""
"25","IsDag","11","eval_input","2020-04-08 05:15:31","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> C
}","true","","","","",""
"25","IsDag","12","eval_input","2020-04-08 05:15:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D
}","true","","","","",""
"25","IsDag","13","eval_input","2020-04-08 05:15:42","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + D -> A
}","false","","","","",""
"25","IsDag","14","eval_input","2020-04-08 05:15:47","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + D -> B
}","false","","","","",""
"25","IsDag","15","eval_input","2020-04-08 05:15:50","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + D -> C
}","true","","","","",""
"25","IsDag","16","eval_input","2020-04-08 05:15:57","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + D -> C + C -> A
}","false","","","","",""
"25","IsDag","17","quiz_answer","2020-04-08 05:16:51","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"25","IsDag","18","quiz_answer","2020-04-08 05:17:01","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"25","IsDag","19","quiz_answer","2020-04-08 05:17:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"25","IsDag","20","quiz_answer","2020-04-08 05:17:23","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"25","IsDag","21","quiz_answer","2020-04-08 05:17:32","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"25","IsDag","22","quiz_answer","2020-04-08 05:17:38","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"25","IsDag","23","quiz_answer","2020-04-08 05:17:49","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"25","IsDag","24","quiz_answer","2020-04-08 05:17:56","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"25","IsDag","25","final_answer","2020-04-08 05:18:01","","","","","","no cycle",""
"25","IsBipartite","26","eval_input","2020-04-08 05:18:24","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + D -> C + C -> A
}","true","","","","",""
"25","IsBipartite","27","eval_input","2020-04-08 05:18:38","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"25","IsBipartite","28","eval_input","2020-04-08 05:18:47","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B 
}","true","","","","",""
"25","IsBipartite","29","eval_input","2020-04-08 05:18:55","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> A
}","true","","","","",""
"25","IsBipartite","30","eval_input","2020-04-08 05:19:30","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + D -> C 
}","true","","","","",""
"25","IsBipartite","31","eval_input","2020-04-08 05:19:38","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + D -> C
}","true","","","","",""
"25","IsBipartite","32","eval_input","2020-04-08 05:19:42","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D
}","true","","","","",""
"25","IsBipartite","33","eval_input","2020-04-08 05:19:50","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B -> B
}","false","","","","",""
"25","IsBipartite","34","eval_input","2020-04-08 05:19:54","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A
}","false","","","","",""
"25","IsBipartite","35","eval_input","2020-04-08 05:19:59","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"25","IsBipartite","36","eval_input","2020-04-08 05:20:05","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A
}","false","","","","",""
"25","IsBipartite","37","eval_input","2020-04-08 05:20:10","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B
}","false","","","","",""
"25","IsBipartite","38","eval_input","2020-04-08 05:20:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B + C->C
}","false","","","","",""
"25","IsBipartite","39","eval_input","2020-04-08 05:20:36","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B + C -> C + D -> D
}","false","","","","",""
"25","IsBipartite","40","eval_input","2020-04-08 05:20:41","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B + C -> C + D -> A
}","false","","","","",""
"25","IsBipartite","41","eval_input","2020-04-08 05:20:47","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B + C -> C + D -> B
}","false","","","","",""
"25","IsBipartite","42","eval_input","2020-04-08 05:21:01","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B + C -> A + D -> A
}","false","","","","",""
"25","IsBipartite","43","eval_input","2020-04-08 05:21:05","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B + C -> D + D -> A
}","false","","","","",""
"25","IsBipartite","44","eval_input","2020-04-08 05:21:09","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->B + C -> B + D -> A
}","false","","","","",""
"25","IsBipartite","45","eval_input","2020-04-08 05:21:17","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->A + C -> A + D -> A
}","false","","","","",""
"25","IsBipartite","46","eval_input","2020-04-08 05:21:22","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->D + C -> A + D -> A
}","false","","","","",""
"25","IsBipartite","47","eval_input","2020-04-08 05:21:25","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + B->C + C -> A + D -> A
}","false","","","","",""
"25","IsBipartite","48","eval_input","2020-04-08 05:21:30","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B->C + C -> A + D -> A
}","false","","","","",""
"25","IsBipartite","49","eval_input","2020-04-08 05:21:35","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + B->C + C -> A + D -> A
}","true","","","","",""
"25","IsBipartite","50","eval_input","2020-04-08 05:22:33","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + B->C + C -> B + D -> A
}","true","","","","",""
"25","IsBipartite","51","eval_input","2020-04-08 05:22:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B->C + C -> B + D -> A
}","true","","","","",""
"25","IsBipartite","52","eval_input","2020-04-08 05:22:52","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A
}","false","","","","",""
"25","IsBipartite","53","eval_input","2020-04-08 05:23:13","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> A
}","true","","","","",""
"25","IsBipartite","54","eval_input","2020-04-08 05:23:23","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> A + A -> C
}","true","","","","",""
"25","IsBipartite","55","eval_input","2020-04-08 05:23:57","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> A + A -> C + C -> A
}","true","","","","",""
"25","IsBipartite","56","eval_input","2020-04-08 05:24:02","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> A + A -> D
}","true","","","","",""
"25","IsBipartite","57","eval_input","2020-04-08 05:24:06","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> D + A -> D
}","true","","","","",""
"25","IsBipartite","58","eval_input","2020-04-08 05:25:09","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->B
}","false","","","","",""
"25","IsBipartite","59","eval_input","2020-04-08 05:25:16","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"25","IsBipartite","60","eval_input","2020-04-08 05:25:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = C->C
}","false","","","","",""
"25","IsBipartite","61","eval_input","2020-04-08 05:25:25","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = D->D
}","false","","","","",""
"25","IsBipartite","62","eval_input","2020-04-08 05:25:30","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B
}","true","","","","",""
"25","IsBipartite","63","eval_input","2020-04-08 05:25:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->C
}","true","","","","",""
"25","IsBipartite","64","eval_input","2020-04-08 05:25:37","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->D
}","true","","","","",""
"25","IsBipartite","65","eval_input","2020-04-08 05:25:46","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A + A ->  B
}","false","","","","",""
"25","IsBipartite","66","eval_input","2020-04-08 05:25:55","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"25","IsBipartite","67","eval_input","2020-04-08 05:26:00","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A + A->B
}","false","","","","",""
"25","IsBipartite","68","eval_input","2020-04-08 05:26:03","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A + A->C
}","false","","","","",""
"25","IsBipartite","69","eval_input","2020-04-08 05:26:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A + A-> D
}","false","","","","",""
"25","IsBipartite","70","eval_input","2020-04-08 05:26:29","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"25","IsBipartite","71","eval_input","2020-04-08 05:26:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + A-> D
}","true","","","","",""
"25","IsBipartite","72","eval_input","2020-04-08 05:26:54","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + A-> A
}","false","","","","",""
"25","IsBipartite","73","eval_input","2020-04-08 05:26:58","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + A-> D
}","true","","","","",""
"25","IsBipartite","74","eval_input","2020-04-08 05:27:04","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + A-> C
}","true","","","","",""
"25","IsBipartite","75","eval_input","2020-04-08 05:27:15","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B -> B
}","false","","","","",""
"25","IsBipartite","76","eval_input","2020-04-08 05:27:26","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B -> A
}","true","","","","",""
"25","IsBipartite","77","eval_input","2020-04-08 05:27:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C -> C
}","false","","","","",""
"25","IsBipartite","78","eval_input","2020-04-08 05:28:36","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =A -> B + B->C + C -> A + D -> A
}","false","","","","",""
"25","IsBipartite","79","eval_input","2020-04-08 05:29:23","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =A -> B + B->C + C -> A + D -> D
}","false","","","","",""
"25","IsBipartite","80","eval_input","2020-04-08 05:29:36","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =A -> B + B->C + C -> A + A -> C
}","false","","","","",""
"25","IsBipartite","81","eval_input","2020-04-08 05:29:45","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =A -> B + B->C + C -> A 
}","false","","","","",""
"25","IsBipartite","82","eval_input","2020-04-08 05:29:57","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =A -> B + B->C + C -> A
}","false","","","","",""
"25","IsBipartite","83","eval_input","2020-04-08 11:51:07","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =A -> B + B->C + C -> A
}","false","","","","",""
"25","IsBipartite","84","eval_input","2020-04-08 11:52:47","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =A -> B + B->C + C -> A
}","false","","","","",""
"25","IsBipartite","85","eval_input","2020-04-08 11:53:34","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"25","IsBipartite","86","eval_input","2020-04-08 11:53:51","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A
  
}","false","","","","",""
"25","IsBipartite","87","eval_input","2020-04-08 11:54:06","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + A->B
  
}","false","","","","",""
"25","IsBipartite","88","eval_input","2020-04-08 11:54:29","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A + A -> B + B -> A
  
}","false","","","","",""
"25","IsBipartite","89","eval_input","2020-04-08 11:54:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A  + B -> A
  
}","false","","","","",""
"25","IsBipartite","90","eval_input","2020-04-08 11:54:52","inst myInst {
  Node = A
       + B

  edges = A -> A  + B -> A
  
}","false","","","","",""
"25","IsBipartite","91","eval_input","2020-04-08 11:54:59","inst myInst {
  Node = A
       + B

  edges = none
  
}","true","","","","",""
"25","IsBipartite","92","eval_input","2020-04-08 11:55:10","inst myInst {
  Node = A
       + B

  edges = A->A
  
}","false","","","","",""
"25","IsBipartite","93","eval_input","2020-04-08 11:55:13","inst myInst {
  Node = A
       + B

  edges = A->B
  
}","true","","","","",""
"25","IsBipartite","94","eval_input","2020-04-08 11:55:18","inst myInst {
  Node = A
       + B

  edges = B->B
  
}","false","","","","",""
"25","IsBipartite","95","eval_input","2020-04-08 11:55:20","inst myInst {
  Node = A
       + B

  edges = B->A
  
}","true","","","","",""
"25","IsBipartite","96","eval_input","2020-04-08 11:55:29","inst myInst {
  Node = A
       + B

  edges = A->B + B->A
  
}","true","","","","",""
"25","IsBipartite","97","eval_input","2020-04-08 11:55:36","inst myInst {
  Node = A
       + B

  edges = A->A
  
}","false","","","","",""
"25","IsBipartite","98","eval_input","2020-04-08 11:55:42","inst myInst {
  Node = A
       + B
       + C

  edges = A->A
  
}","false","","","","",""
"25","IsBipartite","99","eval_input","2020-04-08 11:55:45","inst myInst {
  Node = A
       + B
       + C

  edges = A->B
  
}","true","","","","",""
"25","IsBipartite","100","eval_input","2020-04-08 11:55:51","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->A
  
}","true","","","","",""
"25","IsBipartite","101","eval_input","2020-04-08 11:55:56","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C
  
}","true","","","","",""
"25","IsBipartite","102","eval_input","2020-04-08 11:56:01","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->B
  
}","false","","","","",""
"25","IsBipartite","103","eval_input","2020-04-08 11:56:14","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C
  
}","true","","","","",""
"25","IsBipartite","104","eval_input","2020-04-08 11:56:22","inst myInst {
  Node = A
       + B
       + C

  edges = none
  
}","true","","","","",""
"25","IsBipartite","105","eval_input","2020-04-08 11:56:34","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C
  
}","true","","","","",""
"25","IsBipartite","106","eval_input","2020-04-08 11:56:38","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->A
  
}","true","","","","",""
"25","IsBipartite","107","eval_input","2020-04-08 11:56:43","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->B
  
}","false","","","","",""
"25","IsBipartite","108","eval_input","2020-04-08 11:57:02","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C
  
}","true","","","","",""
"25","IsBipartite","109","eval_input","2020-04-08 11:57:13","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C + C->A
  
}","false","","","","",""
"25","IsBipartite","110","eval_input","2020-04-08 11:57:17","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C + C->B
  
}","true","","","","",""
"25","IsBipartite","111","eval_input","2020-04-08 11:57:22","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C + C->A
  
}","false","","","","",""
"25","IsBipartite","112","eval_input","2020-04-08 11:57:31","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C + C->B
  
}","true","","","","",""
"25","IsBipartite","113","eval_input","2020-04-08 11:57:51","inst myInst {
  Node = A
       + B
       + C

  edges = A->B + B->C + C->C
  
}","false","","","","",""
"25","IsBipartite","114","eval_input","2020-04-08 11:58:00","inst myInst {
  Node = A
       + B
       + C

  edges = none
  
}","true","","","","",""
"25","IsBipartite","115","eval_input","2020-04-08 11:58:07","inst myInst {
  Node = A
       + B
       + C

  edges = A -> B
  
}","true","","","","",""
"25","IsBipartite","116","eval_input","2020-04-08 11:58:13","inst myInst {
  Node = A
       + B
       + C

  edges = A -> A
  
}","false","","","","",""
"25","IsBipartite","117","eval_input","2020-04-08 11:58:20","inst myInst {
  Node = A
       + B
       + C

  edges = A -> B
  
}","true","","","","",""
"25","IsBipartite","118","quiz_answer","2020-04-08 12:02:03","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"25","IsBipartite","119","quiz_answer","2020-04-08 12:02:09","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"25","IsBipartite","120","quiz_answer","2020-04-08 12:02:15","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"25","IsBipartite","121","final_answer","2020-04-08 12:02:20","","","","","","I have no idea... A->A kind of thing is doing something though...",""
"26","IsBipartite","0","eval_input","2020-04-08 18:10:16","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"27","IsBipartite","0","eval_input","2020-04-09 11:49:07","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"27","IsBipartite","1","eval_input","2020-04-09 11:49:24","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"27","IsBipartite","2","eval_input","2020-04-09 11:50:09","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"27","IsBipartite","3","eval_input","2020-04-09 11:50:14","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","4","eval_input","2020-04-09 11:50:21","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","5","eval_input","2020-04-09 11:50:24","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","6","eval_input","2020-04-09 11:50:28","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","7","eval_input","2020-04-09 11:50:34","inst myInst {
  Node = A + B + C + D
  edges = A->B
}","true","","","","",""
"27","IsBipartite","8","eval_input","2020-04-09 11:50:37","inst myInst {
  Node = A + B + C + D
  edges = A->A
}","false","","","","",""
"27","IsBipartite","9","eval_input","2020-04-09 11:50:41","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"27","IsBipartite","10","eval_input","2020-04-09 11:50:52","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","11","eval_input","2020-04-09 11:51:00","inst myInst {
  Node = A + B
  edges = B->B
}","false","","","","",""
"27","IsBipartite","12","eval_input","2020-04-09 11:51:05","inst myInst {
  Node = A + B + C
  edges = B->B
}","false","","","","",""
"27","IsBipartite","13","eval_input","2020-04-09 11:51:10","inst myInst {
  Node = A + B + C
  edges = B->B + C->C
}","false","","","","",""
"27","IsBipartite","14","eval_input","2020-04-09 11:51:15","inst myInst {
  Node = A + B + C
  edges = B->B + C->C + A->A
}","false","","","","",""
"27","IsBipartite","15","eval_input","2020-04-09 11:51:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","16","eval_input","2020-04-09 11:51:48","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","17","eval_input","2020-04-09 11:51:57","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","18","eval_input","2020-04-09 11:52:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C
}","true","","","","",""
"27","IsBipartite","19","eval_input","2020-04-09 11:52:06","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->A
}","false","","","","",""
"27","IsBipartite","20","eval_input","2020-04-09 11:52:12","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","21","eval_input","2020-04-09 11:52:17","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->A
}","true","","","","",""
"27","IsBipartite","22","eval_input","2020-04-09 11:52:24","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","23","eval_input","2020-04-09 11:52:29","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","24","eval_input","2020-04-09 11:52:32","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","25","eval_input","2020-04-09 11:52:39","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + D->C
}","false","","","","",""
"27","IsBipartite","26","eval_input","2020-04-09 11:52:45","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->C
}","true","","","","",""
"27","IsBipartite","27","eval_input","2020-04-09 11:52:48","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->C
}","true","","","","",""
"27","IsBipartite","28","eval_input","2020-04-09 11:52:48","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->C
}","true","","","","",""
"27","IsBipartite","29","eval_input","2020-04-09 11:52:51","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->C
}","true","","","","",""
"27","IsBipartite","30","eval_input","2020-04-09 11:52:58","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"27","IsBipartite","31","eval_input","2020-04-09 11:53:03","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->B
}","false","","","","",""
"27","IsBipartite","32","eval_input","2020-04-09 11:53:52","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"27","IsBipartite","33","eval_input","2020-04-09 11:54:20","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","34","eval_input","2020-04-09 11:54:22","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","true","","","","",""
"27","IsBipartite","35","eval_input","2020-04-09 11:54:25","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"27","IsBipartite","36","eval_input","2020-04-09 11:54:39","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"27","IsBipartite","37","eval_input","2020-04-09 11:54:42","inst myInst {
  Node = A + B + C
  edges = A->C
}","true","","","","",""
"27","IsBipartite","38","eval_input","2020-04-09 11:54:56","inst myInst {
  Node = A + B + C
  edges = A->A + A->C
}","false","","","","",""
"27","IsBipartite","39","eval_input","2020-04-09 11:55:02","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"27","IsBipartite","40","eval_input","2020-04-09 11:55:52","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"27","IsBipartite","41","eval_input","2020-04-09 11:56:01","inst myInst {
  Node = A + B
  edges = A->A + A->B
}","false","","","","",""
"27","IsBipartite","42","eval_input","2020-04-09 11:57:02","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"27","IsBipartite","43","eval_input","2020-04-09 11:57:08","inst myInst {
  Node = A + B
  edges = B->A + A->B
}","true","","","","",""
"27","IsBipartite","44","eval_input","2020-04-09 11:57:32","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","45","eval_input","2020-04-09 11:57:47","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","true","","","","",""
"27","IsBipartite","46","eval_input","2020-04-09 11:58:08","inst myInst {
  Node = A + B + C
  edges = C->A + B->C + C->B
}","true","","","","",""
"27","IsBipartite","47","eval_input","2020-04-09 11:58:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C
}","true","","","","",""
"27","IsBipartite","48","eval_input","2020-04-09 11:58:46","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"27","IsBipartite","49","eval_input","2020-04-09 11:59:13","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"27","IsBipartite","50","eval_input","2020-04-09 11:59:19","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A
}","false","","","","",""
"27","IsBipartite","51","eval_input","2020-04-09 11:59:29","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A
}","false","","","","",""
"27","IsBipartite","52","eval_input","2020-04-09 11:59:33","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A + B->C
}","false","","","","",""
"27","IsBipartite","53","eval_input","2020-04-09 11:59:54","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A + C->B
}","false","","","","",""
"27","IsBipartite","54","eval_input","2020-04-09 12:00:08","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A
}","false","","","","",""
"27","IsBipartite","55","eval_input","2020-04-09 12:00:15","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A + B->A
}","false","","","","",""
"27","IsBipartite","56","eval_input","2020-04-09 12:00:20","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + A->A + B->A + C->A
}","false","","","","",""
"27","IsBipartite","57","eval_input","2020-04-09 12:00:28","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->A + C->A
}","true","","","","",""
"27","IsBipartite","58","eval_input","2020-04-09 12:01:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","59","eval_input","2020-04-09 12:01:15","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsBipartite","60","eval_input","2020-04-09 12:01:45","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"27","IsBipartite","61","eval_input","2020-04-09 12:01:52","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"27","IsBipartite","62","eval_input","2020-04-09 12:02:30","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"27","IsBipartite","63","eval_input","2020-04-09 12:02:53","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->B
}","false","","","","",""
"27","IsBipartite","64","eval_input","2020-04-09 12:03:12","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"27","IsBipartite","65","quiz_answer","2020-04-09 12:04:45","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"27","IsBipartite","66","quiz_answer","2020-04-09 12:04:56","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"27","IsBipartite","67","quiz_answer","2020-04-09 12:05:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"27","IsBipartite","68","quiz_answer","2020-04-09 12:05:58","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"27","IsBipartite","69","quiz_answer","2020-04-09 12:06:10","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"27","IsBipartite","70","quiz_answer","2020-04-09 12:06:32","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"27","IsBipartite","71","quiz_answer","2020-04-09 12:06:49","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"27","IsBipartite","72","quiz_answer","2020-04-09 12:07:12","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"27","IsBipartite","73","final_answer","2020-04-09 12:07:13","","","","","","This predicate evaluates to false when there exists a loop with an odd number of nodes in the loop, and false otherwise",""
"27","ThreeCycle","74","eval_input","2020-04-09 12:08:09","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"27","ThreeCycle","75","eval_input","2020-04-09 12:08:12","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"27","ThreeCycle","76","eval_input","2020-04-09 12:08:47","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"27","ThreeCycle","77","eval_input","2020-04-09 12:09:02","inst myInst {
  Node = A +B
  edges = A->B
}","false","","","","",""
"27","ThreeCycle","78","eval_input","2020-04-09 12:09:12","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"27","ThreeCycle","79","eval_input","2020-04-09 12:09:26","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"27","ThreeCycle","80","eval_input","2020-04-09 12:09:34","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"27","ThreeCycle","81","eval_input","2020-04-09 12:09:37","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"27","ThreeCycle","82","eval_input","2020-04-09 12:09:42","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"27","ThreeCycle","83","eval_input","2020-04-09 12:09:56","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"27","ThreeCycle","84","eval_input","2020-04-09 12:10:12","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"27","ThreeCycle","85","eval_input","2020-04-09 12:10:29","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","false","","","","",""
"27","ThreeCycle","86","eval_input","2020-04-09 12:10:40","inst myInst {
  Node = A + B + C
  edges = A->B + C->A
}","false","","","","",""
"27","ThreeCycle","87","eval_input","2020-04-09 12:26:01","inst myInst {
  Node = A + B + C
  edges = A->B + C->C
}","false","","","","",""
"27","ThreeCycle","88","eval_input","2020-04-09 12:26:31","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->C
}","false","","","","",""
"27","ThreeCycle","89","eval_input","2020-04-09 12:26:32","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->C
}","false","","","","",""
"27","ThreeCycle","90","eval_input","2020-04-09 12:26:32","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->C
}","false","","","","",""
"27","ThreeCycle","91","eval_input","2020-04-09 12:26:35","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + C->C
}","false","","","","",""
"27","ThreeCycle","92","eval_input","2020-04-09 12:26:46","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + C->D + D->C
}","false","","","","",""
"27","ThreeCycle","93","eval_input","2020-04-09 12:30:19","inst myInst {
  Node = A + B + C
  edges = B->A + C->A
}","false","","","","",""
"27","ThreeCycle","94","eval_input","2020-04-09 12:30:32","inst myInst {
  Node = A + B + C
  edges = B->A + C->A + B->C
}","false","","","","",""
"27","ThreeCycle","95","eval_input","2020-04-09 12:32:22","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"27","ThreeCycle","96","eval_input","2020-04-09 12:32:28","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"27","ThreeCycle","97","eval_input","2020-04-09 12:32:42","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->C + C->D
}","false","","","","",""
"27","ThreeCycle","98","eval_input","2020-04-09 12:32:53","inst myInst {
  Node = A + B + C + D
  edges = none
}","false","","","","",""
"27","ThreeCycle","99","eval_input","2020-04-09 12:33:25","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"27","ThreeCycle","100","eval_input","2020-04-09 12:33:34","inst myInst {
  Node = A + B
  edges = A->B + B->B
}","false","","","","",""
"27","ThreeCycle","101","quiz_answer","2020-04-09 12:45:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"27","ThreeCycle","102","quiz_answer","2020-04-09 12:45:40","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"27","ThreeCycle","103","quiz_answer","2020-04-09 12:45:43","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"27","ThreeCycle","104","quiz_answer","2020-04-09 12:45:46","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"27","ThreeCycle","105","quiz_answer","2020-04-09 12:45:49","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"27","ThreeCycle","106","final_answer","2020-04-09 12:45:56","","","","","","I have no idea",""
"27","IsDag","107","eval_input","2020-04-09 12:46:16","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"27","IsDag","108","eval_input","2020-04-09 12:46:21","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"27","IsDag","109","eval_input","2020-04-09 12:46:25","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"27","IsDag","110","eval_input","2020-04-09 12:46:31","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"27","IsDag","111","eval_input","2020-04-09 12:46:35","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"27","IsDag","112","eval_input","2020-04-09 12:46:46","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"27","IsDag","113","eval_input","2020-04-09 12:47:02","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"27","IsDag","114","eval_input","2020-04-09 12:47:09","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"27","IsDag","115","eval_input","2020-04-09 12:47:25","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"27","IsDag","116","eval_input","2020-04-09 12:47:35","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","false","","","","",""
"27","IsDag","117","eval_input","2020-04-09 12:47:45","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B + C->A
}","false","","","","",""
"27","IsDag","118","eval_input","2020-04-09 12:48:13","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"27","IsDag","119","eval_input","2020-04-09 12:48:45","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"27","IsDag","120","eval_input","2020-04-09 12:48:46","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"27","IsDag","121","eval_input","2020-04-09 12:48:47","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"27","IsDag","122","eval_input","2020-04-09 12:48:53","inst myInst {
  Node = A + B + C
  edges = A->B + C->B + B->B
}","false","","","","",""
"27","IsDag","123","eval_input","2020-04-09 12:49:10","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"27","IsDag","124","eval_input","2020-04-09 12:49:14","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"27","IsDag","125","quiz_answer","2020-04-09 12:49:38","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"27","IsDag","126","quiz_answer","2020-04-09 12:49:43","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"27","IsDag","127","quiz_answer","2020-04-09 12:49:46","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"27","IsDag","128","quiz_answer","2020-04-09 12:49:58","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"27","IsDag","129","quiz_answer","2020-04-09 12:50:02","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"27","IsDag","130","quiz_answer","2020-04-09 12:50:07","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"27","IsDag","131","quiz_answer","2020-04-09 12:50:12","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"27","IsDag","132","quiz_answer","2020-04-09 12:50:20","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"27","IsDag","133","final_answer","2020-04-09 12:50:21","","","","","","This predicate evaluates to true if there does not exist a cycle, false otherwise",""
"28","ThreeCycle","0","eval_input","2020-04-09 16:05:16","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"29","ThreeCycle","0","eval_input","2020-04-09 16:05:29","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"29","ThreeCycle","1","eval_input","2020-04-09 16:05:37","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"29","ThreeCycle","2","eval_input","2020-04-09 16:05:42","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"29","ThreeCycle","3","eval_input","2020-04-09 16:05:49","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"29","ThreeCycle","4","eval_input","2020-04-09 16:05:55","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"29","ThreeCycle","5","eval_input","2020-04-09 16:06:00","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"29","ThreeCycle","6","eval_input","2020-04-09 16:06:14","inst myInst {
  Node = A + B + C
  edges = A->A + B->B
}","false","","","","",""
"29","ThreeCycle","7","eval_input","2020-04-09 16:06:18","inst myInst {
  Node = A + B + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"28","ThreeCycle","1","eval_input","2020-04-09 16:06:18","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"28","ThreeCycle","2","eval_input","2020-04-09 16:06:27","inst myInst {
  Node = A
       + B
       + C
  edges = B->A
}","false","","","","",""
"29","ThreeCycle","8","eval_input","2020-04-09 16:06:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"29","ThreeCycle","9","eval_input","2020-04-09 16:06:39","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"28","ThreeCycle","3","eval_input","2020-04-09 16:06:43","inst myInst {
  Node = A
       + B
       + C
  edges = B->A + B->C
}","false","","","","",""
"28","ThreeCycle","4","eval_input","2020-04-09 16:06:48","inst myInst {
  Node = A
       + B
       + C
  edges = B->A + B->C + B->B
}","false","","","","",""
"28","ThreeCycle","5","eval_input","2020-04-09 16:07:00","inst myInst {
  Node = A
       + B
       + C
  edges = B->A + B->C + C->A
}","false","","","","",""
"29","ThreeCycle","10","eval_input","2020-04-09 16:07:01","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"28","ThreeCycle","6","eval_input","2020-04-09 16:07:18","inst myInst {
  Node = A
       + B
  edges = B->A + A->B
}","false","","","","",""
"28","ThreeCycle","7","eval_input","2020-04-09 16:07:42","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"28","ThreeCycle","8","eval_input","2020-04-09 16:07:47","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"28","ThreeCycle","9","eval_input","2020-04-09 16:07:59","inst myInst {
  Node = A + B + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"28","ThreeCycle","10","eval_input","2020-04-09 16:08:36","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"28","ThreeCycle","11","eval_input","2020-04-09 16:08:55","inst myInst {
  Node = A + B
  edges = B->A
}","false","","","","",""
"28","ThreeCycle","12","eval_input","2020-04-09 16:08:59","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"28","ThreeCycle","13","eval_input","2020-04-09 16:09:11","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"29","ThreeCycle","11","eval_input","2020-04-09 16:09:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"28","ThreeCycle","14","eval_input","2020-04-09 16:09:36","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"29","ThreeCycle","12","eval_input","2020-04-09 16:09:37","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"29","ThreeCycle","13","eval_input","2020-04-09 16:10:07","inst myInst {
  Node = A + B + C
  edges = A->C + C->B + B->A
}","true","","","","",""
"28","ThreeCycle","15","eval_input","2020-04-09 16:11:13","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"29","ThreeCycle","14","quiz_answer","2020-04-09 16:11:17","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"29","ThreeCycle","15","quiz_answer","2020-04-09 16:11:23","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"28","ThreeCycle","16","eval_input","2020-04-09 16:11:24","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"29","ThreeCycle","16","quiz_answer","2020-04-09 16:11:32","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"28","ThreeCycle","17","eval_input","2020-04-09 16:11:50","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","false","","","","",""
"29","ThreeCycle","17","quiz_answer","2020-04-09 16:11:53","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"29","ThreeCycle","18","quiz_answer","2020-04-09 16:12:00","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"28","ThreeCycle","18","eval_input","2020-04-09 16:12:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"28","ThreeCycle","19","eval_input","2020-04-09 16:12:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"28","ThreeCycle","20","eval_input","2020-04-09 16:12:17","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","false","","","","",""
"29","ThreeCycle","19","quiz_answer","2020-04-09 16:12:21","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"29","ThreeCycle","20","quiz_answer","2020-04-09 16:12:30","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"28","ThreeCycle","21","eval_input","2020-04-09 16:12:54","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"29","ThreeCycle","21","quiz_answer","2020-04-09 16:12:58","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"29","ThreeCycle","22","final_answer","2020-04-09 16:12:59","","","","","","Cycle containing three nodes.",""
"29","IsDag","23","eval_input","2020-04-09 16:13:17","inst myInst {
  Node = A + B + C
  edges = A->C + C->B + B->A
}","false","","","","",""
"28","ThreeCycle","22","quiz_answer","2020-04-09 16:13:30","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"28","ThreeCycle","23","quiz_answer","2020-04-09 16:13:35","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"28","ThreeCycle","24","quiz_answer","2020-04-09 16:13:38","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"28","ThreeCycle","25","quiz_answer","2020-04-09 16:13:42","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"28","ThreeCycle","26","quiz_answer","2020-04-09 16:13:45","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"29","IsDag","24","eval_input","2020-04-09 16:13:47","inst myInst {
  Node = A + B + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"28","ThreeCycle","27","quiz_answer","2020-04-09 16:13:48","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"28","ThreeCycle","28","quiz_answer","2020-04-09 16:13:51","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"28","ThreeCycle","29","quiz_answer","2020-04-09 16:13:53","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"29","IsDag","25","eval_input","2020-04-09 16:13:55","inst myInst {
  Node = A
  edges = A->A 
}","false","","","","",""
"29","IsDag","26","eval_input","2020-04-09 16:14:03","inst myInst {
  Node = A
  edges = none 
}","true","","","","",""
"29","IsDag","27","eval_input","2020-04-09 16:14:08","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"29","IsDag","28","eval_input","2020-04-09 16:14:14","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"28","IsDag","31","eval_input","2020-04-09 16:14:19","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"28","IsDag","32","eval_input","2020-04-09 16:14:33","inst myInst {
  Node = A + B + C + D + E
  edges = none
}","true","","","","",""
"28","IsDag","33","eval_input","2020-04-09 16:14:37","inst myInst {
  Node = A + B + C + D + E
  edges = A->B
}","true","","","","",""
"29","IsDag","29","eval_input","2020-04-09 16:14:40","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"28","IsDag","34","eval_input","2020-04-09 16:14:42","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->A
}","false","","","","",""
"29","IsDag","30","eval_input","2020-04-09 16:14:48","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"28","IsDag","35","eval_input","2020-04-09 16:14:58","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E
}","true","","","","",""
"29","IsDag","31","eval_input","2020-04-09 16:15:02","inst myInst {
  Node = A + B + C
  edges = A->B + C->B + B->A
}","false","","","","",""
"28","IsDag","36","eval_input","2020-04-09 16:15:07","inst myInst {
  Node = A + B + C + D + E
  edges = A->A
}","false","","","","",""
"28","IsDag","37","eval_input","2020-04-09 16:15:19","inst myInst {
  Node = A + B + C + D + E
  edges = A->A + B->B
}","false","","","","",""
"28","IsDag","38","eval_input","2020-04-09 16:16:04","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"28","IsDag","39","eval_input","2020-04-09 16:16:08","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"29","IsDag","32","eval_input","2020-04-09 16:16:11","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"29","IsDag","33","quiz_answer","2020-04-09 16:16:16","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"28","IsDag","40","quiz_answer","2020-04-09 16:16:18","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"28","IsDag","41","quiz_answer","2020-04-09 16:16:21","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"29","IsDag","34","quiz_answer","2020-04-09 16:16:22","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"28","IsDag","42","quiz_answer","2020-04-09 16:16:24","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"29","IsDag","35","quiz_answer","2020-04-09 16:16:26","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"29","IsDag","36","quiz_answer","2020-04-09 16:16:39","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"28","IsDag","43","quiz_answer","2020-04-09 16:16:55","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"28","IsDag","44","quiz_answer","2020-04-09 16:17:02","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"28","IsDag","45","quiz_answer","2020-04-09 16:17:06","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"29","IsDag","37","quiz_answer","2020-04-09 16:17:07","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"29","IsDag","38","quiz_answer","2020-04-09 16:17:11","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"28","IsDag","46","quiz_answer","2020-04-09 16:17:13","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"29","IsDag","39","quiz_answer","2020-04-09 16:17:15","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"28","IsDag","47","quiz_answer","2020-04-09 16:17:17","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"28","IsDag","48","final_answer","2020-04-09 16:17:18","","","","","","This predicate evaluates to true when there are no cycles in the edges. This includes self cycles. It does not matter how many nodes are in the set.",""
"29","IsDag","40","quiz_answer","2020-04-09 16:17:19","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"29","IsDag","41","quiz_answer","2020-04-09 16:17:25","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"29","IsDag","42","quiz_answer","2020-04-09 16:17:33","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"28","IsBipartite","49","eval_input","2020-04-09 16:17:34","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"29","IsDag","43","quiz_answer","2020-04-09 16:17:37","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"28","IsBipartite","50","eval_input","2020-04-09 16:17:38","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"28","IsBipartite","51","eval_input","2020-04-09 16:17:42","inst myInst {
  Node = A + B
  edges = A->A + A->B
}","false","","","","",""
"29","IsDag","44","quiz_answer","2020-04-09 16:17:42","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"29","IsDag","45","final_answer","2020-04-09 16:17:43","","","","","","no cycles, including self-cycles",""
"28","IsBipartite","52","eval_input","2020-04-09 16:17:47","inst myInst {
  Node = A + B
  edges = B->A
}","true","","","","",""
"29","IsBipartite","46","eval_input","2020-04-09 16:17:51","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"28","IsBipartite","53","eval_input","2020-04-09 16:17:52","inst myInst {
  Node = A + B
  edges = B->A + B->B
}","false","","","","",""
"29","IsBipartite","47","eval_input","2020-04-09 16:17:55","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"29","IsBipartite","48","eval_input","2020-04-09 16:17:59","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"28","IsBipartite","54","eval_input","2020-04-09 16:18:00","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"29","IsBipartite","49","eval_input","2020-04-09 16:18:05","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"28","IsBipartite","55","eval_input","2020-04-09 16:18:05","inst myInst {
  Node = A + B + C
  edges = A->B + C->B + A->A
}","false","","","","",""
"29","IsBipartite","50","eval_input","2020-04-09 16:18:11","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"29","IsBipartite","51","eval_input","2020-04-09 16:18:18","inst myInst {
  Node = A + B
  edges = A->B + B->A + B->B
}","false","","","","",""
"28","IsBipartite","56","eval_input","2020-04-09 16:18:32","inst myInst {
  Node = A + B
  edges = B->A
}","true","","","","",""
"29","IsBipartite","52","eval_input","2020-04-09 16:18:32","inst myInst {
  Node = A + B
  edges = A->B + B->A + B->B
}","false","","","","",""
"29","IsBipartite","53","eval_input","2020-04-09 16:18:38","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"28","IsBipartite","57","eval_input","2020-04-09 16:18:45","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"29","IsBipartite","54","quiz_answer","2020-04-09 16:18:45","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"29","IsBipartite","55","quiz_answer","2020-04-09 16:18:48","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"29","IsBipartite","56","quiz_answer","2020-04-09 16:18:54","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"29","IsBipartite","57","quiz_answer","2020-04-09 16:19:01","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"29","IsBipartite","58","quiz_answer","2020-04-09 16:19:06","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"28","IsBipartite","58","eval_input","2020-04-09 16:19:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + C->C
}","false","","","","",""
"29","IsBipartite","59","eval_input","2020-04-09 16:19:18","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"29","IsBipartite","60","eval_input","2020-04-09 16:19:34","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"29","IsBipartite","61","eval_input","2020-04-09 16:19:45","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"28","IsBipartite","59","eval_input","2020-04-09 16:19:46","inst myInst {
  Node = A + B + C
  edges = A->B 
}","true","","","","",""
"29","IsBipartite","62","eval_input","2020-04-09 16:20:06","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"28","IsBipartite","60","eval_input","2020-04-09 16:20:13","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"29","IsBipartite","63","quiz_answer","2020-04-09 16:20:18","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"29","IsBipartite","64","quiz_answer","2020-04-09 16:20:22","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"29","IsBipartite","65","quiz_answer","2020-04-09 16:20:30","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"28","IsBipartite","61","eval_input","2020-04-09 16:20:33","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"29","IsBipartite","66","quiz_answer","2020-04-09 16:20:34","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"29","IsBipartite","67","quiz_answer","2020-04-09 16:20:37","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"28","IsBipartite","62","eval_input","2020-04-09 16:20:40","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"29","IsBipartite","68","quiz_answer","2020-04-09 16:20:41","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"29","IsBipartite","69","quiz_answer","2020-04-09 16:20:46","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"29","IsBipartite","70","quiz_answer","2020-04-09 16:20:49","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"29","IsBipartite","71","final_answer","2020-04-09 16:20:50","","","","","","no cycles with an odd number of elements",""
"28","IsBipartite","63","eval_input","2020-04-09 16:20:59","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A
}","false","","","","",""
"28","IsBipartite","64","quiz_answer","2020-04-09 16:21:13","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"28","IsBipartite","65","quiz_answer","2020-04-09 16:21:19","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"28","IsBipartite","66","quiz_answer","2020-04-09 16:21:24","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"28","IsBipartite","67","quiz_answer","2020-04-09 16:21:35","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"28","IsBipartite","68","quiz_answer","2020-04-09 16:21:40","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"28","IsBipartite","69","quiz_answer","2020-04-09 16:21:57","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"28","IsBipartite","70","quiz_answer","2020-04-09 16:22:02","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"28","IsBipartite","71","quiz_answer","2020-04-09 16:22:18","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"28","IsBipartite","72","final_answer","2020-04-09 16:22:19","","","","","","No odd number of nodes with a cycle, but an even number of nodes can have a cycle, not including self cycles.",""
"30","IsBipartite","0","eval_input","2020-04-09 17:22:20","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"30","IsBipartite","1","eval_input","2020-04-09 17:22:43","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","true","","","","",""
"30","IsBipartite","2","eval_input","2020-04-09 17:22:46","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","true","","","","",""
"30","IsBipartite","3","eval_input","2020-04-09 17:22:52","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C + B->C
}","true","","","","",""
"30","IsBipartite","4","eval_input","2020-04-09 17:23:02","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"30","IsBipartite","5","eval_input","2020-04-09 17:23:16","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + B->B
}","false","","","","",""
"30","IsBipartite","6","eval_input","2020-04-09 17:23:19","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + B->A
}","false","","","","",""
"30","IsBipartite","7","eval_input","2020-04-09 17:23:31","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"30","IsBipartite","8","eval_input","2020-04-09 17:23:49","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"30","IsBipartite","9","eval_input","2020-04-09 17:23:53","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->B
}","true","","","","",""
"30","IsBipartite","10","eval_input","2020-04-09 17:24:26","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->B + A->C
}","true","","","","",""
"30","IsBipartite","11","eval_input","2020-04-09 17:24:34","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->B + A->C + C->A
}","false","","","","",""
"30","IsBipartite","12","eval_input","2020-04-09 17:24:47","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->B + A->C
}","true","","","","",""
"30","IsBipartite","13","eval_input","2020-04-09 17:25:25","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->B
}","true","","","","",""
"30","IsBipartite","14","eval_input","2020-04-09 17:25:36","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = B->C + C->B
}","true","","","","",""
"30","IsBipartite","15","eval_input","2020-04-09 17:25:49","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"30","IsBipartite","16","eval_input","2020-04-09 17:25:54","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"30","IsBipartite","17","eval_input","2020-04-09 17:26:12","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A + D->D
}","false","","","","",""
"30","IsBipartite","18","eval_input","2020-04-09 17:26:22","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A + C->A
}","false","","","","",""
"30","IsBipartite","19","quiz_answer","2020-04-09 17:27:50","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"30","IsBipartite","20","quiz_answer","2020-04-09 17:27:55","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"30","IsBipartite","21","quiz_answer","2020-04-09 17:27:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"30","IsBipartite","22","quiz_answer","2020-04-09 17:28:17","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"30","IsBipartite","23","quiz_answer","2020-04-09 17:28:27","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"30","IsBipartite","24","quiz_answer","2020-04-09 17:28:33","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"30","IsBipartite","25","quiz_answer","2020-04-09 17:28:40","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"30","IsBipartite","26","quiz_answer","2020-04-09 17:28:46","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"30","IsBipartite","27","final_answer","2020-04-09 17:28:48","","","","","","There can't be loops comprised of an odd number of atoms. Self-loops, for example, are prohibited.",""
"30","ThreeCycle","28","eval_input","2020-04-09 17:29:08","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A + C->A
}","true","","","","",""
"30","ThreeCycle","29","eval_input","2020-04-09 17:29:20","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"30","ThreeCycle","30","eval_input","2020-04-09 17:29:32","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + B->B
}","false","","","","",""
"30","ThreeCycle","31","eval_input","2020-04-09 17:29:41","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"30","ThreeCycle","32","eval_input","2020-04-09 17:29:51","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"30","ThreeCycle","33","eval_input","2020-04-09 17:30:07","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","false","","","","",""
"30","ThreeCycle","34","eval_input","2020-04-09 17:30:23","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C + C->B
}","false","","","","",""
"30","ThreeCycle","35","eval_input","2020-04-09 17:30:36","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"30","ThreeCycle","36","eval_input","2020-04-09 17:31:02","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"30","ThreeCycle","37","eval_input","2020-04-09 17:31:29","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A + C->D + D->C
}","false","","","","",""
"30","ThreeCycle","38","eval_input","2020-04-09 17:31:54","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"30","ThreeCycle","39","eval_input","2020-04-09 17:32:08","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->A
}","true","","","","",""
"30","ThreeCycle","40","eval_input","2020-04-09 17:32:34","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"30","ThreeCycle","41","eval_input","2020-04-09 17:32:45","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B->C + C->A + D->E + E->D + F->D
}","true","","","","",""
"30","ThreeCycle","42","eval_input","2020-04-09 17:33:20","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A + D->D
}","true","","","","",""
"30","ThreeCycle","43","eval_input","2020-04-09 17:33:31","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->D
}","false","","","","",""
"30","ThreeCycle","44","eval_input","2020-04-09 17:34:10","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->B
}","false","","","","",""
"30","ThreeCycle","45","eval_input","2020-04-09 17:34:30","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->D + B->C + D->A
}","false","","","","",""
"30","ThreeCycle","46","quiz_answer","2020-04-09 17:34:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"30","ThreeCycle","47","quiz_answer","2020-04-09 17:34:41","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"30","ThreeCycle","48","quiz_answer","2020-04-09 17:34:44","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"30","ThreeCycle","49","quiz_answer","2020-04-09 17:34:58","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"30","ThreeCycle","50","quiz_answer","2020-04-09 17:35:02","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"30","ThreeCycle","51","quiz_answer","2020-04-09 17:35:07","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"30","ThreeCycle","52","quiz_answer","2020-04-09 17:35:11","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"30","ThreeCycle","53","quiz_answer","2020-04-09 17:35:20","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"30","ThreeCycle","54","final_answer","2020-04-09 17:35:21","","","","","","There must be at least one loop comprised of exactly three atoms.",""
"30","IsDag","55","eval_input","2020-04-09 17:35:29","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->D + B->C + D->A
}","false","","","","",""
"30","IsDag","56","eval_input","2020-04-09 17:35:38","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"30","IsDag","57","eval_input","2020-04-09 17:35:54","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"30","IsDag","58","eval_input","2020-04-09 17:36:11","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A
}","false","","","","",""
"30","IsDag","59","eval_input","2020-04-09 17:36:32","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"30","IsDag","60","eval_input","2020-04-09 17:36:45","inst myInst {
  Node = A
       + B
       + C
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"30","IsDag","61","eval_input","2020-04-09 17:36:55","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"30","IsDag","62","eval_input","2020-04-09 17:37:16","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->B
}","true","","","","",""
"30","IsDag","63","eval_input","2020-04-09 17:37:33","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->B + D->D
}","false","","","","",""
"30","IsDag","64","eval_input","2020-04-09 17:37:37","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->B + D->A
}","true","","","","",""
"30","IsDag","65","eval_input","2020-04-09 17:38:04","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B
}","true","","","","",""
"30","IsDag","66","eval_input","2020-04-09 17:38:17","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = D->C + C->B + B->A
}","true","","","","",""
"30","IsDag","67","eval_input","2020-04-09 17:38:23","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = D->C + C->B + B->A + A->B
}","false","","","","",""
"30","IsDag","68","eval_input","2020-04-09 17:38:27","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = D->C + C->B + B->A + A->C
}","false","","","","",""
"30","IsDag","69","eval_input","2020-04-09 17:38:30","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = D->C + C->B + B->A + A->D
}","false","","","","",""
"30","IsDag","70","quiz_answer","2020-04-09 17:38:41","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"30","IsDag","71","quiz_answer","2020-04-09 17:38:44","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"30","IsDag","72","quiz_answer","2020-04-09 17:38:47","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"30","IsDag","73","quiz_answer","2020-04-09 17:39:02","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"30","IsDag","74","quiz_answer","2020-04-09 17:39:09","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"30","IsDag","75","quiz_answer","2020-04-09 17:39:13","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"30","IsDag","76","quiz_answer","2020-04-09 17:39:18","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"30","IsDag","77","quiz_answer","2020-04-09 17:39:25","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"30","IsDag","78","final_answer","2020-04-09 17:39:26","","","","","","There can't be any loops",""
"31","IsBipartite","0","eval_input","2020-04-10 09:58:39","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"31","IsBipartite","1","eval_input","2020-04-10 09:58:46","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"31","IsBipartite","2","eval_input","2020-04-10 09:59:08","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"31","IsBipartite","3","eval_input","2020-04-10 09:59:30","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"31","IsBipartite","4","eval_input","2020-04-10 09:59:54","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"31","IsBipartite","5","eval_input","2020-04-10 10:00:11","inst myInst {
  Node = A + B
  edges = A -> A
}","false","","","","",""
"31","IsBipartite","6","eval_input","2020-04-10 10:00:19","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"31","IsBipartite","7","eval_input","2020-04-10 10:00:30","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","true","","","","",""
"31","IsBipartite","8","eval_input","2020-04-10 10:00:39","inst myInst {
  Node = A + B
  edges = A -> B + B -> A + B -> B
}","false","","","","",""
"31","IsBipartite","9","quiz_answer","2020-04-10 10:02:06","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"31","IsBipartite","10","quiz_answer","2020-04-10 10:02:12","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"31","IsBipartite","11","quiz_answer","2020-04-10 10:02:18","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"31","IsBipartite","12","quiz_answer","2020-04-10 10:02:25","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"31","IsBipartite","13","quiz_answer","2020-04-10 10:02:29","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"31","IsBipartite","14","eval_input","2020-04-10 10:02:52","inst myInst {
  Node = A + B
  edges = A -> B + B -> A 
}","true","","","","",""
"31","IsBipartite","15","eval_input","2020-04-10 10:03:03","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A 
}","true","","","","",""
"31","IsBipartite","16","eval_input","2020-04-10 10:03:08","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> A 
}","true","","","","",""
"31","IsBipartite","17","eval_input","2020-04-10 10:03:19","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C 
}","true","","","","",""
"31","IsBipartite","18","eval_input","2020-04-10 10:03:40","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"31","IsBipartite","19","eval_input","2020-04-10 10:03:57","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"31","IsBipartite","20","eval_input","2020-04-10 10:04:06","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D
}","true","","","","",""
"31","IsBipartite","21","eval_input","2020-04-10 10:04:28","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"31","IsBipartite","22","eval_input","2020-04-10 10:05:52","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"31","IsBipartite","23","eval_input","2020-04-10 10:06:02","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> E + E -> A
}","false","","","","",""
"31","IsBipartite","24","quiz_answer","2020-04-10 10:06:31","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"31","IsBipartite","25","quiz_answer","2020-04-10 10:06:35","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"31","IsBipartite","26","quiz_answer","2020-04-10 10:06:41","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"31","IsBipartite","27","quiz_answer","2020-04-10 10:06:49","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"31","IsBipartite","28","quiz_answer","2020-04-10 10:06:55","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"31","IsBipartite","29","quiz_answer","2020-04-10 10:07:01","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"31","IsBipartite","30","quiz_answer","2020-04-10 10:07:09","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"31","IsBipartite","31","quiz_answer","2020-04-10 10:07:14","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"31","IsBipartite","32","final_answer","2020-04-10 10:07:17","","","","","","No loops that connect/include an odd number of nodes",""
"31","ThreeCycle","33","eval_input","2020-04-10 10:07:58","inst myInst {
  Node = none
  edges =  none
}","false","","","","",""
"31","ThreeCycle","34","eval_input","2020-04-10 10:08:04","inst myInst {
  Node = A
  edges =  none
}","false","","","","",""
"31","ThreeCycle","35","eval_input","2020-04-10 10:08:15","inst myInst {
  Node = A
  edges =  A -> A
}","false","","","","",""
"31","ThreeCycle","36","eval_input","2020-04-10 10:08:27","inst myInst {
  Node = A + B
  edges =  none
}","false","","","","",""
"31","ThreeCycle","37","eval_input","2020-04-10 10:08:37","inst myInst {
  Node = A + B
  edges =  A -> B
}","false","","","","",""
"31","ThreeCycle","38","eval_input","2020-04-10 10:08:47","inst myInst {
  Node = A + B
  edges =  A -> B + B -> A
}","false","","","","",""
"31","ThreeCycle","39","eval_input","2020-04-10 10:09:00","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"31","ThreeCycle","40","eval_input","2020-04-10 10:09:09","inst myInst {
  Node = A + B + C
  edges = A -> B
}","false","","","","",""
"31","ThreeCycle","41","eval_input","2020-04-10 10:09:17","inst myInst {
  Node = A + B + C
  edges = A -> B + A -> C
}","false","","","","",""
"31","ThreeCycle","42","eval_input","2020-04-10 10:09:29","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C 
}","false","","","","",""
"31","ThreeCycle","43","eval_input","2020-04-10 10:09:40","inst myInst {
  Node = A + B + C
  edges = A -> B + C -> A 
}","false","","","","",""
"31","ThreeCycle","44","eval_input","2020-04-10 10:09:50","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A 
}","true","","","","",""
"31","ThreeCycle","45","eval_input","2020-04-10 10:10:01","inst myInst {
  Node = A + B + C
  edges = none 
}","false","","","","",""
"31","ThreeCycle","46","eval_input","2020-04-10 10:10:09","inst myInst {
  Node = A + B + C + D
  edges = none 
}","false","","","","",""
"31","ThreeCycle","47","eval_input","2020-04-10 10:10:34","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A 
}","false","","","","",""
"31","ThreeCycle","48","eval_input","2020-04-10 10:10:50","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D  
}","false","","","","",""
"31","ThreeCycle","49","eval_input","2020-04-10 10:11:04","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D  + D -> E
}","false","","","","",""
"31","ThreeCycle","50","eval_input","2020-04-10 10:11:12","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D  + D -> E + E -> A
}","false","","","","",""
"31","ThreeCycle","51","eval_input","2020-04-10 10:11:24","inst myInst {
  Node = A + B + C + D + E
  edges = none
}","false","","","","",""
"31","ThreeCycle","52","eval_input","2020-04-10 10:11:56","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> E + E -> D
}","false","","","","",""
"31","ThreeCycle","53","eval_input","2020-04-10 10:12:10","inst myInst {
  Node = A + B + C + D + E + F
  edges = A -> B + B -> C 
}","false","","","","",""
"31","ThreeCycle","54","eval_input","2020-04-10 10:12:23","inst myInst {
  Node = A + B + C + D + E + F
  edges = none
}","false","","","","",""
"31","ThreeCycle","55","eval_input","2020-04-10 10:12:55","inst myInst {
  Node = A + B + C + D + E + F
  edges = A -> B + B -> C + C -> D + D -> E + E -> F + F -> A
}","false","","","","",""
"31","ThreeCycle","56","eval_input","2020-04-10 10:13:27","inst myInst {
  Node = A + B + C + D + E + F
  edges = A -> B + B -> C + C -> A
}","true","","","","",""
"31","ThreeCycle","57","eval_input","2020-04-10 10:13:39","inst myInst {
  Node = A + B + C + D + E + F
  edges = A -> B + B -> C + C -> A + E -> F
}","true","","","","",""
"31","ThreeCycle","58","quiz_answer","2020-04-10 10:14:06","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"31","ThreeCycle","59","quiz_answer","2020-04-10 10:14:12","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"31","ThreeCycle","60","quiz_answer","2020-04-10 10:14:15","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"31","ThreeCycle","61","quiz_answer","2020-04-10 10:14:19","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"31","ThreeCycle","62","quiz_answer","2020-04-10 10:14:22","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"31","ThreeCycle","63","quiz_answer","2020-04-10 10:14:28","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"31","ThreeCycle","64","quiz_answer","2020-04-10 10:14:36","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"31","ThreeCycle","65","quiz_answer","2020-04-10 10:14:41","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"31","ThreeCycle","66","final_answer","2020-04-10 10:14:46","","","","","","a graph where a loop/cycle is formed between exactly 3 nodes",""
"31","IsDag","68","eval_input","2020-04-10 10:15:36","inst myInst {
  Node = A 
  edges = A -> A
}","false","","","","",""
"31","IsDag","69","eval_input","2020-04-10 10:15:48","inst myInst {
  Node = A + B
  edges = A -> A
}","false","","","","",""
"31","IsDag","70","eval_input","2020-04-10 10:15:53","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"31","IsDag","71","eval_input","2020-04-10 10:16:06","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"31","IsDag","72","eval_input","2020-04-10 10:16:17","inst myInst {
  Node = A + B
  edges = A -> B + B -> B
}","false","","","","",""
"31","IsDag","73","eval_input","2020-04-10 10:16:25","inst myInst {
  Node = A + B + C
  edges = A -> B 
}","true","","","","",""
"31","IsDag","74","eval_input","2020-04-10 10:16:35","inst myInst {
  Node = A + B + C
  edges = A -> B + C -> A
}","true","","","","",""
"31","IsDag","75","eval_input","2020-04-10 10:16:43","inst myInst {
  Node = A + B + C
  edges = A -> B + C -> A + B -> C
}","false","","","","",""
"32","IsDag","0","eval_input","2020-04-10 10:55:00","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"32","IsDag","1","eval_input","2020-04-10 10:55:20","inst myInst {
  Node = A
       + B
       
  edges = none
}","true","","","","",""
"32","IsDag","2","eval_input","2020-04-10 10:55:26","inst myInst {
  Node = A
       
  edges = none
}","true","","","","",""
"32","IsDag","3","eval_input","2020-04-10 10:55:31","inst myInst {
  Node = none
       
  edges = none
}","true","","","","",""
"32","IsDag","4","eval_input","2020-04-10 10:55:41","inst myInst {
  Node = A + B + C + D
       
  edges = none
}","true","","","","",""
"32","IsDag","5","eval_input","2020-04-10 10:55:46","inst myInst {
  Node = A + B + C + D + E
       
  edges = none
}","true","","","","",""
"32","IsDag","6","eval_input","2020-04-10 10:55:50","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = none
}","true","","","","",""
"32","IsDag","7","eval_input","2020-04-10 10:55:56","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->A
}","false","","","","",""
"32","IsDag","8","eval_input","2020-04-10 10:55:59","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B
}","true","","","","",""
"32","IsDag","9","eval_input","2020-04-10 10:56:03","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->C
}","true","","","","",""
"32","IsDag","10","eval_input","2020-04-10 10:56:05","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->D
}","true","","","","",""
"32","IsDag","11","eval_input","2020-04-10 10:56:08","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->E
}","true","","","","",""
"32","IsDag","12","eval_input","2020-04-10 10:56:11","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->F
}","true","","","","",""
"32","IsDag","13","eval_input","2020-04-10 10:56:30","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = B->A
}","true","","","","",""
"32","IsDag","14","eval_input","2020-04-10 10:56:33","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = B->B
}","false","","","","",""
"32","IsDag","15","eval_input","2020-04-10 10:56:36","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = B->C
}","true","","","","",""
"32","IsDag","16","eval_input","2020-04-10 10:56:39","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = B->D
}","true","","","","",""
"32","IsDag","17","eval_input","2020-04-10 10:56:44","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = B->E
}","true","","","","",""
"32","IsDag","18","eval_input","2020-04-10 10:56:54","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->A + B->B
}","false","","","","",""
"32","IsDag","19","eval_input","2020-04-10 10:57:01","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->A + B->C
}","false","","","","",""
"32","IsDag","20","eval_input","2020-04-10 10:57:14","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->A + B->C + C->C
}","false","","","","",""
"32","IsDag","21","eval_input","2020-04-10 10:57:22","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + C->B
}","true","","","","",""
"32","IsDag","22","eval_input","2020-04-10 10:57:27","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + C->B + D->B
}","true","","","","",""
"32","IsDag","23","eval_input","2020-04-10 10:57:31","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + C->B + D->D
}","false","","","","",""
"32","IsDag","24","eval_input","2020-04-10 10:57:41","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + A->C + D->E
}","true","","","","",""
"32","IsDag","25","eval_input","2020-04-10 10:57:46","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + A->C + A->D
}","true","","","","",""
"33","IsDag","0","eval_input","2020-04-10 10:59:48","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"33","IsDag","1","eval_input","2020-04-10 10:59:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"33","IsDag","2","eval_input","2020-04-10 11:00:07","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"33","IsDag","3","eval_input","2020-04-10 11:00:17","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"33","IsDag","4","eval_input","2020-04-10 11:00:24","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"32","IsDag","26","quiz_answer","2020-04-10 11:00:33","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"32","IsDag","27","quiz_answer","2020-04-10 11:00:36","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"33","IsDag","5","eval_input","2020-04-10 11:00:37","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + B->C
}","true","","","","",""
"32","IsDag","28","quiz_answer","2020-04-10 11:00:40","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"32","IsDag","29","eval_input","2020-04-10 11:00:54","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + B->A
}","false","","","","",""
"33","IsDag","6","eval_input","2020-04-10 11:01:00","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + B->C + C->A
}","false","","","","",""
"33","IsDag","7","eval_input","2020-04-10 11:01:04","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->A
}","true","","","","",""
"33","IsDag","8","eval_input","2020-04-10 11:01:09","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"33","IsDag","9","eval_input","2020-04-10 11:01:24","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"33","IsDag","10","eval_input","2020-04-10 11:01:34","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C
}","false","","","","",""
"33","IsDag","11","eval_input","2020-04-10 11:01:38","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","true","","","","",""
"33","IsDag","12","eval_input","2020-04-10 11:01:50","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->B
}","false","","","","",""
"33","IsDag","13","eval_input","2020-04-10 11:01:57","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + B->A
}","false","","","","",""
"32","IsDag","30","eval_input","2020-04-10 11:01:58","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"33","IsDag","14","eval_input","2020-04-10 11:02:04","inst myInst {
  Node = A
       + B
  edges = none
}","true","","","","",""
"34","ThreeCycle","0","eval_input","2020-04-10 11:02:04","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"33","IsDag","15","eval_input","2020-04-10 11:02:11","inst myInst {
  Node = A
       + B
  edges = A->B
}","true","","","","",""
"34","ThreeCycle","1","eval_input","2020-04-10 11:02:14","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"33","IsDag","16","eval_input","2020-04-10 11:02:17","inst myInst {
  Node = A
       + B
  edges = A->B + B->A
}","false","","","","",""
"34","ThreeCycle","2","eval_input","2020-04-10 11:02:22","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"33","IsDag","17","eval_input","2020-04-10 11:02:37","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"34","ThreeCycle","3","eval_input","2020-04-10 11:02:42","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"33","IsDag","18","eval_input","2020-04-10 11:02:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + A->D
}","true","","","","",""
"34","ThreeCycle","4","eval_input","2020-04-10 11:02:51","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"33","IsDag","19","eval_input","2020-04-10 11:02:52","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + A->D + D->A
}","false","","","","",""
"33","IsDag","20","eval_input","2020-04-10 11:03:01","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + A->D + D->C
}","false","","","","",""
"32","IsDag","32","quiz_answer","2020-04-10 11:03:03","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"32","IsDag","33","quiz_answer","2020-04-10 11:03:06","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"34","ThreeCycle","5","eval_input","2020-04-10 11:03:13","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> C + C->A
}","true","","","","",""
"32","IsDag","34","quiz_answer","2020-04-10 11:03:17","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"32","IsDag","35","quiz_answer","2020-04-10 11:03:22","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"32","IsDag","36","quiz_answer","2020-04-10 11:03:29","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"34","ThreeCycle","6","eval_input","2020-04-10 11:03:31","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B -> C + C->D
}","false","","","","",""
"32","IsDag","37","quiz_answer","2020-04-10 11:03:35","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"34","ThreeCycle","7","eval_input","2020-04-10 11:03:38","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B -> C + C->D + D->A
}","false","","","","",""
"32","IsDag","38","quiz_answer","2020-04-10 11:03:39","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"32","IsDag","39","final_answer","2020-04-10 11:03:40","","","","","","no iden & *edges",""
"32","ThreeCycle","40","eval_input","2020-04-10 11:03:53","inst myInst {
  Node = A + B + C + D + E + F
       
  edges = A->B + B->C + C->A
}","true","","","","",""
"32","ThreeCycle","41","eval_input","2020-04-10 11:04:04","inst myInst {
  Node = none
       
  edges = none
}","false","","","","",""
"32","ThreeCycle","42","eval_input","2020-04-10 11:04:08","inst myInst {
  Node = A
       
  edges = none
}","false","","","","",""
"34","ThreeCycle","8","eval_input","2020-04-10 11:04:09","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B -> C + C->D + D-> E + E -> A
}","false","","","","",""
"33","IsDag","21","quiz_answer","2020-04-10 11:04:12","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"32","ThreeCycle","43","eval_input","2020-04-10 11:04:13","inst myInst {
  Node = A + B
       
  edges = none
}","false","","","","",""
"33","IsDag","22","quiz_answer","2020-04-10 11:04:20","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"33","IsDag","23","quiz_answer","2020-04-10 11:04:26","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"32","ThreeCycle","44","eval_input","2020-04-10 11:04:26","inst myInst {
  Node = A
       
  edges = A -> A
}","false","","","","",""
"32","ThreeCycle","45","eval_input","2020-04-10 11:04:30","inst myInst {
  Node = A + B
       
  edges = A -> A
}","false","","","","",""
"32","ThreeCycle","46","eval_input","2020-04-10 11:04:33","inst myInst {
  Node = A + B
       
  edges = A -> B
}","false","","","","",""
"32","ThreeCycle","47","eval_input","2020-04-10 11:04:37","inst myInst {
  Node = A + B
       
  edges = A->B
}","false","","","","",""
"33","IsDag","24","quiz_answer","2020-04-10 11:04:39","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"34","ThreeCycle","9","eval_input","2020-04-10 11:04:42","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
  edges = A->B + B -> C + C->D + D-> E + E -> F + F->A
}","false","","","","",""
"32","ThreeCycle","48","eval_input","2020-04-10 11:04:44","inst myInst {
  Node = A + B
       
  edges = A->B + B->A
}","false","","","","",""
"33","IsDag","25","quiz_answer","2020-04-10 11:04:46","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"32","ThreeCycle","49","eval_input","2020-04-10 11:04:49","inst myInst {
  Node = A + B
       
  edges = A->A + B->B
}","false","","","","",""
"33","IsDag","26","quiz_answer","2020-04-10 11:04:56","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"32","ThreeCycle","50","eval_input","2020-04-10 11:04:57","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C
}","false","","","","",""
"33","IsDag","27","quiz_answer","2020-04-10 11:05:03","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"34","ThreeCycle","10","eval_input","2020-04-10 11:05:04","inst myInst {
  Node = A
       + B
  edges = A->B + B -> A
}","false","","","","",""
"32","ThreeCycle","51","eval_input","2020-04-10 11:05:09","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C + C->A
}","true","","","","",""
"34","ThreeCycle","11","eval_input","2020-04-10 11:05:09","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> A
}","false","","","","",""
"33","IsDag","28","quiz_answer","2020-04-10 11:05:10","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"33","IsDag","29","final_answer","2020-04-10 11:05:12","","","","","","I think that this predicate evaluates to false if nodes are in their own transitive closure and true otherwise.",""
"32","ThreeCycle","52","eval_input","2020-04-10 11:05:17","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C + C->C
}","false","","","","",""
"34","ThreeCycle","12","eval_input","2020-04-10 11:05:17","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B -> C + C -> A
}","true","","","","",""
"32","ThreeCycle","53","eval_input","2020-04-10 11:05:20","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C + C->B
}","false","","","","",""
"32","ThreeCycle","54","eval_input","2020-04-10 11:05:25","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->D
}","false","","","","",""
"32","ThreeCycle","55","eval_input","2020-04-10 11:05:30","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"34","ThreeCycle","13","eval_input","2020-04-10 11:05:34","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"33","ThreeCycle","30","eval_input","2020-04-10 11:05:36","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + A->D + D->C
}","false","","","","",""
"34","ThreeCycle","14","eval_input","2020-04-10 11:05:37","inst myInst {
  Node = A
       
  edges = A->A
}","false","","","","",""
"32","ThreeCycle","56","eval_input","2020-04-10 11:05:40","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"32","ThreeCycle","57","eval_input","2020-04-10 11:05:46","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"32","ThreeCycle","58","eval_input","2020-04-10 11:05:51","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->A + D->E + E->A
}","true","","","","",""
"32","ThreeCycle","59","eval_input","2020-04-10 11:05:58","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->A + D->A + E->A
}","true","","","","",""
"34","ThreeCycle","15","eval_input","2020-04-10 11:06:01","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C -> B
}","false","","","","",""
"32","ThreeCycle","60","eval_input","2020-04-10 11:06:04","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->A + D->B + E->A
}","true","","","","",""
"32","ThreeCycle","61","eval_input","2020-04-10 11:06:08","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->E + D->B + E->A
}","false","","","","",""
"32","ThreeCycle","62","eval_input","2020-04-10 11:06:13","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->E + D->B + E->B
}","true","","","","",""
"33","ThreeCycle","31","eval_input","2020-04-10 11:06:18","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + A->D 
}","false","","","","",""
"33","ThreeCycle","32","eval_input","2020-04-10 11:06:21","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D 
}","false","","","","",""
"33","ThreeCycle","33","eval_input","2020-04-10 11:06:24","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C 
}","false","","","","",""
"33","ThreeCycle","34","eval_input","2020-04-10 11:06:26","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B 
}","false","","","","",""
"33","ThreeCycle","35","eval_input","2020-04-10 11:06:31","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","false","","","","",""
"34","ThreeCycle","16","eval_input","2020-04-10 11:06:38","inst myInst {
  Node = A
       + B
       + C
  edges = C->B + B->A + A -> C
}","true","","","","",""
"33","ThreeCycle","36","eval_input","2020-04-10 11:06:40","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> D
}","false","","","","",""
"32","ThreeCycle","63","quiz_answer","2020-04-10 11:06:44","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"33","ThreeCycle","37","eval_input","2020-04-10 11:06:45","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C
}","false","","","","",""
"32","ThreeCycle","64","quiz_answer","2020-04-10 11:06:47","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"33","ThreeCycle","38","eval_input","2020-04-10 11:06:49","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + C->A
}","false","","","","",""
"32","ThreeCycle","65","quiz_answer","2020-04-10 11:06:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"33","ThreeCycle","39","eval_input","2020-04-10 11:06:57","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> C + B->C
}","false","","","","",""
"32","ThreeCycle","66","quiz_answer","2020-04-10 11:06:57","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"32","ThreeCycle","67","quiz_answer","2020-04-10 11:07:01","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"32","ThreeCycle","68","quiz_answer","2020-04-10 11:07:04","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"33","ThreeCycle","40","eval_input","2020-04-10 11:07:05","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B->C + A->C
}","false","","","","",""
"32","ThreeCycle","69","quiz_answer","2020-04-10 11:07:09","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"32","ThreeCycle","70","quiz_answer","2020-04-10 11:07:12","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"32","ThreeCycle","71","final_answer","2020-04-10 11:07:13","","","","","","true if 3 nodes form a cycle, false otherwise",""
"33","ThreeCycle","41","eval_input","2020-04-10 11:07:14","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B->C + A->C + C->A
}","true","","","","",""
"34","ThreeCycle","17","eval_input","2020-04-10 11:07:26","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = C->B + B->A + A -> C
}","true","","","","",""
"32","IsBipartite","72","eval_input","2020-04-10 11:07:31","inst myInst {
  Node = none
       
  edges = none
}","true","","","","",""
"33","ThreeCycle","42","eval_input","2020-04-10 11:07:32","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B->C + A->C + C->A + C->D
}","true","","","","",""
"32","IsBipartite","73","eval_input","2020-04-10 11:07:41","inst myInst {
  Node = A
       
  edges = none
}","true","","","","",""
"33","ThreeCycle","43","eval_input","2020-04-10 11:07:43","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B->C + A->C + C->A + C->D + D->C
}","true","","","","",""
"32","IsBipartite","74","eval_input","2020-04-10 11:07:48","inst myInst {
  Node = A + B
       
  edges = none
}","true","","","","",""
"32","IsBipartite","75","eval_input","2020-04-10 11:07:55","inst myInst {
  Node = A
       
  edges = A->A
}","false","","","","",""
"32","IsBipartite","76","eval_input","2020-04-10 11:08:02","inst myInst {
  Node = A + B
       
  edges = A->B
}","true","","","","",""
"33","ThreeCycle","44","eval_input","2020-04-10 11:08:03","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->D + A -> B + B->C + A->C + C->A + C->D + D->C
}","true","","","","",""
"33","ThreeCycle","45","eval_input","2020-04-10 11:08:08","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->D + A -> B + A->C + C->A + C->D + D->C
}","true","","","","",""
"32","IsBipartite","77","eval_input","2020-04-10 11:08:09","inst myInst {
  Node = A + B
       
  edges = A->B + B->A
}","true","","","","",""
"33","ThreeCycle","46","eval_input","2020-04-10 11:08:13","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->D + A -> B + C->A + C->D + D->C
}","true","","","","",""
"32","IsBipartite","78","eval_input","2020-04-10 11:08:16","inst myInst {
  Node = A + B
       
  edges = A->A + B->A
}","false","","","","",""
"33","ThreeCycle","47","eval_input","2020-04-10 11:08:17","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A -> B + C->A + C->D + D->C
}","false","","","","",""
"32","IsBipartite","79","eval_input","2020-04-10 11:08:19","inst myInst {
  Node = A + B
       
  edges = A->A + B->B
}","false","","","","",""
"32","IsBipartite","80","eval_input","2020-04-10 11:08:25","inst myInst {
  Node = A + B + C
       
  edges = A->A + B->B
}","false","","","","",""
"32","IsBipartite","81","eval_input","2020-04-10 11:08:29","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C
}","true","","","","",""
"32","IsBipartite","82","eval_input","2020-04-10 11:08:35","inst myInst {
  Node = A + B + C
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"34","ThreeCycle","18","quiz_answer","2020-04-10 11:08:51","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"32","IsBipartite","83","eval_input","2020-04-10 11:08:55","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"34","ThreeCycle","19","quiz_answer","2020-04-10 11:08:57","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"32","IsBipartite","84","eval_input","2020-04-10 11:08:58","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->D
}","true","","","","",""
"34","ThreeCycle","20","quiz_answer","2020-04-10 11:09:01","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"32","IsBipartite","85","eval_input","2020-04-10 11:09:02","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"32","IsBipartite","86","eval_input","2020-04-10 11:09:15","inst myInst {
  Node = A + B + C + D
       
  edges = A->B + B->C + C->D + D->B
}","false","","","","",""
"32","IsBipartite","87","eval_input","2020-04-10 11:09:18","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->B + B->C + C->D + D->B
}","false","","","","",""
"34","ThreeCycle","21","quiz_answer","2020-04-10 11:09:21","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"32","IsBipartite","88","eval_input","2020-04-10 11:09:24","inst myInst {
  Node = A + B + C + D + E
       
  edges = A->A + B->B + C->C + D->B
}","false","","","","",""
"34","ThreeCycle","22","quiz_answer","2020-04-10 11:09:32","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"32","IsBipartite","89","eval_input","2020-04-10 11:09:36","inst myInst {
  Node = A + B + C + D + E
      
  edges = A->E + B->E + C->E + D->B
}","true","","","","",""
"34","ThreeCycle","23","quiz_answer","2020-04-10 11:09:37","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"34","ThreeCycle","24","quiz_answer","2020-04-10 11:09:43","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"32","IsBipartite","90","eval_input","2020-04-10 11:09:46","inst myInst {
  Node = A + B + C + D + E
      
  edges = A->E + B->E + C->E + D->B + B->A
}","true","","","","",""
"34","ThreeCycle","25","quiz_answer","2020-04-10 11:09:48","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"34","ThreeCycle","26","final_answer","2020-04-10 11:09:50","","","","","","The predicate evaluates to True when there is a cycle with three nodes and each node is in the cycle (like a ring of size 3). A sub cycle with 3 Nodes but only 2 in the cycle, for example is not True.",""
"32","IsBipartite","91","eval_input","2020-04-10 11:09:50","inst myInst {
  Node = A + B + C + D + E
      
  edges = A->E + B->D + C->E + D->B + B->A
}","true","","","","",""
"32","IsBipartite","92","eval_input","2020-04-10 11:09:56","inst myInst {
  Node = A + B + C + D + E
      
  edges = A->B + B->D + C->E + D->B + B->A
}","true","","","","",""
"34","IsDag","27","eval_input","2020-04-10 11:09:59","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = C->B + B->A + A -> C
}","false","","","","",""
"32","IsBipartite","93","eval_input","2020-04-10 11:10:06","inst myInst {
  Node = A + B + C + D + E
      
  edges = A->B + B->D + C->E + D->B + D->A
}","false","","","","",""
"33","ThreeCycle","48","eval_input","2020-04-10 11:10:19","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A -> B + B->C + A->C
}","false","","","","",""
"34","IsDag","28","eval_input","2020-04-10 11:10:24","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = C->B + B->A + A -> C + C -> D + D -> A
}","false","","","","",""
"33","ThreeCycle","49","eval_input","2020-04-10 11:10:25","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A -> B + B->C + A->C + C->A
}","true","","","","",""
"32","IsBipartite","94","quiz_answer","2020-04-10 11:10:25","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"32","IsBipartite","95","quiz_answer","2020-04-10 11:10:28","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"32","IsBipartite","96","quiz_answer","2020-04-10 11:10:31","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"32","IsBipartite","97","quiz_answer","2020-04-10 11:10:35","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"32","IsBipartite","98","quiz_answer","2020-04-10 11:10:39","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"32","IsBipartite","99","quiz_answer","2020-04-10 11:10:42","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"32","IsBipartite","100","quiz_answer","2020-04-10 11:10:47","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"32","IsBipartite","101","quiz_answer","2020-04-10 11:10:50","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"34","IsDag","29","eval_input","2020-04-10 11:10:51","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = C->B + B->A + A -> D + D -> C
}","false","","","","",""
"33","ThreeCycle","50","eval_input","2020-04-10 11:11:07","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A -> B + B->C + A->C + B->A
}","false","","","","",""
"34","IsDag","30","eval_input","2020-04-10 11:11:09","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"34","IsDag","31","eval_input","2020-04-10 11:11:22","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> A
}","false","","","","",""
"32","IsBipartite","102","eval_input","2020-04-10 11:11:22","inst myInst {
  Node = A + B + C + D + E
      
  edges = A->B + B->C + C->E + D->E + E->A
}","true","","","","",""
"34","IsDag","32","eval_input","2020-04-10 11:11:31","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B
}","true","","","","",""
"33","ThreeCycle","51","eval_input","2020-04-10 11:11:35","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A -> B + B->C + C->A + B->A
}","true","","","","",""
"32","IsBipartite","103","eval_input","2020-04-10 11:11:39","inst myInst {
  Node = A + B + C + D + E
      
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"34","IsDag","33","eval_input","2020-04-10 11:11:42","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> A
}","false","","","","",""
"34","IsDag","34","eval_input","2020-04-10 11:11:45","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> C
}","true","","","","",""
"32","IsBipartite","104","eval_input","2020-04-10 11:11:49","inst myInst {
  Node = A + B + C + D + E + F
      
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","true","","","","",""
"34","IsDag","35","eval_input","2020-04-10 11:11:52","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A -> B + B -> C + C -> D
}","true","","","","",""
"32","IsBipartite","105","eval_input","2020-04-10 11:12:01","inst myInst {
  Node = A + B + C + D + E + F + G
      
  edges = A->B + B->C + C->D + D->E + E->F + F->G + G->A
}","false","","","","",""
"34","IsDag","36","eval_input","2020-04-10 11:12:03","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + A -> E
}","true","","","","",""
"34","IsDag","37","eval_input","2020-04-10 11:12:22","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + A -> E + E ->B
}","true","","","","",""
"32","IsBipartite","106","quiz_answer","2020-04-10 11:12:29","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"32","IsBipartite","107","quiz_answer","2020-04-10 11:12:33","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"32","IsBipartite","108","quiz_answer","2020-04-10 11:12:36","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"34","IsDag","38","eval_input","2020-04-10 11:12:37","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A -> B + B -> C + C -> D + A -> E + D ->A
}","false","","","","",""
"32","IsBipartite","109","quiz_answer","2020-04-10 11:12:39","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"32","IsBipartite","110","quiz_answer","2020-04-10 11:12:43","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"32","IsBipartite","111","quiz_answer","2020-04-10 11:12:47","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"32","IsBipartite","112","quiz_answer","2020-04-10 11:12:50","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"32","IsBipartite","113","quiz_answer","2020-04-10 11:12:53","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"32","IsBipartite","114","final_answer","2020-04-10 11:12:54","","","","","","false if odd-number cycle (i.e. 1, 3, 5, 7 nodes)",""
"34","IsDag","39","eval_input","2020-04-10 11:13:31","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B -> C + C -> D + A -> E + D ->A + F-> G
}","false","","","","",""
"33","ThreeCycle","52","eval_input","2020-04-10 11:13:37","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A->B + B->C + A->C
}","false","","","","",""
"34","IsDag","40","eval_input","2020-04-10 11:13:38","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B -> C + C -> D + A -> E  + F-> G
}","true","","","","",""
"33","ThreeCycle","53","eval_input","2020-04-10 11:13:44","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A->B + B->C + A->C + C->B
}","false","","","","",""
"33","ThreeCycle","54","eval_input","2020-04-10 11:13:51","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A->B + B->C + A->C + C->B + B->A
}","true","","","","",""
"33","ThreeCycle","55","eval_input","2020-04-10 11:14:16","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A->B + B->C  + C->B + B->A
}","false","","","","",""
"33","ThreeCycle","56","eval_input","2020-04-10 11:14:32","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A->B + B->C + A->C + B->A
}","false","","","","",""
"34","IsDag","41","quiz_answer","2020-04-10 11:14:51","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"34","IsDag","42","quiz_answer","2020-04-10 11:14:56","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"34","IsDag","43","quiz_answer","2020-04-10 11:15:00","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"34","IsDag","44","quiz_answer","2020-04-10 11:15:18","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"34","IsDag","45","quiz_answer","2020-04-10 11:15:27","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"34","IsDag","46","quiz_answer","2020-04-10 11:15:39","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"33","ThreeCycle","57","eval_input","2020-04-10 11:15:42","inst myInst {
  Node = A
       + B
       + C
       + D
  edges =  A->B + B->C + C->A
}","true","","","","",""
"34","IsDag","47","quiz_answer","2020-04-10 11:15:46","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"33","ThreeCycle","58","quiz_answer","2020-04-10 11:16:00","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"34","IsDag","48","quiz_answer","2020-04-10 11:16:01","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"34","IsDag","49","final_answer","2020-04-10 11:16:02","","","","","","True when no cycles
False when there is a cycle",""
"34","IsBipartite","50","eval_input","2020-04-10 11:16:12","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B -> C + C -> D + A -> E  + F-> G
}","true","","","","",""
"33","ThreeCycle","59","eval_input","2020-04-10 11:16:30","inst myInst {
  Node = A
       + B
       + C
  edges =  A->B + B->C + C->A
}","true","","","","",""
"33","ThreeCycle","60","eval_input","2020-04-10 11:16:39","inst myInst {
  Node = A
       + B
       + C
  edges =  A->B + B->C + C->B
}","false","","","","",""
"34","IsBipartite","51","eval_input","2020-04-10 11:16:43","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = none
}","true","","","","",""
"33","ThreeCycle","61","eval_input","2020-04-10 11:16:43","inst myInst {
  Node = A
       + B
       + C
  edges =  A->B + B->C + C->A
}","true","","","","",""
"33","ThreeCycle","62","eval_input","2020-04-10 11:16:53","inst myInst {
  Node = A
       + B
       + C
  edges =  A->B + B->C + B->A + C->B
}","false","","","","",""
"34","IsBipartite","52","eval_input","2020-04-10 11:16:54","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> A
}","false","","","","",""
"34","IsBipartite","53","eval_input","2020-04-10 11:17:02","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B
}","true","","","","",""
"34","IsBipartite","54","eval_input","2020-04-10 11:17:07","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->A
}","true","","","","",""
"34","IsBipartite","55","eval_input","2020-04-10 11:17:12","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->A + B->B
}","false","","","","",""
"33","ThreeCycle","63","eval_input","2020-04-10 11:17:19","inst myInst {
  Node = A
       + B
       + C
  edges =  A->B + B->C + B->A + C->B + C->A
}","true","","","","",""
"34","IsBipartite","56","eval_input","2020-04-10 11:17:30","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C 
}","true","","","","",""
"34","IsBipartite","57","eval_input","2020-04-10 11:17:35","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> A
}","false","","","","",""
"33","ThreeCycle","64","eval_input","2020-04-10 11:17:35","inst myInst {
  Node = A
       + B
       + C
  edges =  A->B + B->C + C->A
}","true","","","","",""
"33","ThreeCycle","65","eval_input","2020-04-10 11:18:19","inst myInst {
  Node = A
       + B
       + C
  edges =  A->B + B->C + C->B
  
}","false","","","","",""
"33","ThreeCycle","66","eval_input","2020-04-10 11:18:38","inst myInst {
  Node = A
       + B
       + C
  edges =  B->A + B->C + C->B
  
}","false","","","","",""
"34","IsBipartite","58","eval_input","2020-04-10 11:18:48","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> C
}","true","","","","",""
"33","ThreeCycle","67","eval_input","2020-04-10 11:18:54","inst myInst {
  Node = A
       + B
       + C
  edges =  B->A + B->C + C->A
  
}","false","","","","",""
"34","IsBipartite","59","eval_input","2020-04-10 11:19:11","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> B
}","false","","","","",""
"33","ThreeCycle","68","eval_input","2020-04-10 11:19:16","inst myInst {
  Node = A
       + B
       + C
  edges =  B->A + B->C + A->C
  
}","false","","","","",""
"33","ThreeCycle","69","eval_input","2020-04-10 11:19:40","inst myInst {
  Node = A
       + B
       + C
  edges =  B->A + B->C + A->C + C->B
  
}","true","","","","",""
"34","IsBipartite","60","eval_input","2020-04-10 11:19:40","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> D
}","false","","","","",""
"34","IsBipartite","61","eval_input","2020-04-10 11:20:00","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> B
}","false","","","","",""
"33","ThreeCycle","70","eval_input","2020-04-10 11:20:18","inst myInst {
  Node = A
       + B
       + C
  edges =  A->A
  
}","false","","","","",""
"34","IsBipartite","62","eval_input","2020-04-10 11:20:20","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> C
}","true","","","","",""
"33","ThreeCycle","71","eval_input","2020-04-10 11:20:28","inst myInst {
  Node = A

  edges =  A->A
  
}","false","","","","",""
"33","ThreeCycle","72","eval_input","2020-04-10 11:20:44","inst myInst {
  Node = A + B + C

  edges =  A->C + C->A
  
}","false","","","","",""
"34","IsBipartite","63","eval_input","2020-04-10 11:20:46","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> C + C -> B
}","true","","","","",""
"33","ThreeCycle","73","eval_input","2020-04-10 11:20:58","inst myInst {
  Node = A + C

  edges =  A->C + C->A
  
}","false","","","","",""
"34","IsBipartite","64","eval_input","2020-04-10 11:21:31","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> C + C -> B + B -> A
}","true","","","","",""
"33","ThreeCycle","74","eval_input","2020-04-10 11:21:33","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->B + B->A
  
}","false","","","","",""
"34","IsBipartite","65","eval_input","2020-04-10 11:21:41","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> C + C -> B + B -> A
}","true","","","","",""
"34","IsBipartite","66","eval_input","2020-04-10 11:21:49","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C + C -> D + D -> C + C -> B + B -> A + A -> A
}","false","","","","",""
"33","ThreeCycle","75","eval_input","2020-04-10 11:22:22","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + A->C + B->A
  
}","false","","","","",""
"34","IsBipartite","67","eval_input","2020-04-10 11:22:42","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B->C 
}","true","","","","",""
"34","IsBipartite","68","eval_input","2020-04-10 11:22:47","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B  
}","true","","","","",""
"34","IsBipartite","69","eval_input","2020-04-10 11:22:51","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = none  
}","true","","","","",""
"34","IsBipartite","70","eval_input","2020-04-10 11:23:11","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B -> C + C -> A  
}","false","","","","",""
"34","IsBipartite","71","quiz_answer","2020-04-10 11:23:25","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"33","ThreeCycle","76","quiz_answer","2020-04-10 11:23:27","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"34","IsBipartite","72","quiz_answer","2020-04-10 11:23:29","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"33","ThreeCycle","77","quiz_answer","2020-04-10 11:23:31","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"33","ThreeCycle","78","quiz_answer","2020-04-10 11:23:36","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"34","IsBipartite","73","quiz_answer","2020-04-10 11:23:37","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"33","ThreeCycle","79","quiz_answer","2020-04-10 11:23:41","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"33","ThreeCycle","80","quiz_answer","2020-04-10 11:23:46","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"33","ThreeCycle","81","quiz_answer","2020-04-10 11:23:51","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"34","IsBipartite","74","quiz_answer","2020-04-10 11:23:54","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"34","IsBipartite","75","quiz_answer","2020-04-10 11:24:06","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"33","ThreeCycle","82","quiz_answer","2020-04-10 11:24:08","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","false","false","",""
"34","IsBipartite","76","quiz_answer","2020-04-10 11:24:18","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"34","IsBipartite","77","quiz_answer","2020-04-10 11:24:29","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"33","ThreeCycle","83","quiz_answer","2020-04-10 11:24:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"33","ThreeCycle","84","quiz_answer","2020-04-10 11:24:42","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"34","IsBipartite","78","eval_input","2020-04-10 11:24:44","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"33","ThreeCycle","85","quiz_answer","2020-04-10 11:24:49","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"33","ThreeCycle","86","quiz_answer","2020-04-10 11:24:54","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"33","ThreeCycle","87","quiz_answer","2020-04-10 11:25:00","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"34","IsBipartite","79","eval_input","2020-04-10 11:25:48","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
       + F
       + G
  edges = A -> B + B -> C + C -> D + D -> E + E->F + F -> A
}","true","","","","",""
"34","IsBipartite","80","quiz_answer","2020-04-10 11:25:57","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"34","IsBipartite","81","quiz_answer","2020-04-10 11:26:02","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"34","IsBipartite","82","quiz_answer","2020-04-10 11:26:09","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"34","IsBipartite","83","quiz_answer","2020-04-10 11:26:20","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"34","IsBipartite","84","quiz_answer","2020-04-10 11:26:26","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"34","IsBipartite","85","quiz_answer","2020-04-10 11:26:30","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"34","IsBipartite","86","quiz_answer","2020-04-10 11:26:42","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"34","IsBipartite","87","quiz_answer","2020-04-10 11:26:58","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"34","IsBipartite","88","final_answer","2020-04-10 11:27:00","","","","","","True when there are no cycles or an even number of nodes in the cycles that exist
False when there is a cycle with an odd number of node involved",""
"33","ThreeCycle","88","eval_input","2020-04-10 11:29:21","inst myInst {
  Node = A + B + C

  edges =  none
  
  
}","false","","","","",""
"33","ThreeCycle","89","eval_input","2020-04-10 11:31:08","inst myInst {
  Node = A + B + C

  edges =  A->C
  
  
}","false","","","","",""
"33","ThreeCycle","90","eval_input","2020-04-10 11:31:12","inst myInst {
  Node = A + B + C

  edges =  A->C + B->C
  
  
}","false","","","","",""
"33","ThreeCycle","91","eval_input","2020-04-10 11:31:20","inst myInst {
  Node = A + B + C

  edges =  A->C + B->C + A->B
  
  
}","false","","","","",""
"33","ThreeCycle","92","eval_input","2020-04-10 11:31:27","inst myInst {
  Node = A + B + C

  edges =  A->C + C->A
  
  
}","false","","","","",""
"33","ThreeCycle","93","eval_input","2020-04-10 11:31:36","inst myInst {
  Node = A + B + C

  edges =  A->A
  
  
}","false","","","","",""
"33","ThreeCycle","94","eval_input","2020-04-10 11:31:40","inst myInst {
  Node = A 

  edges =  A->A
  
  
}","false","","","","",""
"33","ThreeCycle","95","eval_input","2020-04-10 11:31:43","inst myInst {
  Node = A 

  edges =  none
  
  
}","false","","","","",""
"33","ThreeCycle","96","eval_input","2020-04-10 11:31:51","inst myInst {
  Node = A + B

  edges =  A->B
  
  
}","false","","","","",""
"33","ThreeCycle","97","eval_input","2020-04-10 11:31:56","inst myInst {
  Node = A + B

  edges =  A->B + B->A
  
  
}","false","","","","",""
"33","ThreeCycle","98","eval_input","2020-04-10 11:32:03","inst myInst {
  Node = A + B

  edges =  A->B + B->A + A->A + B->B
  
  
}","false","","","","",""
"33","ThreeCycle","99","eval_input","2020-04-10 11:32:15","inst myInst {
  Node = A + B

  edges =  none
  
  
}","false","","","","",""
"33","ThreeCycle","100","eval_input","2020-04-10 11:32:26","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C
  
  
}","false","","","","",""
"33","ThreeCycle","101","eval_input","2020-04-10 11:32:32","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + A->C
  
  
}","false","","","","",""
"33","ThreeCycle","102","eval_input","2020-04-10 11:32:49","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->A
}","true","","","","",""
"33","ThreeCycle","103","eval_input","2020-04-10 11:32:57","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->A + C->B
}","true","","","","",""
"33","ThreeCycle","104","eval_input","2020-04-10 11:33:02","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->A + C->B + B->A
}","true","","","","",""
"33","ThreeCycle","105","eval_input","2020-04-10 11:33:06","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->B + B->A
}","false","","","","",""
"33","ThreeCycle","106","eval_input","2020-04-10 11:34:20","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->B + B->A
}","false","","","","",""
"33","ThreeCycle","107","eval_input","2020-04-10 11:34:39","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->B + B->A+ C->A
}","true","","","","",""
"33","ThreeCycle","108","eval_input","2020-04-10 11:35:08","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + A->C
}","false","","","","",""
"33","ThreeCycle","109","eval_input","2020-04-10 11:35:33","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->A
}","true","","","","",""
"33","ThreeCycle","110","eval_input","2020-04-10 11:35:38","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->A + A->A
}","true","","","","",""
"33","ThreeCycle","111","eval_input","2020-04-10 11:35:50","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->A 
}","true","","","","",""
"33","ThreeCycle","112","eval_input","2020-04-10 11:36:12","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A
}","false","","","","",""
"33","ThreeCycle","113","eval_input","2020-04-10 11:36:30","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A + C->A
}","true","","","","",""
"33","ThreeCycle","114","eval_input","2020-04-10 11:36:58","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A + A->C
}","true","","","","",""
"33","ThreeCycle","115","eval_input","2020-04-10 11:37:02","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A + B->D
}","true","","","","",""
"33","ThreeCycle","116","eval_input","2020-04-10 11:37:19","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A + A->D
}","false","","","","",""
"33","ThreeCycle","117","eval_input","2020-04-10 11:37:55","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A 
}","false","","","","",""
"33","ThreeCycle","118","eval_input","2020-04-10 11:38:26","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + C->A
}","true","","","","",""
"33","ThreeCycle","119","quiz_answer","2020-04-10 11:38:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"33","ThreeCycle","120","quiz_answer","2020-04-10 11:38:55","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"33","ThreeCycle","121","quiz_answer","2020-04-10 11:38:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"33","ThreeCycle","122","quiz_answer","2020-04-10 11:39:15","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"33","ThreeCycle","123","quiz_answer","2020-04-10 11:39:21","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"33","ThreeCycle","124","quiz_answer","2020-04-10 11:39:25","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"33","ThreeCycle","125","quiz_answer","2020-04-10 11:39:38","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"33","ThreeCycle","126","quiz_answer","2020-04-10 11:40:01","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"33","ThreeCycle","127","final_answer","2020-04-10 11:40:02","","","","","","true if there is a three node cycle",""
"33","IsBipartite","128","eval_input","2020-04-10 11:40:43","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + C->A
}","false","","","","",""
"33","IsBipartite","129","eval_input","2020-04-10 11:40:50","inst myInst {
  Node = A 

  edges =  none
}","true","","","","",""
"33","IsBipartite","130","eval_input","2020-04-10 11:40:55","inst myInst {
  Node = A 

  edges =  A->A
}","false","","","","",""
"33","IsBipartite","131","eval_input","2020-04-10 11:41:28","inst myInst {
  Node = none

  edges =  none
}","true","","","","",""
"33","IsBipartite","132","eval_input","2020-04-10 11:41:35","inst myInst {
  Node = A + B

  edges =  A->B
}","true","","","","",""
"33","IsBipartite","133","eval_input","2020-04-10 11:41:45","inst myInst {
  Node = A + B

  edges =  A->B + B->A
}","true","","","","",""
"33","IsBipartite","134","eval_input","2020-04-10 11:41:55","inst myInst {
  Node = A + B

  edges =  A->B + B->A + A->A
}","false","","","","",""
"33","IsBipartite","135","eval_input","2020-04-10 11:42:10","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C
}","true","","","","",""
"33","IsBipartite","136","eval_input","2020-04-10 11:42:57","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->A
  
}","false","","","","",""
"33","IsBipartite","137","eval_input","2020-04-10 11:43:08","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->B
}","true","","","","",""
"33","IsBipartite","138","eval_input","2020-04-10 11:43:30","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->B + B->A
}","true","","","","",""
"33","IsBipartite","139","eval_input","2020-04-10 11:43:45","inst myInst {
  Node = A + B + C

  edges =  A->B + B->C + C->B + B->A + A->C
}","false","","","","",""
"33","IsBipartite","140","eval_input","2020-04-10 11:44:33","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D
}","true","","","","",""
"33","IsBipartite","141","eval_input","2020-04-10 11:44:39","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A
}","true","","","","",""
"33","IsBipartite","142","eval_input","2020-04-10 11:44:58","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->A
}","false","","","","",""
"33","IsBipartite","143","eval_input","2020-04-10 11:45:22","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->A + C->D + D->A
}","false","","","","",""
"33","IsBipartite","144","eval_input","2020-04-10 11:45:55","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->A + C->D + D->A + A->A
}","false","","","","",""
"33","IsBipartite","145","eval_input","2020-04-10 11:46:05","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A 
}","true","","","","",""
"33","IsBipartite","146","eval_input","2020-04-10 11:46:11","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A + D->D
}","false","","","","",""
"33","IsBipartite","147","eval_input","2020-04-10 11:46:17","inst myInst {
  Node = A + B + C + D

  edges =  A->B + B->C + C->D + D->A + D->C
}","true","","","","",""
"33","IsBipartite","148","quiz_answer","2020-04-10 11:46:33","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"33","IsBipartite","149","quiz_answer","2020-04-10 11:46:37","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"33","IsBipartite","150","quiz_answer","2020-04-10 11:46:42","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"33","IsBipartite","151","quiz_answer","2020-04-10 11:47:08","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"33","IsBipartite","152","quiz_answer","2020-04-10 11:47:14","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"33","IsBipartite","153","quiz_answer","2020-04-10 11:47:26","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"33","IsBipartite","154","quiz_answer","2020-04-10 11:47:41","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"33","IsBipartite","155","quiz_answer","2020-04-10 11:47:59","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"33","IsBipartite","156","eval_input","2020-04-10 11:48:42","inst myInst {
  Node = A + B + C + D + E

  edges =  A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"33","IsBipartite","157","quiz_answer","2020-04-10 11:48:56","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"33","IsBipartite","158","quiz_answer","2020-04-10 11:48:59","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"33","IsBipartite","159","quiz_answer","2020-04-10 11:49:03","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"33","IsBipartite","160","quiz_answer","2020-04-10 11:49:06","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"33","IsBipartite","161","quiz_answer","2020-04-10 11:49:13","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"33","IsBipartite","162","quiz_answer","2020-04-10 11:49:17","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"33","IsBipartite","163","quiz_answer","2020-04-10 11:49:22","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"33","IsBipartite","164","quiz_answer","2020-04-10 11:49:26","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"33","IsBipartite","165","final_answer","2020-04-10 11:49:27","","","","","","true if no cycles with an odd number of an elements",""
"35","ThreeCycle","0","eval_input","2020-04-10 12:46:43","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"35","ThreeCycle","1","eval_input","2020-04-10 12:46:49","inst myInst {
  Node = A
       + B
  edges = none
}","false","","","","",""
"35","ThreeCycle","2","eval_input","2020-04-10 12:46:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"35","ThreeCycle","3","eval_input","2020-04-10 12:47:04","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"35","ThreeCycle","4","eval_input","2020-04-10 12:47:11","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"35","ThreeCycle","5","eval_input","2020-04-10 12:47:22","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"35","ThreeCycle","6","eval_input","2020-04-10 12:47:44","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","false","","","","",""
"35","ThreeCycle","7","eval_input","2020-04-10 12:47:54","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C + B->C
}","false","","","","",""
"35","ThreeCycle","8","eval_input","2020-04-10 12:48:07","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + B->A
}","false","","","","",""
"35","ThreeCycle","9","eval_input","2020-04-10 12:48:09","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"35","ThreeCycle","10","quiz_answer","2020-04-10 12:48:49","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"35","ThreeCycle","11","eval_input","2020-04-10 12:49:16","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"35","ThreeCycle","12","eval_input","2020-04-10 12:49:34","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"35","ThreeCycle","13","eval_input","2020-04-10 12:49:38","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"35","ThreeCycle","14","eval_input","2020-04-10 12:49:42","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"35","ThreeCycle","15","eval_input","2020-04-10 12:50:04","inst myInst {
  Node = A 
  edges = none
}","false","","","","",""
"35","ThreeCycle","16","eval_input","2020-04-10 12:50:29","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"35","ThreeCycle","17","eval_input","2020-04-10 12:50:38","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"35","ThreeCycle","18","quiz_answer","2020-04-10 12:50:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","ThreeCycle","19","quiz_answer","2020-04-10 12:50:55","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"35","ThreeCycle","20","quiz_answer","2020-04-10 12:50:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"35","ThreeCycle","21","quiz_answer","2020-04-10 12:51:03","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"35","ThreeCycle","22","quiz_answer","2020-04-10 12:51:07","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"35","ThreeCycle","23","quiz_answer","2020-04-10 12:51:10","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"35","ThreeCycle","24","quiz_answer","2020-04-10 12:51:15","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"35","ThreeCycle","25","quiz_answer","2020-04-10 12:51:17","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"35","ThreeCycle","26","final_answer","2020-04-10 12:51:18","","","","","","Only returns true if the instance has a cycle of 3 nodes.",""
"35","IsBipartite","27","eval_input","2020-04-10 12:51:28","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"35","IsBipartite","28","eval_input","2020-04-10 12:51:39","inst myInst {
  Node = A 
  edges = none
}","true","","","","",""
"35","IsBipartite","29","eval_input","2020-04-10 12:51:43","inst myInst {
  Node = A 
  edges = A->A
}","false","","","","",""
"35","IsBipartite","30","eval_input","2020-04-10 12:52:15","inst myInst {
  Node = A + B
  edges = A->A + A->B
}","false","","","","",""
"35","IsBipartite","31","eval_input","2020-04-10 12:52:21","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"35","IsBipartite","32","eval_input","2020-04-10 12:52:29","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"35","IsBipartite","33","eval_input","2020-04-10 12:52:37","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"35","IsBipartite","34","eval_input","2020-04-10 12:52:41","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"35","IsBipartite","35","quiz_answer","2020-04-10 12:53:00","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsBipartite","36","quiz_answer","2020-04-10 12:53:03","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsBipartite","37","quiz_answer","2020-04-10 12:53:06","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"35","IsBipartite","38","eval_input","2020-04-10 12:53:18","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"35","IsBipartite","39","eval_input","2020-04-10 12:53:28","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"35","IsBipartite","40","eval_input","2020-04-10 12:53:40","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"35","IsBipartite","41","eval_input","2020-04-10 12:53:53","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C 
}","true","","","","",""
"35","IsBipartite","42","eval_input","2020-04-10 12:54:00","inst myInst {
  Node = A + B + C + D
  edges = B->C + C->D
}","true","","","","",""
"35","IsBipartite","43","quiz_answer","2020-04-10 12:54:10","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsBipartite","44","quiz_answer","2020-04-10 12:54:14","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsBipartite","45","quiz_answer","2020-04-10 12:54:17","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"35","IsBipartite","46","quiz_answer","2020-04-10 12:54:24","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"35","IsBipartite","47","eval_input","2020-04-10 12:54:45","inst myInst {
  Node = A + B + C + D
  edges = B->C + C->D + D->A
}","true","","","","",""
"35","IsBipartite","48","eval_input","2020-04-10 12:55:09","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"35","IsBipartite","49","eval_input","2020-04-10 12:55:30","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","true","","","","",""
"35","IsBipartite","50","quiz_answer","2020-04-10 12:55:36","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsBipartite","51","quiz_answer","2020-04-10 12:55:38","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsBipartite","52","quiz_answer","2020-04-10 12:55:42","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"35","IsBipartite","53","quiz_answer","2020-04-10 12:55:44","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"35","IsBipartite","54","eval_input","2020-04-10 12:55:49","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","true","","","","",""
"35","IsBipartite","55","quiz_answer","2020-04-10 12:56:00","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsBipartite","56","quiz_answer","2020-04-10 12:56:02","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsBipartite","57","quiz_answer","2020-04-10 12:56:06","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"35","IsBipartite","58","quiz_answer","2020-04-10 12:56:08","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"35","IsBipartite","59","quiz_answer","2020-04-10 12:56:25","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"35","IsBipartite","60","quiz_answer","2020-04-10 12:56:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsBipartite","61","quiz_answer","2020-04-10 12:57:01","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsBipartite","62","quiz_answer","2020-04-10 12:57:03","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"35","IsBipartite","63","quiz_answer","2020-04-10 12:57:09","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"35","IsBipartite","64","quiz_answer","2020-04-10 12:57:16","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"35","IsBipartite","65","quiz_answer","2020-04-10 12:57:31","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","true","false","",""
"35","IsBipartite","66","quiz_answer","2020-04-10 12:58:02","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsBipartite","67","quiz_answer","2020-04-10 12:58:05","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsBipartite","68","quiz_answer","2020-04-10 12:58:07","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"35","IsBipartite","69","quiz_answer","2020-04-10 12:58:30","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"35","IsBipartite","70","quiz_answer","2020-04-10 12:58:49","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"35","IsBipartite","71","eval_input","2020-04-10 12:59:28","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"35","IsBipartite","72","quiz_answer","2020-04-10 13:00:59","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"35","IsBipartite","73","eval_input","2020-04-10 13:01:50","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"35","IsBipartite","74","eval_input","2020-04-10 13:01:56","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C
}","true","","","","",""
"35","IsBipartite","75","eval_input","2020-04-10 13:02:02","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"35","IsBipartite","76","eval_input","2020-04-10 13:02:06","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"35","IsBipartite","77","eval_input","2020-04-10 13:02:22","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"35","IsBipartite","78","quiz_answer","2020-04-10 13:02:32","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsBipartite","79","quiz_answer","2020-04-10 13:02:34","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsBipartite","80","quiz_answer","2020-04-10 13:02:48","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"35","IsBipartite","81","quiz_answer","2020-04-10 13:03:04","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"35","IsBipartite","82","quiz_answer","2020-04-10 13:03:27","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"35","IsBipartite","83","quiz_answer","2020-04-10 13:03:46","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"35","IsBipartite","84","quiz_answer","2020-04-10 13:04:08","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"35","IsBipartite","85","quiz_answer","2020-04-10 13:04:30","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"35","IsBipartite","86","final_answer","2020-04-10 13:04:31","","","","","","false if odd number of nodes in cycle",""
"35","IsDag","87","eval_input","2020-04-10 13:05:55","inst myInst {
  Node = A + B + C + D
  edges = none
}","true","","","","",""
"35","IsDag","88","eval_input","2020-04-10 13:06:01","inst myInst {
  Node = A + B + C + D
  edges = A->A
}","false","","","","",""
"35","IsDag","89","eval_input","2020-04-10 13:06:04","inst myInst {
  Node = A + B + C + D
  edges = A->B
}","true","","","","",""
"35","IsDag","90","eval_input","2020-04-10 13:06:07","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","false","","","","",""
"35","IsDag","91","eval_input","2020-04-10 13:06:15","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"35","IsDag","92","quiz_answer","2020-04-10 13:06:28","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"35","IsDag","93","quiz_answer","2020-04-10 13:06:49","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"35","IsDag","94","quiz_answer","2020-04-10 13:06:59","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"35","IsDag","95","quiz_answer","2020-04-10 13:07:24","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"35","IsDag","96","quiz_answer","2020-04-10 13:07:39","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"35","IsDag","97","quiz_answer","2020-04-10 13:07:52","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"35","IsDag","98","quiz_answer","2020-04-10 13:08:06","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"35","IsDag","100","final_answer","2020-04-10 13:08:16","","","","","","True if graph is acylic, false otherwise.",""
"35","IsDag","99","quiz_answer","2020-04-10 13:08:16","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"36","ThreeCycle","0","eval_input","2020-04-10 15:58:06","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"36","ThreeCycle","1","eval_input","2020-04-10 15:58:21","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"36","ThreeCycle","2","eval_input","2020-04-10 15:58:29","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"36","ThreeCycle","3","eval_input","2020-04-10 15:58:39","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"36","ThreeCycle","4","eval_input","2020-04-10 15:58:48","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"36","ThreeCycle","5","eval_input","2020-04-10 15:58:58","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A + D->A
}","true","","","","",""
"36","ThreeCycle","6","eval_input","2020-04-10 15:59:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"36","ThreeCycle","7","eval_input","2020-04-10 15:59:44","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A + A->C + B->C
}","false","","","","",""
"36","ThreeCycle","8","eval_input","2020-04-10 16:00:20","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"36","ThreeCycle","9","eval_input","2020-04-10 16:01:10","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"36","ThreeCycle","10","eval_input","2020-04-10 16:01:47","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A + B->D + D->A
}","true","","","","",""
"37","IsDag","0","eval_input","2020-04-10 16:02:37","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"36","ThreeCycle","11","eval_input","2020-04-10 16:02:39","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A + B->D + D->A + C->B
}","true","","","","",""
"37","IsDag","1","eval_input","2020-04-10 16:03:27","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"37","IsDag","2","eval_input","2020-04-10 16:03:33","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"36","ThreeCycle","12","quiz_answer","2020-04-10 16:03:40","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"37","IsDag","3","eval_input","2020-04-10 16:03:43","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->B
}","false","","","","",""
"36","ThreeCycle","13","quiz_answer","2020-04-10 16:03:45","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"36","ThreeCycle","14","quiz_answer","2020-04-10 16:03:50","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"36","ThreeCycle","15","quiz_answer","2020-04-10 16:03:57","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"36","ThreeCycle","16","quiz_answer","2020-04-10 16:04:03","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"37","IsDag","4","eval_input","2020-04-10 16:04:04","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->C + C->B
}","false","","","","",""
"36","ThreeCycle","17","quiz_answer","2020-04-10 16:04:09","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"37","IsDag","5","eval_input","2020-04-10 16:04:10","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->A + C->B
}","true","","","","",""
"36","ThreeCycle","18","quiz_answer","2020-04-10 16:04:24","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"37","IsDag","6","eval_input","2020-04-10 16:04:32","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + C->C + B->B
}","false","","","","",""
"37","IsDag","7","eval_input","2020-04-10 16:04:37","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + C->B + B->B
}","false","","","","",""
"36","ThreeCycle","19","quiz_answer","2020-04-10 16:04:41","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"37","IsDag","8","eval_input","2020-04-10 16:04:41","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + C->C + B->B
}","false","","","","",""
"36","ThreeCycle","20","final_answer","2020-04-10 16:04:45","","","","","","There exists a 3-cycle (distinct nodes A, B, and C such that A->B, B->C, and C->A are in edges)",""
"36","IsDag","21","eval_input","2020-04-10 16:05:12","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A + B->D + D->A + C->B
}","false","","","","",""
"37","IsDag","9","eval_input","2020-04-10 16:05:38","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + C->C
}","false","","","","",""
"37","IsDag","10","eval_input","2020-04-10 16:05:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + C->B
}","false","","","","",""
"37","IsDag","11","eval_input","2020-04-10 16:06:01","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + C->A
}","false","","","","",""
"37","IsDag","12","eval_input","2020-04-10 16:06:15","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + C->A
}","false","","","","",""
"36","IsDag","22","eval_input","2020-04-10 16:06:30","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"36","IsDag","23","eval_input","2020-04-10 16:06:44","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"36","IsDag","24","eval_input","2020-04-10 16:06:49","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C
}","true","","","","",""
"36","IsDag","25","eval_input","2020-04-10 16:06:57","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->A
}","false","","","","",""
"36","IsDag","26","eval_input","2020-04-10 16:07:05","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->A
}","false","","","","",""
"36","IsDag","27","eval_input","2020-04-10 16:07:17","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + D->C
}","true","","","","",""
"36","IsDag","28","eval_input","2020-04-10 16:07:49","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + D->C + B->D
}","true","","","","",""
"37","IsDag","13","eval_input","2020-04-10 16:08:17","inst myInst {
  Node = A
       + B
       + C
  edges = C->A
}","true","","","","",""
"36","IsDag","29","eval_input","2020-04-10 16:08:18","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B
}","true","","","","",""
"37","IsDag","14","eval_input","2020-04-10 16:08:24","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"37","IsDag","15","eval_input","2020-04-10 16:08:29","inst myInst {
  Node = A
       + B
       + C
  edges = B->B
}","false","","","","",""
"37","IsDag","16","eval_input","2020-04-10 16:08:34","inst myInst {
  Node = A
       + B
       + C
  edges = C->C
}","false","","","","",""
"36","IsDag","30","quiz_answer","2020-04-10 16:09:00","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"36","IsDag","31","quiz_answer","2020-04-10 16:09:04","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"36","IsDag","32","quiz_answer","2020-04-10 16:09:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"37","IsDag","17","quiz_answer","2020-04-10 16:09:15","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"37","IsDag","18","quiz_answer","2020-04-10 16:09:23","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"36","IsDag","33","quiz_answer","2020-04-10 16:09:28","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"37","IsDag","19","quiz_answer","2020-04-10 16:09:30","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"37","IsDag","20","quiz_answer","2020-04-10 16:09:39","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"37","IsDag","21","quiz_answer","2020-04-10 16:09:46","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"37","IsDag","22","quiz_answer","2020-04-10 16:09:54","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"37","IsDag","23","quiz_answer","2020-04-10 16:10:00","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"37","IsDag","24","quiz_answer","2020-04-10 16:10:06","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"37","IsDag","25","final_answer","2020-04-10 16:10:08","","","","","","I think the predicate returns true if the graph formed by the edges is acyclic",""
"36","IsDag","34","eval_input","2020-04-10 16:10:35","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"37","IsBipartite","26","eval_input","2020-04-10 16:10:50","inst myInst {
  Node = A
       + B
       + C
  edges = C->C
}","false","","","","",""
"36","IsDag","35","quiz_answer","2020-04-10 16:11:02","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"37","IsBipartite","27","eval_input","2020-04-10 16:11:04","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"36","IsDag","36","quiz_answer","2020-04-10 16:11:08","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"37","IsBipartite","28","eval_input","2020-04-10 16:11:12","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"36","IsDag","37","quiz_answer","2020-04-10 16:11:12","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"36","IsDag","38","quiz_answer","2020-04-10 16:11:18","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"37","IsBipartite","29","eval_input","2020-04-10 16:11:18","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"37","IsBipartite","30","eval_input","2020-04-10 16:11:23","inst myInst {
  Node = A
       + B
       + C
  edges = B->B
}","false","","","","",""
"37","IsBipartite","31","eval_input","2020-04-10 16:11:26","inst myInst {
  Node = A
       + B
       + C
  edges = B->C
}","true","","","","",""
"37","IsBipartite","32","eval_input","2020-04-10 16:11:34","inst myInst {
  Node = A
       + B
       + C
  edges = B->C + C->A + A->B
}","false","","","","",""
"37","IsBipartite","33","eval_input","2020-04-10 16:11:39","inst myInst {
  Node = A
       + B
       + C
  edges = C->C
}","false","","","","",""
"37","IsBipartite","34","eval_input","2020-04-10 16:11:47","inst myInst {
  Node = A
       + B
       + C
  edges = C->C
}","false","","","","",""
"37","IsBipartite","35","eval_input","2020-04-10 16:12:05","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","true","","","","",""
"36","IsDag","39","quiz_answer","2020-04-10 16:12:14","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"36","IsDag","40","quiz_answer","2020-04-10 16:12:17","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"36","IsDag","41","quiz_answer","2020-04-10 16:12:20","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"36","IsDag","42","quiz_answer","2020-04-10 16:12:24","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"36","IsDag","43","quiz_answer","2020-04-10 16:12:30","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"36","IsDag","44","quiz_answer","2020-04-10 16:12:43","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"36","IsDag","45","quiz_answer","2020-04-10 16:12:52","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"37","IsBipartite","36","eval_input","2020-04-10 16:12:57","inst myInst {
  Node = A
       + B
       + C
  edges = C->B + B->A
}","true","","","","",""
"36","IsDag","46","quiz_answer","2020-04-10 16:12:58","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"36","IsDag","47","final_answer","2020-04-10 16:13:00","","","","","","edges is acyclic (under the directed interpretation)
(I keep messing up in answering)",""
"36","IsBipartite","48","eval_input","2020-04-10 16:13:12","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"36","IsBipartite","49","eval_input","2020-04-10 16:13:30","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"36","IsBipartite","50","eval_input","2020-04-10 16:13:43","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"36","IsBipartite","51","eval_input","2020-04-10 16:13:55","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","true","","","","",""
"36","IsBipartite","52","eval_input","2020-04-10 16:13:59","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"36","IsBipartite","53","eval_input","2020-04-10 16:14:12","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + A->B
}","false","","","","",""
"36","IsBipartite","54","quiz_answer","2020-04-10 16:14:44","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"36","IsBipartite","55","quiz_answer","2020-04-10 16:14:47","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"36","IsBipartite","56","quiz_answer","2020-04-10 16:14:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"36","IsBipartite","57","eval_input","2020-04-10 16:14:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + A->B
}","false","","","","",""
"36","IsBipartite","58","quiz_answer","2020-04-10 16:15:37","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"36","IsBipartite","59","quiz_answer","2020-04-10 16:15:47","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"36","IsBipartite","60","quiz_answer","2020-04-10 16:15:55","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"36","IsBipartite","61","quiz_answer","2020-04-10 16:16:00","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"36","IsBipartite","62","quiz_answer","2020-04-10 16:16:06","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"36","IsBipartite","63","eval_input","2020-04-10 16:16:41","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"37","IsBipartite","37","eval_input","2020-04-10 16:16:46","inst myInst {
  Node = A
       + B
       + C
  edges = C->A
}","true","","","","",""
"36","IsBipartite","64","eval_input","2020-04-10 16:16:53","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A + A->A
}","false","","","","",""
"37","IsBipartite","38","eval_input","2020-04-10 16:16:57","inst myInst {
  Node = A
       + B
       + C
  edges = C->A
}","true","","","","",""
"36","IsBipartite","65","eval_input","2020-04-10 16:17:04","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"36","IsBipartite","66","eval_input","2020-04-10 16:17:26","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"36","IsBipartite","67","quiz_answer","2020-04-10 16:17:57","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"36","IsBipartite","68","quiz_answer","2020-04-10 16:18:01","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"36","IsBipartite","69","quiz_answer","2020-04-10 16:18:06","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"36","IsBipartite","70","quiz_answer","2020-04-10 16:18:11","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"36","IsBipartite","72","quiz_answer","2020-04-10 16:18:30","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"36","IsBipartite","73","quiz_answer","2020-04-10 16:18:35","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"36","IsBipartite","74","quiz_answer","2020-04-10 16:18:38","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"36","IsBipartite","75","quiz_answer","2020-04-10 16:18:42","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"36","IsBipartite","76","quiz_answer","2020-04-10 16:18:48","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"36","IsBipartite","77","quiz_answer","2020-04-10 16:18:56","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"36","IsBipartite","78","quiz_answer","2020-04-10 16:19:00","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"36","IsBipartite","79","final_answer","2020-04-10 16:19:01","","","","","","no cycle with an odd number of edges",""
"37","IsBipartite","39","eval_input","2020-04-10 16:22:38","inst myInst {
  Node = A
       + B
       + C
  edges = C->A + B->A
}","true","","","","",""
"37","IsBipartite","40","eval_input","2020-04-10 16:22:50","inst myInst {
  Node = A
       + B
       + C
  edges = C->A + A->C
}","true","","","","",""
"37","IsBipartite","41","eval_input","2020-04-10 16:23:16","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + C->B + B->A
}","false","","","","",""
"37","IsBipartite","42","quiz_answer","2020-04-10 16:23:59","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"37","IsBipartite","43","quiz_answer","2020-04-10 16:24:04","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"37","IsBipartite","44","quiz_answer","2020-04-10 16:24:11","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"37","IsBipartite","45","quiz_answer","2020-04-10 16:24:19","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"37","IsBipartite","46","quiz_answer","2020-04-10 16:24:24","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"37","IsBipartite","47","quiz_answer","2020-04-10 16:24:29","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"37","IsBipartite","48","quiz_answer","2020-04-10 16:24:38","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"37","IsBipartite","49","final_answer","2020-04-10 16:24:42","","","","","","I want to say it returns true if the graph is acyclic, unless the cycle contains two nodes",""
"37","ThreeCycle","50","eval_input","2020-04-10 16:25:21","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + C->B + B->A
}","true","","","","",""
"37","ThreeCycle","51","eval_input","2020-04-10 16:25:31","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"37","ThreeCycle","52","eval_input","2020-04-10 16:25:36","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"37","ThreeCycle","53","eval_input","2020-04-10 16:25:39","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"37","ThreeCycle","54","eval_input","2020-04-10 16:25:44","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"37","ThreeCycle","55","eval_input","2020-04-10 16:25:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","false","","","","",""
"37","ThreeCycle","56","eval_input","2020-04-10 16:26:15","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->C + C->A
}","true","","","","",""
"37","ThreeCycle","57","eval_input","2020-04-10 16:26:20","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"37","ThreeCycle","58","quiz_answer","2020-04-10 16:26:35","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"37","ThreeCycle","59","quiz_answer","2020-04-10 16:26:38","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"37","ThreeCycle","60","quiz_answer","2020-04-10 16:26:44","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"37","ThreeCycle","61","final_answer","2020-04-10 16:26:49","","","","","","Returns true if the graph is connected",""
"38","IsDag","0","eval_input","2020-04-10 16:34:29","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"38","IsDag","1","eval_input","2020-04-10 16:34:58","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"38","IsDag","2","eval_input","2020-04-10 16:35:09","inst myInst {
  Node = A+B
  edges = none
}","true","","","","",""
"38","IsDag","3","eval_input","2020-04-10 16:35:24","inst myInst {
  Node = A+B+C
  edges = none
}","true","","","","",""
"38","IsDag","4","eval_input","2020-04-10 16:35:53","inst myInst {
  Node = A+B+C
  edges = A->B
}","true","","","","",""
"38","IsDag","5","eval_input","2020-04-10 16:36:12","inst myInst {
  Node = A+B+C
  edges = A->B + A->C
}","true","","","","",""
"38","IsDag","6","eval_input","2020-04-10 16:36:32","inst myInst {
  Node = A+B+C
  edges = A->B + A->C + B->C
}","true","","","","",""
"38","IsDag","7","eval_input","2020-04-10 16:36:44","inst myInst {
  Node = A+B+C
  edges = A->B + A->C + B->C + B->A
}","false","","","","",""
"38","IsDag","8","eval_input","2020-04-10 16:36:54","inst myInst {
  Node = A+B+C
  edges = A->B + B->A
}","false","","","","",""
"38","IsDag","9","eval_input","2020-04-10 16:37:00","inst myInst {
  Node = A+B
  edges = A->B + B->A
}","false","","","","",""
"38","IsDag","10","eval_input","2020-04-10 16:37:30","inst myInst {
  Node = A+B+C
  edges = A->B + B->A 
}","false","","","","",""
"38","IsDag","11","eval_input","2020-04-10 16:37:35","inst myInst {
  Node = A+B+C
  edges = A->B + C->A 
}","true","","","","",""
"38","IsDag","12","eval_input","2020-04-10 16:38:02","inst myInst {
  Node = A+B+C
  edges = A->B + C->A + B->C
}","false","","","","",""
"38","IsDag","13","eval_input","2020-04-10 16:38:18","inst myInst {
  Node = A+B+C
  edges = A->B + C->A + B->C + B->A
}","false","","","","",""
"38","IsDag","14","eval_input","2020-04-10 16:38:28","inst myInst {
  Node = A+B+C
  edges =  C->A + B->C + B->A
}","true","","","","",""
"38","IsDag","15","eval_input","2020-04-10 16:38:41","inst myInst {
  Node = A+B+C
  edges =  C->C
}","false","","","","",""
"38","IsDag","16","eval_input","2020-04-10 16:38:52","inst myInst {
  Node = A+B+C
  edges =  C->C+C->B
}","false","","","","",""
"38","IsDag","17","eval_input","2020-04-10 16:38:59","inst myInst {
  Node = A+B+C
  edges =  C->B
}","true","","","","",""
"38","IsDag","18","eval_input","2020-04-10 16:39:28","inst myInst {
  Node = A+B+C
  edges =  C->B + B->C + B->A
}","false","","","","",""
"38","IsDag","19","eval_input","2020-04-10 16:39:37","inst myInst {
  Node = A+B+C
  edges =  C->B + B->A
}","true","","","","",""
"38","IsDag","20","eval_input","2020-04-10 16:39:47","inst myInst {
  Node = A+B+C
  edges =  C->B + B->A + A->C
}","false","","","","",""
"38","IsDag","21","quiz_answer","2020-04-10 16:40:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"38","IsDag","22","quiz_answer","2020-04-10 16:40:36","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"38","IsDag","23","quiz_answer","2020-04-10 16:40:43","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"38","IsDag","24","quiz_answer","2020-04-10 16:41:03","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"38","IsDag","25","quiz_answer","2020-04-10 16:41:23","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"38","IsDag","26","quiz_answer","2020-04-10 16:41:38","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"38","IsDag","27","quiz_answer","2020-04-10 16:41:50","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"38","IsDag","28","quiz_answer","2020-04-10 16:42:02","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"38","IsDag","29","final_answer","2020-04-10 16:42:07","","","","","","The predicate returns false if the graph contains cycles",""
"38","IsBipartite","30","eval_input","2020-04-10 16:42:35","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"38","IsBipartite","31","eval_input","2020-04-10 16:42:42","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"38","IsBipartite","32","eval_input","2020-04-10 16:42:47","inst myInst {
  Node = A+B
  edges = none
}","true","","","","",""
"38","IsBipartite","33","eval_input","2020-04-10 16:42:51","inst myInst {
  Node = A+B+C
  edges = none
}","true","","","","",""
"38","IsBipartite","34","eval_input","2020-04-10 16:43:02","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"38","IsBipartite","35","eval_input","2020-04-10 16:43:12","inst myInst {
  Node = A+B
  edges = A->B
}","true","","","","",""
"38","IsBipartite","36","eval_input","2020-04-10 16:43:20","inst myInst {
  Node = A+B
  edges = A->B+B->A
}","true","","","","",""
"38","IsBipartite","37","eval_input","2020-04-10 16:43:31","inst myInst {
  Node = A+B
  edges = A->B+B->A+B->B
}","false","","","","",""
"38","IsBipartite","38","eval_input","2020-04-10 16:43:48","inst myInst {
  Node = A+B+C
  edges = A->B+B->A
}","true","","","","",""
"38","IsBipartite","39","eval_input","2020-04-10 16:43:58","inst myInst {
  Node = A+B+C
  edges = A->B+B->C+C->A
}","false","","","","",""
"38","IsBipartite","40","eval_input","2020-04-10 16:45:13","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+D->A
}","true","","","","",""
"38","IsBipartite","41","eval_input","2020-04-10 16:46:11","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D+D->A
}","true","","","","",""
"38","IsBipartite","42","eval_input","2020-04-10 16:46:43","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->A
}","true","","","","",""
"38","IsBipartite","43","eval_input","2020-04-10 16:47:39","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D
}","true","","","","",""
"38","IsBipartite","44","eval_input","2020-04-10 16:48:14","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->E+E->A
}","false","","","","",""
"38","IsBipartite","45","eval_input","2020-04-10 16:48:22","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->E+E->B
}","true","","","","",""
"38","IsBipartite","46","eval_input","2020-04-10 16:49:04","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+C->E+E->D+D->C
}","false","","","","",""
"38","IsBipartite","47","eval_input","2020-04-10 16:53:06","inst myInst {
  Node = A+B+C+D+E
  edges = B->B
}","false","","","","",""
"38","IsBipartite","48","eval_input","2020-04-10 16:53:24","inst myInst {
  Node = A+B+C+D+E
  edges = B->B +C->D
}","false","","","","",""
"38","IsBipartite","49","eval_input","2020-04-10 16:54:09","inst myInst {
  Node = A+B+C+D+E
  edges = B->C +C->D
}","true","","","","",""
"38","IsBipartite","50","eval_input","2020-04-10 16:54:36","inst myInst {
  Node = A+B+C+D+E
  edges = B->B+C->D+D->E+E->C
}","false","","","","",""
"38","IsBipartite","51","eval_input","2020-04-10 16:54:43","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+C->D+D->E+E->C
}","false","","","","",""
"38","IsBipartite","52","eval_input","2020-04-10 16:55:05","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->E+E->A
}","false","","","","",""
"38","IsBipartite","53","eval_input","2020-04-10 16:55:17","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->A
}","true","","","","",""
"38","IsBipartite","54","eval_input","2020-04-10 16:55:20","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->A
}","true","","","","",""
"38","IsBipartite","55","quiz_answer","2020-04-10 16:55:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"38","IsBipartite","56","quiz_answer","2020-04-10 16:56:00","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"38","IsBipartite","57","quiz_answer","2020-04-10 16:56:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"38","IsBipartite","58","quiz_answer","2020-04-10 16:56:19","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"38","IsBipartite","59","quiz_answer","2020-04-10 16:56:28","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"38","IsBipartite","60","quiz_answer","2020-04-10 16:56:37","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"38","IsBipartite","61","quiz_answer","2020-04-10 16:56:46","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"38","IsBipartite","62","quiz_answer","2020-04-10 16:56:56","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"38","IsBipartite","63","final_answer","2020-04-10 16:56:58","","","","","","The predicate returns false if there is a cycle with an odd number of nodes in it, and true otherwise",""
"38","ThreeCycle","64","eval_input","2020-04-10 16:57:54","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"38","ThreeCycle","65","eval_input","2020-04-10 16:58:06","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"38","ThreeCycle","66","eval_input","2020-04-10 16:58:10","inst myInst {
  Node = A+B
  edges = none
}","false","","","","",""
"38","ThreeCycle","67","eval_input","2020-04-10 16:58:15","inst myInst {
  Node = A+B+C
  edges = none
}","false","","","","",""
"38","ThreeCycle","68","eval_input","2020-04-10 16:58:24","inst myInst {
  Node = A+B+C
  edges = A->A
}","false","","","","",""
"38","ThreeCycle","69","eval_input","2020-04-10 16:58:30","inst myInst {
  Node = A+B+C
  edges = A->B
}","false","","","","",""
"38","ThreeCycle","70","eval_input","2020-04-10 16:58:43","inst myInst {
  Node = A+B+C
  edges = A->B+B->C
}","false","","","","",""
"38","ThreeCycle","71","eval_input","2020-04-10 16:58:54","inst myInst {
  Node = A+B+C
  edges = A->B+B->C+C->A
}","true","","","","",""
"38","ThreeCycle","72","eval_input","2020-04-10 16:59:07","inst myInst {
  Node = A+B+C
  edges = A->A+B->B+C->C
}","false","","","","",""
"38","ThreeCycle","73","eval_input","2020-04-10 16:59:30","inst myInst {
  Node = A+B+C
  edges = A->B+B->C+C->C
}","false","","","","",""
"38","ThreeCycle","74","eval_input","2020-04-10 16:59:52","inst myInst {
  Node = A+B
  edges = A->B+B->A
}","false","","","","",""
"38","ThreeCycle","75","eval_input","2020-04-10 17:00:37","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->A+C->D+D->C
}","false","","","","",""
"38","ThreeCycle","76","eval_input","2020-04-10 17:00:51","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D+D->A
}","false","","","","",""
"38","ThreeCycle","77","eval_input","2020-04-10 17:01:04","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->E+E->A
}","false","","","","",""
"38","ThreeCycle","78","eval_input","2020-04-10 17:01:43","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->A+D->E+E->A
}","true","","","","",""
"38","ThreeCycle","79","eval_input","2020-04-10 17:01:57","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->A+E->A
}","false","","","","",""
"38","ThreeCycle","80","eval_input","2020-04-10 17:02:20","inst myInst {
  Node = A+B+C+D+E
  edges = A->A+B->B+C->C+D->D
}","false","","","","",""
"38","ThreeCycle","81","eval_input","2020-04-10 17:02:26","inst myInst {
  Node = A+B+C+D+E
  edges = A->A+B->B+C->C+D->D+E->E
}","false","","","","",""
"38","ThreeCycle","82","eval_input","2020-04-10 17:03:03","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->A+D->D+E->E
}","true","","","","",""
"38","ThreeCycle","83","eval_input","2020-04-10 17:03:13","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->D+E->E
}","false","","","","",""
"38","ThreeCycle","84","eval_input","2020-04-10 17:03:17","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->D+D->A+E->E
}","false","","","","",""
"38","ThreeCycle","85","eval_input","2020-04-10 17:04:09","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+C->A+A->C+C->B+B->A
}","true","","","","",""
"38","ThreeCycle","86","eval_input","2020-04-10 17:04:16","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+A->C+C->B+B->A
}","true","","","","",""
"38","ThreeCycle","87","eval_input","2020-04-10 17:04:34","inst myInst {
  Node = A+B+C+D+E
  edges = A->B+B->C+A->C+C->B
}","false","","","","",""
"38","ThreeCycle","88","eval_input","2020-04-10 17:04:44","inst myInst {
  Node = A+B+C+D+E
  edges = A->A
}","false","","","","",""
"38","ThreeCycle","89","quiz_answer","2020-04-10 17:05:29","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"38","ThreeCycle","90","quiz_answer","2020-04-10 17:05:33","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"38","ThreeCycle","91","quiz_answer","2020-04-10 17:05:39","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"38","ThreeCycle","92","quiz_answer","2020-04-10 17:05:50","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"38","ThreeCycle","93","quiz_answer","2020-04-10 17:05:59","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"38","ThreeCycle","94","quiz_answer","2020-04-10 17:06:04","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"38","ThreeCycle","95","quiz_answer","2020-04-10 17:06:13","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"38","ThreeCycle","96","quiz_answer","2020-04-10 17:06:31","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"38","ThreeCycle","97","final_answer","2020-04-10 17:06:34","","","","","","returns true if there is a cycle containing exactly 3 nodes, false otherwise",""
"39","IsBipartite","0","eval_input","2020-04-10 20:36:49","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"39","IsBipartite","1","eval_input","2020-04-10 20:36:58","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
  
}","true","","","","",""
"39","IsBipartite","2","eval_input","2020-04-10 20:37:04","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
  
}","true","","","","",""
"39","IsBipartite","3","eval_input","2020-04-10 20:37:10","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->B
  
}","true","","","","",""
"39","IsBipartite","4","eval_input","2020-04-10 20:37:18","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
  
}","false","","","","",""
"39","IsBipartite","5","eval_input","2020-04-10 20:37:25","inst myInst {
  Node = A
       + B
       + C
  edges = C->A
  
}","true","","","","",""
"39","IsBipartite","6","eval_input","2020-04-10 20:37:36","inst myInst {
  Node = A
       + B
       + C
  edges = C->A + B->A
  
}","true","","","","",""
"39","IsBipartite","7","eval_input","2020-04-10 20:37:36","inst myInst {
  Node = A
       + B
       + C
  edges = C->A + B->A
  
}","true","","","","",""
"39","IsBipartite","8","eval_input","2020-04-10 20:37:46","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
  
}","false","","","","",""
"39","IsBipartite","9","eval_input","2020-04-10 20:38:22","inst myInst {
  Node = A
  edges = A->A
  
}","false","","","","",""
"39","IsBipartite","10","eval_input","2020-04-10 20:38:32","inst myInst {
  Node = A + B
  edges = A->B + B->A
  
}","true","","","","",""
"39","IsBipartite","11","eval_input","2020-04-10 20:39:03","inst myInst {
  Node = A + B
  edges = A->B + B->B
  
}","false","","","","",""
"39","IsBipartite","12","eval_input","2020-04-10 20:39:10","inst myInst {
  Node = A + B
  edges = A->A+ B->B
  
}","false","","","","",""
"39","IsBipartite","13","eval_input","2020-04-10 20:39:49","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  
}","true","","","","",""
"39","IsBipartite","14","eval_input","2020-04-10 20:39:55","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
  
}","false","","","","",""
"39","IsBipartite","15","eval_input","2020-04-10 20:39:56","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
  
}","false","","","","",""
"39","IsBipartite","16","eval_input","2020-04-10 20:40:19","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D
  
}","true","","","","",""
"39","IsBipartite","17","eval_input","2020-04-10 20:40:26","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D
  
}","true","","","","",""
"39","IsBipartite","18","eval_input","2020-04-10 20:41:05","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D + B->D + B->C
  
}","true","","","","",""
"39","IsBipartite","19","eval_input","2020-04-10 20:41:29","inst myInst {
  Node = A + B + C 
  edges = A->A + B->B + C->C
  
}","false","","","","",""
"39","IsBipartite","20","eval_input","2020-04-10 20:41:32","inst myInst {
  Node = A + B + C 
  edges = A->A + B->B 
  
}","false","","","","",""
"39","IsBipartite","21","eval_input","2020-04-10 20:41:35","inst myInst {
  Node = A + B + C 
  edges = A->A 
  
}","false","","","","",""
"39","IsBipartite","22","eval_input","2020-04-10 20:41:36","inst myInst {
  Node = A + B + C 
  edges = A->A 
  
}","false","","","","",""
"39","IsBipartite","23","eval_input","2020-04-10 20:41:53","inst myInst {
  Node = A + B + C 
  edges = A->B
  
}","true","","","","",""
"40","ThreeCycle","0","eval_input","2020-04-10 20:42:04","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"39","IsBipartite","24","eval_input","2020-04-10 20:42:06","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C
  
}","true","","","","",""
"39","IsBipartite","25","eval_input","2020-04-10 20:42:11","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->B
  
}","true","","","","",""
"40","ThreeCycle","1","eval_input","2020-04-10 20:42:11","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B
}","false","","","","",""
"40","ThreeCycle","2","eval_input","2020-04-10 20:42:26","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> C
  
}","false","","","","",""
"39","IsBipartite","26","eval_input","2020-04-10 20:42:33","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A
  
}","false","","","","",""
"40","ThreeCycle","3","eval_input","2020-04-10 20:42:37","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> A
  
}","false","","","","",""
"40","ThreeCycle","4","eval_input","2020-04-10 20:42:41","inst myInst {
  Node = A
       + B
       
  edges = A -> B + B -> A
  
}","false","","","","",""
"39","IsBipartite","27","eval_input","2020-04-10 20:42:54","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
  
}","false","","","","",""
"39","IsBipartite","28","eval_input","2020-04-10 20:42:58","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
  
}","true","","","","",""
"39","IsBipartite","29","eval_input","2020-04-10 20:43:38","inst myInst {
  Node = A + B + C + D + E
  edges = A->A + A->B + B->A
  
}","false","","","","",""
"39","IsBipartite","30","eval_input","2020-04-10 20:43:57","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->A + C->A
  
}","true","","","","",""
"40","ThreeCycle","5","eval_input","2020-04-10 20:44:04","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B -> C + C -> A
  
}","true","","","","",""
"39","IsBipartite","31","eval_input","2020-04-10 20:44:05","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->A + C->A + B->C
  
}","false","","","","",""
"39","IsBipartite","32","eval_input","2020-04-10 20:44:22","inst myInst {
  Node = A + B + C + D + E
  edges = A->A
  
}","false","","","","",""
"40","ThreeCycle","6","eval_input","2020-04-10 20:44:26","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B-> A
  
}","false","","","","",""
"40","ThreeCycle","7","eval_input","2020-04-10 20:44:31","inst myInst {
  Node = A
       + B
       
  edges = A -> B + B-> A
  
}","false","","","","",""
"39","IsBipartite","33","eval_input","2020-04-10 20:44:51","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + C->A + D->E + E->A
  
}","true","","","","",""
"40","ThreeCycle","8","eval_input","2020-04-10 20:44:53","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B-> A + A -> C
  
}","false","","","","",""
"40","ThreeCycle","9","eval_input","2020-04-10 20:45:02","inst myInst {
  Node = A
       + B
       + C
  edges = A -> B + B-> A + C-> A
  
}","false","","","","",""
"39","IsBipartite","34","quiz_answer","2020-04-10 20:45:09","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"39","IsBipartite","35","quiz_answer","2020-04-10 20:45:14","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"39","IsBipartite","36","quiz_answer","2020-04-10 20:45:19","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"39","IsBipartite","37","quiz_answer","2020-04-10 20:45:25","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"40","ThreeCycle","10","eval_input","2020-04-10 20:45:32","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> B + B-> A + C-> A
  
}","false","","","","",""
"39","IsBipartite","38","eval_input","2020-04-10 20:45:34","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + C->A + D->E + E->A
  
}","true","","","","",""
"40","ThreeCycle","11","eval_input","2020-04-10 20:45:37","inst myInst {
  Node = A
       + B
       + C 
       
  edges = A -> B + B-> A + C-> A
  
}","false","","","","",""
"40","ThreeCycle","12","eval_input","2020-04-10 20:45:49","inst myInst {
  Node = A
       + B
       + C 
       
  edges = A -> B + B-> A + C -> B
  
}","false","","","","",""
"39","IsBipartite","39","eval_input","2020-04-10 20:45:52","inst myInst {
  Node = A + B + C 
  edges = A->B + C->A + B->C
  
}","false","","","","",""
"40","ThreeCycle","13","eval_input","2020-04-10 20:45:55","inst myInst {
  Node = A
       + B
       + C 
       
  edges = A -> B + B-> A + B -> C
  
}","false","","","","",""
"39","IsBipartite","40","quiz_answer","2020-04-10 20:46:05","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"39","IsBipartite","41","quiz_answer","2020-04-10 20:46:19","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"39","IsBipartite","42","quiz_answer","2020-04-10 20:46:23","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"39","IsBipartite","43","quiz_answer","2020-04-10 20:46:28","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"39","IsBipartite","44","quiz_answer","2020-04-10 20:46:35","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"40","ThreeCycle","14","eval_input","2020-04-10 20:46:41","inst myInst {
  Node = A
       + B
       + C 
       
  edges = A -> C + B-> A + B -> C
  
}","false","","","","",""
"39","IsBipartite","45","quiz_answer","2020-04-10 20:46:41","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"39","IsBipartite","46","quiz_answer","2020-04-10 20:46:47","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"40","ThreeCycle","15","eval_input","2020-04-10 20:46:51","inst myInst {
  Node = A
       + B
       + C 
       
  edges = A -> C + B-> A + C -> B
  
}","true","","","","",""
"39","IsBipartite","47","quiz_answer","2020-04-10 20:46:54","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"39","IsBipartite","48","quiz_answer","2020-04-10 20:47:00","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"39","IsBipartite","49","final_answer","2020-04-10 20:47:01","","","","","","no cycles of odd length",""
"40","ThreeCycle","16","eval_input","2020-04-10 20:47:16","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> B
  
}","true","","","","",""
"40","ThreeCycle","17","eval_input","2020-04-10 20:47:26","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> B + C-> D
  
}","true","","","","",""
"40","ThreeCycle","18","eval_input","2020-04-10 20:47:32","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> D + C-> D
  
}","false","","","","",""
"40","ThreeCycle","19","eval_input","2020-04-10 20:47:38","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> B + C-> D
  
}","true","","","","",""
"40","ThreeCycle","20","eval_input","2020-04-10 20:48:50","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> D + D -> B
  
}","false","","","","",""
"39","IsDag","50","eval_input","2020-04-10 20:51:53","inst myInst {
  Node = A + B + C 
  edges = A->B + C->A + B->C
  
}","false","","","","",""
"40","ThreeCycle","21","quiz_answer","2020-04-10 20:51:55","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"39","IsDag","51","eval_input","2020-04-10 20:51:59","inst myInst {
  Node = A + B + C 
  edges = A->A
  
}","false","","","","",""
"40","ThreeCycle","22","quiz_answer","2020-04-10 20:52:02","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"39","IsDag","52","eval_input","2020-04-10 20:52:04","inst myInst {
  Node = A + B + C 
  edges = A->B
  
}","true","","","","",""
"39","IsDag","53","eval_input","2020-04-10 20:52:10","inst myInst {
  Node = A + B + C 
  edges = A->B + B->A
  
}","false","","","","",""
"40","ThreeCycle","23","quiz_answer","2020-04-10 20:52:13","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"39","IsDag","54","eval_input","2020-04-10 20:52:25","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C
  
}","true","","","","",""
"40","ThreeCycle","24","quiz_answer","2020-04-10 20:52:25","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"39","IsDag","55","eval_input","2020-04-10 20:52:29","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
  
}","true","","","","",""
"40","ThreeCycle","25","quiz_answer","2020-04-10 20:52:32","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"39","IsDag","56","eval_input","2020-04-10 20:52:44","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->B
  
}","false","","","","",""
"40","ThreeCycle","26","final_answer","2020-04-10 20:52:45","","","","","","A predicate that detects cycles?",""
"39","IsDag","57","eval_input","2020-04-10 20:52:54","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->C
  
}","false","","","","",""
"39","IsDag","58","eval_input","2020-04-10 20:52:57","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  
}","false","","","","",""
"40","IsDag","27","eval_input","2020-04-10 20:53:01","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> D + D -> B
  
}","false","","","","",""
"39","IsDag","59","eval_input","2020-04-10 20:53:09","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->D
  
}","true","","","","",""
"39","IsDag","60","eval_input","2020-04-10 20:53:15","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->B
  
}","false","","","","",""
"39","IsDag","61","quiz_answer","2020-04-10 20:53:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"39","IsDag","62","quiz_answer","2020-04-10 20:53:30","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"39","IsDag","63","quiz_answer","2020-04-10 20:53:35","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"39","IsDag","64","quiz_answer","2020-04-10 20:53:39","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"39","IsDag","65","quiz_answer","2020-04-10 20:53:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"39","IsDag","66","quiz_answer","2020-04-10 20:53:55","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"39","IsDag","67","quiz_answer","2020-04-10 20:54:00","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"39","IsDag","68","quiz_answer","2020-04-10 20:54:06","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"39","IsDag","69","quiz_answer","2020-04-10 20:54:11","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"39","IsDag","70","quiz_answer","2020-04-10 20:54:15","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"39","IsDag","71","quiz_answer","2020-04-10 20:54:20","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"39","IsDag","72","quiz_answer","2020-04-10 20:54:23","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"39","IsDag","73","final_answer","2020-04-10 20:54:24","","","","","","no cycles",""
"39","ThreeCycle","74","eval_input","2020-04-10 20:54:36","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->B
  
}","false","","","","",""
"39","ThreeCycle","75","eval_input","2020-04-10 20:54:43","inst myInst {
  Node = A + B + C + D
  edges = A->B 
  
}","false","","","","",""
"39","ThreeCycle","76","eval_input","2020-04-10 20:54:49","inst myInst {
  Node = A + B + C + D
  edges = A->A
  
}","false","","","","",""
"39","ThreeCycle","77","eval_input","2020-04-10 20:54:53","inst myInst {
  Node = A + B + C + D
  edges = none
  
}","false","","","","",""
"39","ThreeCycle","78","eval_input","2020-04-10 20:55:09","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  
}","false","","","","",""
"39","ThreeCycle","79","eval_input","2020-04-10 20:55:13","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D 
  
}","false","","","","",""
"39","ThreeCycle","80","eval_input","2020-04-10 20:55:17","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C
  
}","false","","","","",""
"39","ThreeCycle","81","eval_input","2020-04-10 20:55:27","inst myInst {
  Node = A + B
  edges = A->B 
  
}","false","","","","",""
"39","ThreeCycle","82","eval_input","2020-04-10 20:55:33","inst myInst {
  Node = A + B
  edges = A->B + B->A
  
}","false","","","","",""
"39","ThreeCycle","83","eval_input","2020-04-10 20:55:39","inst myInst {
  Node = A + B
  edges = A->B + A->A
  
}","false","","","","",""
"39","ThreeCycle","84","eval_input","2020-04-10 20:55:46","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
  
}","false","","","","",""
"39","ThreeCycle","85","eval_input","2020-04-10 20:55:51","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->C
  
}","false","","","","",""
"39","ThreeCycle","86","eval_input","2020-04-10 20:56:34","inst myInst {
  Node = A + B + C
  edges = A->A + B->B + C->C
  
}","false","","","","",""
"39","ThreeCycle","87","eval_input","2020-04-10 20:56:47","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
  
}","true","","","","",""
"39","ThreeCycle","88","eval_input","2020-04-10 20:57:13","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
  
}","false","","","","",""
"39","ThreeCycle","89","eval_input","2020-04-10 20:57:21","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
  
}","false","","","","",""
"39","ThreeCycle","90","eval_input","2020-04-10 20:57:28","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A
  
}","true","","","","",""
"39","ThreeCycle","91","eval_input","2020-04-10 20:57:39","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
  
}","false","","","","",""
"39","ThreeCycle","92","eval_input","2020-04-10 20:57:48","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->A + D->A
  
}","true","","","","",""
"39","ThreeCycle","93","eval_input","2020-04-10 20:58:18","inst myInst {
  Node = A + B + C + D + E
  edges = D->E + E->C + C->D + A->B
  
}","true","","","","",""
"39","ThreeCycle","94","eval_input","2020-04-10 20:58:22","inst myInst {
  Node = A + B + C + D + E
  edges = D->E + E->C + C->D 
  
}","true","","","","",""
"39","ThreeCycle","95","quiz_answer","2020-04-10 20:58:31","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"39","ThreeCycle","96","quiz_answer","2020-04-10 20:58:35","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"39","ThreeCycle","97","quiz_answer","2020-04-10 20:58:37","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"39","ThreeCycle","98","quiz_answer","2020-04-10 20:58:43","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"39","ThreeCycle","99","quiz_answer","2020-04-10 20:58:47","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"39","ThreeCycle","100","quiz_answer","2020-04-10 20:58:50","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"39","ThreeCycle","101","quiz_answer","2020-04-10 20:58:54","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"39","ThreeCycle","102","quiz_answer","2020-04-10 20:58:57","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"39","ThreeCycle","103","final_answer","2020-04-10 20:58:58","","","","","","Cycle of size 3",""
"40","IsDag","28","eval_input","2020-04-10 21:04:39","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> D + D -> B
  
}","false","","","","",""
"40","IsDag","29","eval_input","2020-04-10 21:05:41","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> B
  
}","false","","","","",""
"40","IsDag","30","eval_input","2020-04-10 21:05:49","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> D + D -> A
  
}","false","","","","",""
"40","IsDag","31","eval_input","2020-04-10 21:06:10","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> C + B-> A + C -> D + D -> A+ A-> A
  
}","false","","","","",""
"40","IsDag","32","eval_input","2020-04-10 21:06:20","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> A
  
}","false","","","","",""
"40","IsDag","33","eval_input","2020-04-10 21:06:51","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> D + B-> A + C -> D + D -> A+ A-> A
  
}","false","","","","",""
"40","IsDag","34","eval_input","2020-04-10 21:07:26","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> D + B-> A + D-> B
  
}","false","","","","",""
"40","IsDag","35","quiz_answer","2020-04-10 21:07:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"40","IsDag","36","quiz_answer","2020-04-10 21:07:58","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"40","IsDag","37","final_answer","2020-04-10 21:08:00","","","","","","Not sure, couldn't get a true instance :(",""
"40","IsBipartite","38","eval_input","2020-04-10 21:08:20","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = A -> D + B-> A + D-> B
  
}","false","","","","",""
"40","IsBipartite","39","eval_input","2020-04-10 21:08:28","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges = none
  
}","true","","","","",""
"40","IsBipartite","40","eval_input","2020-04-10 21:08:36","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A-> B
  
}","true","","","","",""
"40","IsBipartite","41","eval_input","2020-04-10 21:08:47","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A-> B + B->A
  
}","true","","","","",""
"40","IsBipartite","42","eval_input","2020-04-10 21:08:57","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A-> B + B-> C
  
}","true","","","","",""
"40","IsBipartite","43","eval_input","2020-04-10 21:09:10","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A-> A
  
}","false","","","","",""
"40","IsBipartite","44","eval_input","2020-04-10 21:09:28","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A-> B + B -> A
  
}","true","","","","",""
"40","IsBipartite","45","eval_input","2020-04-10 21:09:38","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A-> B + B -> C + C->A
  
}","false","","","","",""
"40","IsBipartite","46","eval_input","2020-04-10 21:09:49","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  B -> B
  
}","false","","","","",""
"40","IsBipartite","47","eval_input","2020-04-10 21:10:00","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> A
  
}","false","","","","",""
"40","IsBipartite","48","eval_input","2020-04-10 21:10:10","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> B + B-> A
  
}","true","","","","",""
"40","IsBipartite","49","eval_input","2020-04-10 21:16:43","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> B + B-> C + C -> A
  
}","false","","","","",""
"40","IsBipartite","50","eval_input","2020-04-10 21:17:17","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> B + B-> C + D -> A + C -> D
  
}","true","","","","",""
"40","IsBipartite","51","eval_input","2020-04-10 21:17:32","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> B + B-> C + D -> A + C -> D + A-> D
  
}","true","","","","",""
"40","IsBipartite","52","eval_input","2020-04-10 21:18:02","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> A
  
}","false","","","","",""
"40","IsBipartite","53","eval_input","2020-04-10 21:18:10","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> C
  
}","true","","","","",""
"40","IsBipartite","54","eval_input","2020-04-10 21:18:25","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> C + C-> D
  
}","true","","","","",""
"40","IsBipartite","55","eval_input","2020-04-10 21:18:50","inst myInst {
  Node = A
       + B
       + C 
       + D
  edges =  A -> C + C-> D + D->B
  
}","true","","","","",""
"40","IsBipartite","56","quiz_answer","2020-04-10 21:19:38","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"40","IsBipartite","57","quiz_answer","2020-04-10 21:19:46","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"40","IsBipartite","58","quiz_answer","2020-04-10 21:19:53","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"40","IsBipartite","59","quiz_answer","2020-04-10 21:20:02","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"40","IsBipartite","60","final_answer","2020-04-10 21:20:10","","","","","","returns false when there are no cycles with 3 or 1 nodes",""
"41","ThreeCycle","0","eval_input","2020-04-11 15:41:40","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"41","ThreeCycle","1","eval_input","2020-04-11 15:41:53","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"41","ThreeCycle","2","eval_input","2020-04-11 15:42:11","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"41","ThreeCycle","3","eval_input","2020-04-11 15:42:18","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","false","","","","",""
"41","ThreeCycle","4","eval_input","2020-04-11 15:43:51","inst myInst {
  Node = A
       + B
  edges = A->B + B->A
}","false","","","","",""
"41","ThreeCycle","5","eval_input","2020-04-11 15:43:55","inst myInst {
  Node = A
       + B
  edges = A->B
}","false","","","","",""
"41","ThreeCycle","6","eval_input","2020-04-11 15:44:15","inst myInst {
  Node = A
       + B
  edges = none
}","false","","","","",""
"41","ThreeCycle","7","eval_input","2020-04-11 15:45:07","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"41","ThreeCycle","8","quiz_answer","2020-04-11 15:45:49","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"41","ThreeCycle","9","eval_input","2020-04-11 15:46:23","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"41","ThreeCycle","10","eval_input","2020-04-11 15:46:36","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"41","ThreeCycle","11","eval_input","2020-04-11 15:47:08","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"41","ThreeCycle","12","quiz_answer","2020-04-11 15:47:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"41","ThreeCycle","13","quiz_answer","2020-04-11 15:47:29","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"41","ThreeCycle","14","quiz_answer","2020-04-11 15:47:33","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"41","ThreeCycle","15","quiz_answer","2020-04-11 15:47:40","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"41","ThreeCycle","16","quiz_answer","2020-04-11 15:47:44","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"41","ThreeCycle","17","quiz_answer","2020-04-11 15:47:52","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"41","ThreeCycle","18","quiz_answer","2020-04-11 15:48:01","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"41","ThreeCycle","19","quiz_answer","2020-04-11 15:48:09","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"41","ThreeCycle","20","final_answer","2020-04-11 15:48:11","","","","","","must be a 3 node cycle",""
"41","IsDag","21","eval_input","2020-04-11 15:48:36","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"41","IsDag","22","eval_input","2020-04-11 15:49:13","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"41","IsDag","23","eval_input","2020-04-11 15:49:24","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"41","IsDag","24","eval_input","2020-04-11 15:49:32","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B
}","true","","","","",""
"41","IsDag","25","eval_input","2020-04-11 15:49:35","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->C
}","true","","","","",""
"41","IsDag","26","eval_input","2020-04-11 15:49:42","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + B->C
}","true","","","","",""
"41","IsDag","27","eval_input","2020-04-11 15:50:00","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"41","IsDag","28","eval_input","2020-04-11 15:50:08","inst myInst {
  Node = A
       + B
  edges = A->B + B->A
}","false","","","","",""
"41","IsDag","29","quiz_answer","2020-04-11 15:50:30","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"41","IsDag","30","quiz_answer","2020-04-11 15:50:34","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"41","IsDag","31","quiz_answer","2020-04-11 15:50:38","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"41","IsDag","32","quiz_answer","2020-04-11 15:50:47","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"41","IsDag","33","quiz_answer","2020-04-11 15:50:53","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"41","IsDag","34","quiz_answer","2020-04-11 15:50:57","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"41","IsDag","35","quiz_answer","2020-04-11 15:51:03","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"41","IsDag","36","quiz_answer","2020-04-11 15:51:10","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"41","IsDag","37","final_answer","2020-04-11 15:51:11","","","","","","returns false when there is a cycle, true otherwise",""
"41","IsBipartite","38","eval_input","2020-04-11 15:51:26","inst myInst {
  Node = A
       + B
  edges = A->B + B->A
}","true","","","","",""
"41","IsBipartite","39","eval_input","2020-04-11 15:51:46","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"41","IsBipartite","40","eval_input","2020-04-11 15:51:52","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"41","IsBipartite","41","eval_input","2020-04-11 15:52:01","inst myInst {
  Node = A
       + B
  edges = none
}","true","","","","",""
"41","IsBipartite","42","eval_input","2020-04-11 15:52:33","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"41","IsBipartite","43","quiz_answer","2020-04-11 15:53:08","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"41","IsBipartite","44","quiz_answer","2020-04-11 15:53:12","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"41","IsBipartite","45","quiz_answer","2020-04-11 15:53:15","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"41","IsBipartite","46","quiz_answer","2020-04-11 15:53:19","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"41","IsBipartite","47","quiz_answer","2020-04-11 15:53:22","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"41","IsBipartite","48","quiz_answer","2020-04-11 15:53:25","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"41","IsBipartite","49","quiz_answer","2020-04-11 15:53:30","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"41","IsBipartite","50","quiz_answer","2020-04-11 15:53:34","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"41","IsBipartite","51","final_answer","2020-04-11 15:53:35","","","","","","false if there is a cycle with an odd number of nodes, true otherwise",""
"42","IsBipartite","0","eval_input","2020-04-11 16:15:59","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"42","IsBipartite","1","eval_input","2020-04-11 16:16:13","inst myInst {
  Node = A+ B + C
  edges = A -> B
}","true","","","","",""
"42","IsBipartite","2","eval_input","2020-04-11 16:16:20","inst myInst {
  Node = A+ B + C
  edges = A -> B + B->C
}","true","","","","",""
"42","IsBipartite","3","eval_input","2020-04-11 16:16:28","inst myInst {
  Node = A+ B + C
  edges = A -> B + B->C + A->C
}","true","","","","",""
"42","IsBipartite","4","eval_input","2020-04-11 16:16:35","inst myInst {
  Node = A+ B 
  edges = A -> B
}","true","","","","",""
"42","IsBipartite","5","eval_input","2020-04-11 16:16:39","inst myInst {
  Node = A+ B 
  edges = A -> B + B->A
}","true","","","","",""
"42","IsBipartite","6","eval_input","2020-04-11 16:16:45","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"42","IsBipartite","7","eval_input","2020-04-11 16:16:53","inst myInst {
  Node = A + B
  edges = none
}","true","","","","",""
"42","IsBipartite","8","eval_input","2020-04-11 16:16:59","inst myInst {
  Node = A + B
  edges = B->A
}","true","","","","",""
"42","IsBipartite","9","eval_input","2020-04-11 16:17:10","inst myInst {
  Node = A + B
  edges = B->A + A->B
}","true","","","","",""
"42","IsBipartite","10","eval_input","2020-04-11 16:17:24","inst myInst {
  Node = A + B + C
  edges = B->A + A->B
}","true","","","","",""
"42","IsBipartite","11","eval_input","2020-04-11 16:17:30","inst myInst {
  Node = A + B + C
  edges = B->A + A->B + C->C
}","false","","","","",""
"42","IsBipartite","12","eval_input","2020-04-11 16:17:34","inst myInst {
  Node = A + B + C
  edges = B->A + A-> A
}","false","","","","",""
"42","IsBipartite","13","eval_input","2020-04-11 16:17:38","inst myInst {
  Node = A + B + C
  edges = B->B
}","false","","","","",""
"42","IsBipartite","14","eval_input","2020-04-11 16:17:43","inst myInst {
  Node = A + B + C
  edges = B->B + A->A
}","false","","","","",""
"42","IsBipartite","15","quiz_answer","2020-04-11 16:18:15","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"42","IsBipartite","16","quiz_answer","2020-04-11 16:18:18","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"42","IsBipartite","17","quiz_answer","2020-04-11 16:18:21","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"42","IsBipartite","18","quiz_answer","2020-04-11 16:18:25","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"42","IsBipartite","19","quiz_answer","2020-04-11 16:18:28","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"42","IsBipartite","20","quiz_answer","2020-04-11 16:18:53","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"42","IsBipartite","21","quiz_answer","2020-04-11 16:18:56","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"42","IsBipartite","22","quiz_answer","2020-04-11 16:18:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"42","IsBipartite","23","quiz_answer","2020-04-11 16:19:03","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"42","IsBipartite","24","quiz_answer","2020-04-11 16:19:09","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"42","IsBipartite","25","quiz_answer","2020-04-11 16:19:20","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"42","IsBipartite","26","quiz_answer","2020-04-11 16:19:26","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"42","IsBipartite","27","final_answer","2020-04-11 16:19:31","","","","","","If there is a node pointing to itself (X->X), return false.",""
"42","IsDag","28","eval_input","2020-04-11 16:19:48","inst myInst {
  Node = A + B + C
  edges = B->B + A->A
}","false","","","","",""
"42","IsDag","29","eval_input","2020-04-11 16:19:52","inst myInst {
  Node = A + B + C
  edges = B->B 
}","false","","","","",""
"42","IsDag","30","eval_input","2020-04-11 16:19:56","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"42","IsDag","31","eval_input","2020-04-11 16:20:01","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"42","IsDag","32","eval_input","2020-04-11 16:20:01","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"42","IsDag","33","eval_input","2020-04-11 16:20:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"42","IsDag","34","eval_input","2020-04-11 16:20:19","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"42","IsDag","35","quiz_answer","2020-04-11 16:20:31","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"42","IsDag","36","quiz_answer","2020-04-11 16:20:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"42","IsDag","37","quiz_answer","2020-04-11 16:21:02","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"42","IsDag","38","quiz_answer","2020-04-11 16:21:05","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"42","IsDag","39","quiz_answer","2020-04-11 16:21:29","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"42","IsDag","40","quiz_answer","2020-04-11 16:21:35","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"42","IsDag","41","quiz_answer","2020-04-11 16:21:40","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"42","IsDag","42","quiz_answer","2020-04-11 16:21:47","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"42","IsDag","43","quiz_answer","2020-04-11 16:21:52","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"42","IsDag","44","final_answer","2020-04-11 16:21:54","","","","","","false when there's a cycle",""
"42","ThreeCycle","45","eval_input","2020-04-11 16:22:24","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"42","ThreeCycle","46","eval_input","2020-04-11 16:22:29","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"42","ThreeCycle","47","eval_input","2020-04-11 16:22:35","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"42","ThreeCycle","48","eval_input","2020-04-11 16:22:43","inst myInst {
  Node = A + B + C
  edges = A -> C + C->A
}","false","","","","",""
"42","ThreeCycle","49","eval_input","2020-04-11 16:22:51","inst myInst {
  Node = A + B + C
  edges = A -> C + B ->C + C->A
}","false","","","","",""
"42","ThreeCycle","50","eval_input","2020-04-11 16:22:58","inst myInst {
  Node = A + B + C
  edges = A->C + B->C
}","false","","","","",""
"42","ThreeCycle","51","eval_input","2020-04-11 16:23:02","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"42","ThreeCycle","52","eval_input","2020-04-11 16:23:06","inst myInst {
  Node = A + B + C
  edges = A->A + B->B
}","false","","","","",""
"42","ThreeCycle","53","eval_input","2020-04-11 16:23:10","inst myInst {
  Node = A + B + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"42","ThreeCycle","54","eval_input","2020-04-11 16:23:26","inst myInst {
  Node = A + B + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"42","ThreeCycle","55","eval_input","2020-04-11 16:23:32","inst myInst {
  Node = A + B + C
  edges = A->C + B->C
}","false","","","","",""
"42","ThreeCycle","56","eval_input","2020-04-11 16:23:41","inst myInst {
  Node = A + B + C
  edges = A->C + B->C + C->A + C->B
}","false","","","","",""
"42","ThreeCycle","57","eval_input","2020-04-11 16:23:49","inst myInst {
  Node = A + B + C
  edges = A->A + B->B
}","false","","","","",""
"42","ThreeCycle","58","eval_input","2020-04-11 16:23:58","inst myInst {
  Node = A + B 
  edges = A->A + B->B
}","false","","","","",""
"42","ThreeCycle","59","eval_input","2020-04-11 16:24:05","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"42","ThreeCycle","60","eval_input","2020-04-11 16:24:08","inst myInst {
  Node = A + B 
  edges = A->A + B->B
}","false","","","","",""
"42","ThreeCycle","61","eval_input","2020-04-11 16:24:28","inst myInst {
  Node = A + B  + C
  edges = A->C + C->B + B->A
}","true","","","","",""
"42","ThreeCycle","62","quiz_answer","2020-04-11 16:24:41","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"42","ThreeCycle","63","quiz_answer","2020-04-11 16:24:45","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"42","ThreeCycle","64","quiz_answer","2020-04-11 16:24:49","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"42","ThreeCycle","65","eval_input","2020-04-11 16:25:02","inst myInst {
  Node = A + B  + C
  edges = A->B + B->A
}","false","","","","",""
"42","ThreeCycle","66","quiz_answer","2020-04-11 16:25:13","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"42","ThreeCycle","67","quiz_answer","2020-04-11 16:25:16","inst myInst {
      Node = A
      edges = none
    }","true","1","false","false","",""
"42","ThreeCycle","68","eval_input","2020-04-11 16:25:23","inst myInst {
  Node = A + B  + C
  edges = A->A
}","false","","","","",""
"42","ThreeCycle","69","eval_input","2020-04-11 16:25:33","inst myInst {
  Node = A + B  + C
  edges = A->B  + B->C + C->A
}","true","","","","",""
"42","ThreeCycle","70","eval_input","2020-04-11 16:25:38","inst myInst {
  Node = A + B  + C
  edges = A->B  + B->C + C->A + C->B
}","true","","","","",""
"42","ThreeCycle","71","eval_input","2020-04-11 16:25:51","inst myInst {
  Node = A + B  + C
  edges = A->B  + C->A + C->B
}","false","","","","",""
"42","ThreeCycle","72","eval_input","2020-04-11 16:26:02","inst myInst {
  Node = A + B  + C
  edges = A->A
}","false","","","","",""
"42","ThreeCycle","73","eval_input","2020-04-11 16:26:05","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"42","ThreeCycle","74","eval_input","2020-04-11 16:26:21","inst myInst {
  Node = A + B
  edges = A->B  + B->A
}","false","","","","",""
"42","ThreeCycle","75","quiz_answer","2020-04-11 16:26:32","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"42","ThreeCycle","76","quiz_answer","2020-04-11 16:26:36","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"42","ThreeCycle","77","quiz_answer","2020-04-11 16:26:39","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"42","ThreeCycle","78","quiz_answer","2020-04-11 16:26:46","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"42","ThreeCycle","79","quiz_answer","2020-04-11 16:26:50","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"42","ThreeCycle","80","quiz_answer","2020-04-11 16:26:56","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"42","ThreeCycle","81","quiz_answer","2020-04-11 16:27:01","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","false","false","",""
"42","ThreeCycle","82","final_answer","2020-04-11 16:27:02","","","","","","exists a ring > 3",""
"43","ThreeCycle","0","eval_input","2020-04-11 17:39:40","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"43","ThreeCycle","1","quiz_answer","2020-04-11 17:41:02","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"43","ThreeCycle","2","eval_input","2020-04-11 17:42:25","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"43","ThreeCycle","3","eval_input","2020-04-11 17:42:28","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"43","ThreeCycle","4","eval_input","2020-04-11 17:42:28","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"43","IsBipartite","5","eval_input","2020-04-11 17:42:59","inst myInst {
      Node = A 
      edges = A->A
    }","false","","","","",""
"43","IsBipartite","6","eval_input","2020-04-11 17:43:04","inst myInst {
  Node = A 
  edges = A->A
}","false","","","","",""
"43","ThreeCycle","7","quiz_answer","2020-04-11 17:43:08","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsBipartite","8","eval_input","2020-04-11 17:43:19","inst myInst {
  Node = A 
  edges = none
}","true","","","","",""
"43","ThreeCycle","9","quiz_answer","2020-04-11 17:43:22","inst myInst {
      Node = A
      edges = none
    }","true","1","false","false","",""
"43","ThreeCycle","10","eval_input","2020-04-11 17:43:41","inst myInst {
  Node = A 
  edges = none
}","false","","","","",""
"43","IsBipartite","11","quiz_answer","2020-04-11 17:43:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsBipartite","12","quiz_answer","2020-04-11 17:44:04","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"43","IsBipartite","13","eval_input","2020-04-11 17:44:10","inst myInst {
  Node = A 
  edges = none
}","true","","","","",""
"43","IsBipartite","14","quiz_answer","2020-04-11 17:44:18","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsBipartite","15","quiz_answer","2020-04-11 17:44:22","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","ThreeCycle","16","eval_input","2020-04-11 17:44:49","inst myInst {
  Node = A + B 
  edges = A->B + B->A
}","false","","","","",""
"43","ThreeCycle","17","eval_input","2020-04-11 17:44:59","inst myInst {
  Node = A + B 
  edges = A->B + B->A
}","false","","","","",""
"43","IsBipartite","18","quiz_answer","2020-04-11 17:45:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"43","IsBipartite","19","eval_input","2020-04-11 17:45:13","inst myInst {
  Node = A + B 
  edges = A->B + B->A
}","true","","","","",""
"43","IsBipartite","20","quiz_answer","2020-04-11 17:45:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsBipartite","21","quiz_answer","2020-04-11 17:45:27","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","IsBipartite","22","quiz_answer","2020-04-11 17:45:30","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"43","IsBipartite","23","quiz_answer","2020-04-11 17:45:37","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"43","IsBipartite","24","quiz_answer","2020-04-11 17:45:44","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"43","IsBipartite","25","eval_input","2020-04-11 17:46:08","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"43","IsBipartite","26","quiz_answer","2020-04-11 17:46:22","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsBipartite","27","quiz_answer","2020-04-11 17:46:26","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","IsBipartite","28","quiz_answer","2020-04-11 17:46:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"43","IsBipartite","29","quiz_answer","2020-04-11 17:46:33","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"43","IsBipartite","30","quiz_answer","2020-04-11 17:46:42","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"43","IsBipartite","31","quiz_answer","2020-04-11 17:47:09","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"43","IsBipartite","32","quiz_answer","2020-04-11 17:47:16","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"43","IsBipartite","33","quiz_answer","2020-04-11 17:47:46","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsBipartite","34","quiz_answer","2020-04-11 17:47:49","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","IsBipartite","35","quiz_answer","2020-04-11 17:48:02","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"43","IsBipartite","36","quiz_answer","2020-04-11 17:48:18","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"43","IsBipartite","37","quiz_answer","2020-04-11 17:48:30","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"43","IsBipartite","38","quiz_answer","2020-04-11 17:48:44","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","true","false","",""
"43","IsBipartite","39","quiz_answer","2020-04-11 17:49:01","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsBipartite","40","quiz_answer","2020-04-11 17:49:06","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","IsBipartite","41","quiz_answer","2020-04-11 17:49:09","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"43","IsBipartite","42","quiz_answer","2020-04-11 17:49:12","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"43","IsBipartite","43","quiz_answer","2020-04-11 17:49:15","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"43","IsBipartite","44","quiz_answer","2020-04-11 17:49:19","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"43","IsBipartite","45","quiz_answer","2020-04-11 17:49:36","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"43","IsBipartite","46","quiz_answer","2020-04-11 17:49:54","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"43","IsBipartite","47","final_answer","2020-04-11 17:49:56","","","","","","true",""
"43","IsDag","48","eval_input","2020-04-11 17:51:02","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"43","ThreeCycle","49","eval_input","2020-04-11 17:57:54","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"43","IsDag","50","quiz_answer","2020-04-11 17:58:09","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsDag","51","quiz_answer","2020-04-11 17:58:12","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","IsDag","52","quiz_answer","2020-04-11 17:58:17","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","false","false","",""
"43","IsDag","53","quiz_answer","2020-04-11 17:58:35","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"43","IsDag","54","quiz_answer","2020-04-11 17:58:45","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsDag","55","quiz_answer","2020-04-11 17:58:49","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","IsDag","56","quiz_answer","2020-04-11 17:58:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"43","IsDag","57","quiz_answer","2020-04-11 17:58:57","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"43","IsDag","58","quiz_answer","2020-04-11 17:59:05","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"43","IsDag","59","quiz_answer","2020-04-11 17:59:24","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"43","IsDag","60","quiz_answer","2020-04-11 17:59:30","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","false","false","",""
"43","IsDag","61","quiz_answer","2020-04-11 17:59:57","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","IsDag","62","quiz_answer","2020-04-11 18:00:00","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"43","IsDag","63","quiz_answer","2020-04-11 18:00:07","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"43","IsDag","64","quiz_answer","2020-04-11 18:00:14","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"43","IsDag","65","quiz_answer","2020-04-11 18:00:18","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"43","IsDag","66","quiz_answer","2020-04-11 18:00:23","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"43","IsDag","67","quiz_answer","2020-04-11 18:00:30","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"43","IsDag","68","quiz_answer","2020-04-11 18:00:45","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"43","IsDag","69","final_answer","2020-04-11 18:00:50","","","","","","?",""
"43","ThreeCycle","70","eval_input","2020-04-11 18:02:43","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","","","","",""
"43","ThreeCycle","71","eval_input","2020-04-11 18:02:58","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","","","","",""
"43","ThreeCycle","72","eval_input","2020-04-11 18:03:11","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","","","","",""
"43","ThreeCycle","73","eval_input","2020-04-11 18:03:34","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + A->C
    }","false","","","","",""
"43","ThreeCycle","74","eval_input","2020-04-11 18:03:48","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","","","","",""
"43","ThreeCycle","75","eval_input","2020-04-11 18:03:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","","","","",""
"43","ThreeCycle","76","eval_input","2020-04-11 18:04:09","inst myInst {
      Node = A
      edges = A->A
    }","false","","","","",""
"43","ThreeCycle","77","eval_input","2020-04-11 18:04:15","inst myInst {
      Node = A
      edges = none
    }","false","","","","",""
"43","ThreeCycle","78","quiz_answer","2020-04-11 18:05:11","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"43","ThreeCycle","79","quiz_answer","2020-04-11 18:05:15","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"43","ThreeCycle","80","quiz_answer","2020-04-11 18:05:20","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"43","ThreeCycle","81","quiz_answer","2020-04-11 18:05:25","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"43","ThreeCycle","82","quiz_answer","2020-04-11 18:05:28","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"43","ThreeCycle","83","quiz_answer","2020-04-11 18:05:34","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"43","ThreeCycle","84","quiz_answer","2020-04-11 18:05:39","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"43","ThreeCycle","85","quiz_answer","2020-04-11 18:05:43","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"43","ThreeCycle","86","final_answer","2020-04-11 18:05:44","","","","","","?",""
"44","IsDag","0","eval_input","2020-04-11 21:15:45","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"44","IsDag","1","eval_input","2020-04-11 21:15:52","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"44","IsDag","2","eval_input","2020-04-11 21:17:14","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B
}","true","","","","",""
"44","IsDag","3","eval_input","2020-04-11 21:17:16","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B
}","true","","","","",""
"44","IsDag","4","eval_input","2020-04-11 21:17:39","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B
  
}","true","","","","",""
"44","IsDag","5","eval_input","2020-04-11 21:18:21","inst myInst {
  Node = A 
       + B
       + C
  edges = A->A
  
}","false","","","","",""
"44","IsDag","6","eval_input","2020-04-11 21:18:54","inst myInst {
  Node = A 
       + B
       + C
  edges = A->A
  
}","false","","","","",""
"44","IsDag","7","eval_input","2020-04-11 21:19:02","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B
  
}","true","","","","",""
"44","IsDag","8","eval_input","2020-04-11 21:19:31","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C
  
}","true","","","","",""
"44","IsDag","9","eval_input","2020-04-11 21:28:02","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C + C->B
  
}","false","","","","",""
"44","IsDag","10","eval_input","2020-04-11 21:28:22","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C + A->B
  
}","true","","","","",""
"44","IsDag","11","eval_input","2020-04-11 21:29:05","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C + A->B + B->A
  
}","false","","","","",""
"44","IsDag","12","eval_input","2020-04-11 21:29:14","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C + A->B + A->C
  
}","true","","","","",""
"44","IsDag","13","eval_input","2020-04-11 21:29:54","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C + A->B + A->C + A->A
  
}","false","","","","",""
"44","IsDag","14","eval_input","2020-04-11 21:31:22","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C + A->B + A->C + B->A
  
}","false","","","","",""
"44","IsDag","15","eval_input","2020-04-11 21:31:30","inst myInst {
  Node = A 
       + B
       + C
  edges = B->C + A->B + A->C
  
}","true","","","","",""
"44","IsDag","16","eval_input","2020-04-11 21:32:25","inst myInst {
  Node = A 
       + B
       + C
       + D
  edges = B->C + A->B + A->C + A->D
  
}","true","","","","",""
"44","IsDag","17","eval_input","2020-04-11 21:32:34","inst myInst {
  Node = A 
       + B
       + C
       + D
  edges = B->C + A->B + A->C + A->D + B->D
  
}","true","","","","",""
"44","IsDag","18","eval_input","2020-04-11 21:32:48","inst myInst {
  Node = A 
       + B
       + C
       + D
  edges = B->C + A->B + A->C + A->D + B->D + D->A
  
}","false","","","","",""
"44","IsDag","19","eval_input","2020-04-11 21:32:55","inst myInst {
  Node = A 
       + B
       + C
       + D
  edges = B->C + A->B + A->C + A->D + B->D
  
}","true","","","","",""
"44","IsDag","20","eval_input","2020-04-11 21:33:40","inst myInst {
  Node = A 
       + B
       + C
       + D
  edges = B->C + A->B + A->C + A->D + B->D
  
}","true","","","","",""
"44","IsDag","21","quiz_answer","2020-04-11 21:37:34","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"44","IsDag","22","quiz_answer","2020-04-11 21:37:59","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsDag","23","quiz_answer","2020-04-11 21:38:38","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"44","IsDag","24","quiz_answer","2020-04-11 21:39:28","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsDag","25","quiz_answer","2020-04-11 21:39:39","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"44","IsDag","26","quiz_answer","2020-04-11 21:39:46","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"44","IsDag","27","quiz_answer","2020-04-11 21:40:12","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"44","IsDag","28","quiz_answer","2020-04-11 21:40:19","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"44","IsDag","29","final_answer","2020-04-11 21:40:56","","","","","","transitive closure without identity",""
"45","ThreeCycle","0","eval_input","2020-04-11 21:41:35","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"45","ThreeCycle","1","eval_input","2020-04-11 21:41:47","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","false","","","","",""
"45","ThreeCycle","2","eval_input","2020-04-11 21:41:54","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"45","ThreeCycle","3","eval_input","2020-04-11 21:41:55","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","false","","","","",""
"45","ThreeCycle","4","eval_input","2020-04-11 21:42:01","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"45","ThreeCycle","5","eval_input","2020-04-11 21:42:10","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->A
}","false","","","","",""
"45","ThreeCycle","6","eval_input","2020-04-11 21:42:17","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->A + C-> B
}","false","","","","",""
"45","ThreeCycle","7","eval_input","2020-04-11 21:42:25","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"45","ThreeCycle","8","eval_input","2020-04-11 21:42:38","inst myInst {
  Node = A
       + B
       + C
  edges = A->A + B->B + C->C
}","false","","","","",""
"44","ThreeCycle","30","eval_input","2020-04-11 21:42:45","inst myInst {
  Node = A 
       + B
       + C
       + D
  edges = B->C + A->B + A->C + A->D + B->D
  
}","false","","","","",""
"45","ThreeCycle","9","eval_input","2020-04-11 21:42:53","inst myInst {
  Node = A
       + B
       
  edges = A->B + A->A
}","false","","","","",""
"45","ThreeCycle","10","eval_input","2020-04-11 21:43:00","inst myInst {
  Node = A
       + B
       
  edges = A->B + B->A
}","false","","","","",""
"45","ThreeCycle","11","eval_input","2020-04-11 21:43:23","inst myInst {
  Node = A
       + B
       + C
       + D
       
  edges = A->B + B->C + C->A
}","true","","","","",""
"44","ThreeCycle","31","eval_input","2020-04-11 21:43:49","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->C + C->A
  
}","true","","","","",""
"45","ThreeCycle","12","eval_input","2020-04-11 21:43:54","inst myInst {
  Node = A
       + B
       + C
       + D
       
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"45","ThreeCycle","13","eval_input","2020-04-11 21:44:21","inst myInst {
  Node = A
       + B
       + C
       + D
       
  edges = A->B + B->A + A->A + B->B
}","false","","","","",""
"44","ThreeCycle","32","eval_input","2020-04-11 21:44:38","inst myInst {
  Node = A 
       + B
       + C
  edges = C->A + A->B + B->C
  
}","true","","","","",""
"44","ThreeCycle","33","eval_input","2020-04-11 21:44:45","inst myInst {
  Node = A 
       + B
       + C
  edges = C->A + A->B
  
}","false","","","","",""
"45","ThreeCycle","14","eval_input","2020-04-11 21:45:10","inst myInst {
  Node = A
       + B
       + C
       + D
       
  edges = A->B + B->C + C->A + C->D + D->B + D->A
}","true","","","","",""
"44","ThreeCycle","34","quiz_answer","2020-04-11 21:45:12","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"44","ThreeCycle","35","quiz_answer","2020-04-11 21:45:41","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","ThreeCycle","36","quiz_answer","2020-04-11 21:45:48","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"44","ThreeCycle","37","quiz_answer","2020-04-11 21:45:54","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"44","ThreeCycle","38","quiz_answer","2020-04-11 21:46:22","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"44","ThreeCycle","39","quiz_answer","2020-04-11 21:46:30","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"44","ThreeCycle","40","quiz_answer","2020-04-11 21:46:41","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"44","ThreeCycle","41","quiz_answer","2020-04-11 21:47:54","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","false","false","",""
"45","ThreeCycle","15","eval_input","2020-04-11 21:48:04","inst myInst {
  Node = A
       + B
       + C
       + D
       
  edges = A->B + A->C + A->D + B->C + B->D + C->D
}","false","","","","",""
"44","ThreeCycle","42","quiz_answer","2020-04-11 21:48:13","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","ThreeCycle","43","quiz_answer","2020-04-11 21:48:17","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"44","ThreeCycle","44","quiz_answer","2020-04-11 21:48:22","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"44","ThreeCycle","45","quiz_answer","2020-04-11 21:48:31","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"44","ThreeCycle","46","quiz_answer","2020-04-11 21:48:37","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"44","ThreeCycle","47","quiz_answer","2020-04-11 21:48:42","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"44","ThreeCycle","48","quiz_answer","2020-04-11 21:48:46","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"45","ThreeCycle","16","eval_input","2020-04-11 21:48:53","inst myInst {
  Node = A
       + B
       + C
       + D
       
  edges = A->B + B->C + C->A
}","true","","","","",""
"44","ThreeCycle","49","quiz_answer","2020-04-11 21:48:53","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"44","ThreeCycle","50","final_answer","2020-04-11 21:48:55","","","","","","cycle but with three nodes",""
"44","IsBipartite","51","eval_input","2020-04-11 21:49:21","inst myInst {
  Node = A 
       + B
       + C
  edges = C->A + A->B
  
}","true","","","","",""
"44","IsBipartite","52","eval_input","2020-04-11 21:49:49","inst myInst {
  Node = A 
       + B
       + C
  edges = A->A
  
}","false","","","","",""
"44","IsBipartite","53","eval_input","2020-04-11 21:50:17","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->A
  
}","true","","","","",""
"45","ThreeCycle","17","eval_input","2020-04-11 21:50:37","inst myInst {
  Node = A
       + B
       + C
       + D
       
  edges = A->A
}","false","","","","",""
"45","ThreeCycle","18","eval_input","2020-04-11 21:51:06","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"44","IsBipartite","54","eval_input","2020-04-11 21:51:13","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->A + A->C + C->A
  
}","true","","","","",""
"44","IsBipartite","55","eval_input","2020-04-11 21:51:25","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->A + A->C + C->A + B->C
  
}","false","","","","",""
"44","IsBipartite","56","eval_input","2020-04-11 21:51:32","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->A + A->C + C->A
  
}","true","","","","",""
"45","ThreeCycle","19","eval_input","2020-04-11 21:51:42","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C
}","false","","","","",""
"44","IsBipartite","57","eval_input","2020-04-11 21:51:44","inst myInst {
  Node = A 
       + B
       + C
  edges = A->A
  
}","false","","","","",""
"44","IsBipartite","58","eval_input","2020-04-11 21:51:50","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B
  
}","true","","","","",""
"45","ThreeCycle","20","eval_input","2020-04-11 21:51:50","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->A
}","true","","","","",""
"45","ThreeCycle","21","eval_input","2020-04-11 21:51:58","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->A + D->C
}","true","","","","",""
"45","ThreeCycle","22","eval_input","2020-04-11 21:52:34","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + A->A
}","false","","","","",""
"44","IsBipartite","59","eval_input","2020-04-11 21:53:34","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->C
  
}","true","","","","",""
"45","ThreeCycle","23","eval_input","2020-04-11 21:53:48","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + B->C + C->A
}","true","","","","",""
"44","IsBipartite","60","eval_input","2020-04-11 21:53:57","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->C + C->B
  
}","true","","","","",""
"45","ThreeCycle","24","eval_input","2020-04-11 21:53:58","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + B->C + C->A + C->B
}","true","","","","",""
"45","ThreeCycle","25","eval_input","2020-04-11 21:54:09","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + B->C + C->A + C->B + A->C
}","true","","","","",""
"44","IsBipartite","61","quiz_answer","2020-04-11 21:54:33","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsBipartite","62","quiz_answer","2020-04-11 21:54:39","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"44","IsBipartite","63","eval_input","2020-04-11 21:56:34","inst myInst {
  Node = A 
       + B
       + C
  edges = A->B + B->C + C->A
  
}","false","","","","",""
"45","ThreeCycle","26","quiz_answer","2020-04-11 21:56:47","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"45","ThreeCycle","27","quiz_answer","2020-04-11 21:56:53","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"45","ThreeCycle","28","quiz_answer","2020-04-11 21:56:59","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"45","ThreeCycle","29","quiz_answer","2020-04-11 21:57:05","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"45","ThreeCycle","30","quiz_answer","2020-04-11 21:57:12","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"44","IsBipartite","64","quiz_answer","2020-04-11 21:57:14","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"45","ThreeCycle","31","quiz_answer","2020-04-11 21:57:17","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"44","IsBipartite","65","quiz_answer","2020-04-11 21:57:21","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"45","ThreeCycle","32","quiz_answer","2020-04-11 21:57:22","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"44","IsBipartite","66","quiz_answer","2020-04-11 21:57:29","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"45","ThreeCycle","33","quiz_answer","2020-04-11 21:57:30","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"45","ThreeCycle","34","final_answer","2020-04-11 21:57:31","","","","","","I think that this checks to see if there is a cycle of nodes that is 3 long. I'm not sure because I just have a feeling its a little more but every instance I defined adheres to that",""
"45","IsBipartite","35","eval_input","2020-04-11 21:57:39","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + B->C + C->A + C->B + A->C
}","false","","","","",""
"45","IsBipartite","36","eval_input","2020-04-11 21:57:49","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = none
}","true","","","","",""
"45","IsBipartite","37","eval_input","2020-04-11 21:57:58","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->A
}","false","","","","",""
"45","IsBipartite","38","eval_input","2020-04-11 21:58:01","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B
}","true","","","","",""
"45","IsBipartite","39","eval_input","2020-04-11 21:58:06","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C
}","true","","","","",""
"45","IsBipartite","40","eval_input","2020-04-11 21:58:12","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->D
}","true","","","","",""
"45","IsBipartite","41","eval_input","2020-04-11 21:58:20","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"45","IsBipartite","42","eval_input","2020-04-11 21:58:27","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A
}","true","","","","",""
"45","IsBipartite","43","eval_input","2020-04-11 21:58:34","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + B->B
}","false","","","","",""
"45","IsBipartite","44","eval_input","2020-04-11 21:58:37","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + B->C
}","true","","","","",""
"45","IsBipartite","45","eval_input","2020-04-11 21:58:47","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A + B->C + C->A
}","false","","","","",""
"44","IsBipartite","67","quiz_answer","2020-04-11 21:59:39","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsBipartite","68","quiz_answer","2020-04-11 21:59:46","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"44","IsBipartite","69","quiz_answer","2020-04-11 21:59:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"45","IsBipartite","46","eval_input","2020-04-11 21:59:58","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"45","IsBipartite","47","eval_input","2020-04-11 22:00:11","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"45","IsBipartite","48","eval_input","2020-04-11 22:00:20","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->D + D->A + C->A
}","false","","","","",""
"44","IsBipartite","70","quiz_answer","2020-04-11 22:00:25","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsBipartite","71","quiz_answer","2020-04-11 22:00:29","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"44","IsBipartite","72","quiz_answer","2020-04-11 22:00:37","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"45","IsBipartite","49","quiz_answer","2020-04-11 22:00:42","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"45","IsBipartite","50","quiz_answer","2020-04-11 22:00:52","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"45","IsBipartite","51","quiz_answer","2020-04-11 22:00:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"45","IsBipartite","52","quiz_answer","2020-04-11 22:01:05","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"45","IsBipartite","53","final_answer","2020-04-11 22:01:20","","","","","","Checks to see if there are no 3-cycles in graph",""
"45","IsDag","54","eval_input","2020-04-11 22:01:48","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->D + D->A + C->A
}","false","","","","",""
"45","IsDag","55","eval_input","2020-04-11 22:01:54","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = none
}","true","","","","",""
"45","IsDag","56","eval_input","2020-04-11 22:02:03","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B
}","true","","","","",""
"45","IsDag","57","eval_input","2020-04-11 22:02:09","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->A
}","false","","","","",""
"44","IsBipartite","73","quiz_answer","2020-04-11 22:02:16","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"45","IsDag","58","eval_input","2020-04-11 22:02:17","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->A
}","false","","","","",""
"44","IsBipartite","74","quiz_answer","2020-04-11 22:02:20","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"45","IsDag","59","eval_input","2020-04-11 22:02:26","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->A
}","false","","","","",""
"44","IsBipartite","75","quiz_answer","2020-04-11 22:02:27","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"45","IsDag","60","eval_input","2020-04-11 22:02:52","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"45","IsDag","61","eval_input","2020-04-11 22:02:58","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + C->D + D->E + E->A
}","true","","","","",""
"45","IsDag","62","eval_input","2020-04-11 22:03:07","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + C->D + D->E + E->A + C->A
}","true","","","","",""
"45","IsDag","63","eval_input","2020-04-11 22:03:24","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + C->D + D->E + E->A + C->A
          + D->A
}","true","","","","",""
"44","IsBipartite","76","quiz_answer","2020-04-11 22:03:26","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"45","IsDag","64","eval_input","2020-04-11 22:03:33","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + C->D + D->E + E->A + C->A
          + D->A  + A -> C
}","false","","","","",""
"44","IsBipartite","77","quiz_answer","2020-04-11 22:03:43","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsBipartite","78","quiz_answer","2020-04-11 22:03:47","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"45","IsDag","65","quiz_answer","2020-04-11 22:03:49","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsBipartite","79","quiz_answer","2020-04-11 22:03:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"45","IsDag","66","quiz_answer","2020-04-11 22:03:56","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"44","IsBipartite","80","quiz_answer","2020-04-11 22:04:00","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"45","IsDag","67","quiz_answer","2020-04-11 22:04:01","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"45","IsDag","68","quiz_answer","2020-04-11 22:04:08","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"44","IsBipartite","81","quiz_answer","2020-04-11 22:04:08","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"45","IsDag","69","quiz_answer","2020-04-11 22:04:12","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"44","IsBipartite","82","quiz_answer","2020-04-11 22:04:17","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"45","IsDag","70","quiz_answer","2020-04-11 22:04:18","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","true","false","",""
"44","IsBipartite","83","quiz_answer","2020-04-11 22:04:23","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"44","IsBipartite","84","quiz_answer","2020-04-11 22:04:42","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"45","IsDag","71","eval_input","2020-04-11 22:04:42","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + B->C + A->C
}","true","","","","",""
"44","IsBipartite","85","quiz_answer","2020-04-11 22:04:47","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"44","IsBipartite","86","quiz_answer","2020-04-11 22:04:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"45","IsDag","72","eval_input","2020-04-11 22:04:56","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + C->B + A->C
}","true","","","","",""
"44","IsBipartite","87","quiz_answer","2020-04-11 22:04:58","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"44","IsBipartite","88","quiz_answer","2020-04-11 22:05:01","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"44","IsBipartite","89","quiz_answer","2020-04-11 22:05:05","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"45","IsDag","73","quiz_answer","2020-04-11 22:05:06","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"44","IsBipartite","90","quiz_answer","2020-04-11 22:05:11","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"45","IsDag","74","quiz_answer","2020-04-11 22:05:11","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"44","IsBipartite","91","quiz_answer","2020-04-11 22:05:15","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"45","IsDag","75","quiz_answer","2020-04-11 22:05:17","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"45","IsDag","76","quiz_answer","2020-04-11 22:05:27","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"44","IsBipartite","92","quiz_answer","2020-04-11 22:05:43","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"45","IsDag","77","eval_input","2020-04-11 22:06:33","inst myInst {
  Node = A
       + B
       + C
       + D + E
       
  edges = A->B + A->C + B->C
}","true","","","","",""
"44","IsBipartite","93","quiz_answer","2020-04-11 22:07:03","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"44","IsBipartite","94","quiz_answer","2020-04-11 22:07:07","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"44","IsBipartite","95","quiz_answer","2020-04-11 22:07:12","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"44","IsBipartite","96","quiz_answer","2020-04-11 22:07:15","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"44","IsBipartite","97","quiz_answer","2020-04-11 22:07:18","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"44","IsBipartite","98","quiz_answer","2020-04-11 22:07:23","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"44","IsBipartite","99","quiz_answer","2020-04-11 22:07:27","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"44","IsBipartite","100","final_answer","2020-04-11 22:07:28","","","","","","no cycles with odd number of nodes",""
"45","IsDag","78","quiz_answer","2020-04-11 22:08:21","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"45","IsDag","79","quiz_answer","2020-04-11 22:08:25","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"45","IsDag","80","quiz_answer","2020-04-11 22:08:28","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"45","IsDag","81","quiz_answer","2020-04-11 22:08:38","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"45","IsDag","82","quiz_answer","2020-04-11 22:08:45","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"45","IsDag","83","quiz_answer","2020-04-11 22:08:52","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"45","IsDag","84","quiz_answer","2020-04-11 22:09:00","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"45","IsDag","85","quiz_answer","2020-04-11 22:09:06","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"45","IsDag","86","final_answer","2020-04-11 22:09:08","","","","","","acyclic",""
"46","IsDag","0","eval_input","2020-04-11 22:51:17","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"46","IsDag","1","eval_input","2020-04-11 22:51:29","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"46","IsDag","2","eval_input","2020-04-11 22:51:32","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"46","IsDag","3","eval_input","2020-04-11 22:51:41","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"46","IsDag","4","eval_input","2020-04-11 22:51:53","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"46","IsDag","5","eval_input","2020-04-11 22:52:04","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"46","IsDag","6","eval_input","2020-04-11 22:52:13","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"46","IsDag","7","eval_input","2020-04-11 22:52:25","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + C->A
}","true","","","","",""
"46","IsDag","8","eval_input","2020-04-11 22:52:48","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->D
}","true","","","","",""
"46","IsDag","9","eval_input","2020-04-11 22:52:51","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->D
}","true","","","","",""
"46","IsDag","10","eval_input","2020-04-11 22:53:00","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B + C->D + D->C
}","false","","","","",""
"46","IsDag","11","eval_input","2020-04-11 22:53:32","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","true","","","","",""
"46","IsDag","12","quiz_answer","2020-04-11 22:54:39","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"46","IsDag","13","quiz_answer","2020-04-11 22:54:46","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"46","IsDag","14","quiz_answer","2020-04-11 22:54:56","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"46","IsDag","15","quiz_answer","2020-04-11 22:55:09","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"46","IsDag","16","quiz_answer","2020-04-11 22:55:17","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"46","IsDag","17","quiz_answer","2020-04-11 22:55:26","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"46","IsDag","18","quiz_answer","2020-04-11 22:55:38","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"46","IsDag","19","quiz_answer","2020-04-11 22:55:47","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"46","IsDag","20","final_answer","2020-04-11 22:55:49","","","","","","no cycles",""
"46","ThreeCycle","21","eval_input","2020-04-11 22:56:13","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = none
}","false","","","","",""
"46","ThreeCycle","22","eval_input","2020-04-11 22:56:23","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = A->B
}","false","","","","",""
"46","ThreeCycle","23","eval_input","2020-04-11 22:56:42","inst myInst {
  Node = A
        + B
  edges = A->B
}","false","","","","",""
"46","ThreeCycle","24","eval_input","2020-04-11 22:56:54","inst myInst {
  Node = A
       + B
  edges = A->B + B->A
}","false","","","","",""
"46","ThreeCycle","25","eval_input","2020-04-11 22:57:18","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","false","","","","",""
"46","ThreeCycle","26","eval_input","2020-04-11 22:57:37","inst myInst {
  Node = A
       + B
       + C
       + D
       + E
  edges = A->B + A->C
}","false","","","","",""
"46","ThreeCycle","27","eval_input","2020-04-11 22:57:51","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"46","ThreeCycle","28","eval_input","2020-04-11 22:58:31","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"46","ThreeCycle","29","eval_input","2020-04-11 22:59:25","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"46","ThreeCycle","30","eval_input","2020-04-11 22:59:46","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A + A->C + A->D
}","false","","","","",""
"46","ThreeCycle","31","eval_input","2020-04-11 22:59:50","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A + A->C + A->D
}","false","","","","",""
"46","ThreeCycle","32","eval_input","2020-04-11 23:05:48","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->A + A->C + A->D
}","false","","","","",""
"46","ThreeCycle","33","eval_input","2020-04-11 23:06:06","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"46","ThreeCycle","34","eval_input","2020-04-11 23:06:29","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","false","","","","",""
"46","ThreeCycle","35","eval_input","2020-04-11 23:06:40","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","false","","","","",""
"46","ThreeCycle","36","eval_input","2020-04-11 23:06:41","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","false","","","","",""
"46","ThreeCycle","37","eval_input","2020-04-11 23:06:50","inst myInst {
  Node = A + B + C
  edges = A->B + C->B + B->A
}","false","","","","",""
"46","ThreeCycle","38","eval_input","2020-04-11 23:07:12","inst myInst {
  Node = A + B + C
  edges = A->B + C->B + A->C
}","false","","","","",""
"46","ThreeCycle","39","eval_input","2020-04-11 23:07:21","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","false","","","","",""
"46","ThreeCycle","40","eval_input","2020-04-11 23:07:34","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"46","ThreeCycle","41","eval_input","2020-04-11 23:07:53","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"46","ThreeCycle","42","eval_input","2020-04-11 23:08:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"46","ThreeCycle","43","eval_input","2020-04-11 23:08:14","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"46","ThreeCycle","44","eval_input","2020-04-11 23:08:34","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"46","ThreeCycle","45","eval_input","2020-04-11 23:08:41","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","false","","","","",""
"46","ThreeCycle","46","eval_input","2020-04-11 23:09:05","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"46","ThreeCycle","47","eval_input","2020-04-11 23:09:07","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"46","ThreeCycle","48","eval_input","2020-04-11 23:09:11","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + A->D
}","true","","","","",""
"46","ThreeCycle","49","eval_input","2020-04-11 23:09:36","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + B->A
}","true","","","","",""
"46","ThreeCycle","50","eval_input","2020-04-11 23:10:02","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A + B->D
}","true","","","","",""
"46","ThreeCycle","51","eval_input","2020-04-11 23:11:04","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","false","","","","",""
"46","ThreeCycle","52","eval_input","2020-04-11 23:11:09","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","false","","","","",""
"46","ThreeCycle","53","eval_input","2020-04-11 23:11:19","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->B
}","true","","","","",""
"46","ThreeCycle","54","eval_input","2020-04-11 23:12:05","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->C + C->D + D->B
}","true","","","","",""
"46","ThreeCycle","55","eval_input","2020-04-11 23:12:20","inst myInst {
  Node = A + B + C + D
  edges = A->A + A->B + B->A
}","false","","","","",""
"46","ThreeCycle","56","eval_input","2020-04-11 23:13:16","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"46","ThreeCycle","57","eval_input","2020-04-11 23:13:17","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"46","ThreeCycle","58","quiz_answer","2020-04-11 23:14:20","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"46","ThreeCycle","59","quiz_answer","2020-04-11 23:14:26","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"46","ThreeCycle","60","quiz_answer","2020-04-11 23:14:31","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"46","ThreeCycle","61","quiz_answer","2020-04-11 23:14:38","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"46","ThreeCycle","62","quiz_answer","2020-04-11 23:14:45","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"46","ThreeCycle","63","quiz_answer","2020-04-11 23:14:49","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"46","ThreeCycle","64","quiz_answer","2020-04-11 23:14:55","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"46","ThreeCycle","65","quiz_answer","2020-04-11 23:15:03","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"46","ThreeCycle","66","final_answer","2020-04-11 23:15:04","","","","","","Triangle detection: True if there exists at least one cycle with exactly three nodes, false otherwise.",""
"46","IsBipartite","67","eval_input","2020-04-11 23:15:16","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","false","","","","",""
"46","IsBipartite","68","eval_input","2020-04-11 23:15:40","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"46","IsBipartite","69","eval_input","2020-04-11 23:15:46","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"46","IsBipartite","70","eval_input","2020-04-11 23:15:57","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"46","IsBipartite","71","eval_input","2020-04-11 23:16:07","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"46","IsBipartite","72","eval_input","2020-04-11 23:16:10","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"46","IsBipartite","73","eval_input","2020-04-11 23:16:10","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"46","IsBipartite","74","eval_input","2020-04-11 23:16:15","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"46","IsBipartite","75","eval_input","2020-04-11 23:16:26","inst myInst {
  Node = A + B
  edges = A->B + B->B
}","false","","","","",""
"46","IsBipartite","76","eval_input","2020-04-11 23:16:47","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
}","true","","","","",""
"46","IsBipartite","77","eval_input","2020-04-11 23:17:49","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"46","IsBipartite","78","eval_input","2020-04-11 23:17:56","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + A->C
}","true","","","","",""
"46","IsBipartite","79","eval_input","2020-04-11 23:18:03","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + A->C + C->C
}","false","","","","",""
"46","IsBipartite","80","eval_input","2020-04-11 23:18:10","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + A->C + C->D
}","true","","","","",""
"46","IsBipartite","81","eval_input","2020-04-11 23:18:20","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"46","IsBipartite","82","eval_input","2020-04-11 23:18:50","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","true","","","","",""
"46","IsBipartite","83","eval_input","2020-04-11 23:19:06","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"46","IsBipartite","84","eval_input","2020-04-11 23:19:29","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"46","IsBipartite","85","eval_input","2020-04-11 23:19:57","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"46","IsBipartite","86","eval_input","2020-04-11 23:20:40","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"46","IsBipartite","87","eval_input","2020-04-11 23:20:55","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"46","IsBipartite","88","eval_input","2020-04-11 23:21:19","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->C
}","false","","","","",""
"46","IsBipartite","89","eval_input","2020-04-11 23:23:12","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"46","IsBipartite","90","eval_input","2020-04-11 23:23:36","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A + A->A
}","false","","","","",""
"46","IsBipartite","91","eval_input","2020-04-11 23:24:40","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"46","IsBipartite","92","eval_input","2020-04-11 23:25:12","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->A
}","false","","","","",""
"46","IsBipartite","93","eval_input","2020-04-11 23:26:16","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"46","IsBipartite","94","eval_input","2020-04-11 23:26:55","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->C
}","true","","","","",""
"46","IsBipartite","95","eval_input","2020-04-11 23:27:15","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->C + C->A
}","false","","","","",""
"46","IsBipartite","96","eval_input","2020-04-11 23:27:19","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->C + B->A
}","true","","","","",""
"46","IsBipartite","97","eval_input","2020-04-11 23:30:23","inst myInst {
  Node = A + B + C
  edges = A->B + A->C
}","true","","","","",""
"46","IsBipartite","98","eval_input","2020-04-11 23:30:32","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->A
}","true","","","","",""
"46","IsBipartite","99","eval_input","2020-04-11 23:30:51","inst myInst {
  Node = A + B + C
  edges = A->B + A->C + B->A + C->A
}","true","","","","",""
"46","IsBipartite","100","eval_input","2020-04-11 23:34:27","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->D
}","true","","","","",""
"46","IsBipartite","101","eval_input","2020-04-11 23:34:40","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A + C->D + D->C
}","true","","","","",""
"46","IsBipartite","102","eval_input","2020-04-11 23:34:47","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A + C->D + D->A
}","true","","","","",""
"46","IsBipartite","103","eval_input","2020-04-11 23:34:54","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"46","IsBipartite","104","eval_input","2020-04-11 23:35:39","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + A->A
}","false","","","","",""
"46","IsBipartite","105","eval_input","2020-04-11 23:38:34","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + C->A
}","false","","","","",""
"46","IsBipartite","106","eval_input","2020-04-11 23:38:45","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + B->A
}","true","","","","",""
"46","IsBipartite","107","eval_input","2020-04-11 23:39:37","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A + D->B
}","false","","","","",""
"46","IsBipartite","108","eval_input","2020-04-11 23:40:38","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"46","IsBipartite","109","eval_input","2020-04-11 23:42:57","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","true","","","","",""
"46","IsBipartite","110","eval_input","2020-04-11 23:43:23","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->A
}","false","","","","",""
"46","IsBipartite","111","eval_input","2020-04-11 23:43:28","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = none
}","true","","","","",""
"46","IsBipartite","112","eval_input","2020-04-11 23:43:36","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->A
}","true","","","","",""
"46","IsBipartite","113","eval_input","2020-04-11 23:43:38","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->A
}","true","","","","",""
"46","IsBipartite","114","eval_input","2020-04-11 23:43:47","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->C + C->A
}","false","","","","",""
"46","IsBipartite","115","eval_input","2020-04-11 23:43:53","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"46","IsBipartite","116","eval_input","2020-04-11 23:45:48","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"46","IsBipartite","117","eval_input","2020-04-11 23:45:55","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->C + C->D + D->E + E->F + F->A
}","true","","","","",""
"46","IsBipartite","118","eval_input","2020-04-11 23:46:10","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->C + C->D + D->E + E->F + F->G + G->A
}","false","","","","",""
"46","IsBipartite","119","eval_input","2020-04-11 23:46:19","inst myInst {
  Node = A + B + C + D + E + F + G + H
  edges = A->B + B->C + C->D + D->E + E->F + F->G + G->H + H->A
}","true","","","","",""
"46","IsBipartite","120","quiz_answer","2020-04-11 23:47:10","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"46","IsBipartite","121","quiz_answer","2020-04-11 23:47:22","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"46","IsBipartite","122","quiz_answer","2020-04-11 23:47:28","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"46","IsBipartite","123","quiz_answer","2020-04-11 23:47:43","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"46","IsBipartite","124","quiz_answer","2020-04-11 23:47:47","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"46","IsBipartite","125","quiz_answer","2020-04-11 23:47:58","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"46","IsBipartite","126","quiz_answer","2020-04-11 23:48:07","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"46","IsBipartite","127","quiz_answer","2020-04-11 23:48:12","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"46","IsBipartite","128","final_answer","2020-04-11 23:48:14","","","","","","False if there is at least one cycle with an odd number of nodes, true otherwise",""
"47","ThreeCycle","0","eval_input","2020-04-12 00:14:50","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","false","","","","",""
"47","ThreeCycle","1","eval_input","2020-04-12 00:14:58","inst myInst {
  Node = A + B + C
  edges = none
}","false","","","","",""
"47","ThreeCycle","2","eval_input","2020-04-12 00:15:10","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"47","ThreeCycle","3","eval_input","2020-04-12 00:15:32","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B + A->C
}","false","","","","",""
"47","ThreeCycle","4","eval_input","2020-04-12 00:15:44","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"47","ThreeCycle","5","eval_input","2020-04-12 00:15:49","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"47","ThreeCycle","6","eval_input","2020-04-12 00:16:15","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B
}","false","","","","",""
"47","ThreeCycle","7","eval_input","2020-04-12 00:16:26","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B + A->C + C->A
}","true","","","","",""
"47","ThreeCycle","8","eval_input","2020-04-12 00:17:01","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"47","ThreeCycle","9","eval_input","2020-04-12 00:17:10","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","false","","","","",""
"47","ThreeCycle","10","eval_input","2020-04-12 00:17:30","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"47","ThreeCycle","11","eval_input","2020-04-12 00:17:55","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"47","ThreeCycle","12","eval_input","2020-04-12 00:18:06","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"47","ThreeCycle","13","eval_input","2020-04-12 00:18:15","inst myInst {
  Node = A + B
  edges = A->A + A->B
}","false","","","","",""
"47","ThreeCycle","14","eval_input","2020-04-12 00:18:25","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"47","ThreeCycle","15","eval_input","2020-04-12 00:18:41","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"47","ThreeCycle","16","eval_input","2020-04-12 00:18:56","inst myInst {
  Node = A + B + C
  edges = A->C
}","false","","","","",""
"47","ThreeCycle","17","eval_input","2020-04-12 00:19:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","false","","","","",""
"47","ThreeCycle","18","eval_input","2020-04-12 00:19:13","inst myInst {
  Node = A + B + C
  edges = C->C
}","false","","","","",""
"47","ThreeCycle","19","eval_input","2020-04-12 00:19:55","inst myInst {
  Node = A + B + C
  edges = C->C
}","false","","","","",""
"47","ThreeCycle","20","eval_input","2020-04-12 00:20:25","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"47","ThreeCycle","21","eval_input","2020-04-12 00:20:35","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B + A->C + C->A
}","true","","","","",""
"47","ThreeCycle","22","eval_input","2020-04-12 00:20:45","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C + C->B + A->C
}","true","","","","",""
"47","ThreeCycle","23","eval_input","2020-04-12 00:21:43","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->B + A->C
}","true","","","","",""
"47","ThreeCycle","24","eval_input","2020-04-12 00:21:56","inst myInst {
  Node = A + B + C
  edges = A->B
}","false","","","","",""
"47","ThreeCycle","25","eval_input","2020-04-12 00:23:03","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"47","ThreeCycle","26","eval_input","2020-04-12 00:23:09","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"47","ThreeCycle","27","eval_input","2020-04-12 00:23:10","inst myInst {
  Node = A + B
  edges = A->B
}","false","","","","",""
"47","ThreeCycle","28","eval_input","2020-04-12 00:23:22","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + B->C + C->B + A->C
}","true","","","","",""
"47","ThreeCycle","29","eval_input","2020-04-12 00:24:04","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + B->C + A->C
}","false","","","","",""
"47","ThreeCycle","30","eval_input","2020-04-12 00:24:12","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + B->C + C->B
}","false","","","","",""
"47","ThreeCycle","31","eval_input","2020-04-12 00:24:16","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + B->C + C->B + A->C
}","true","","","","",""
"47","ThreeCycle","32","eval_input","2020-04-12 00:24:23","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->B + A->C
}","false","","","","",""
"47","ThreeCycle","33","eval_input","2020-04-12 00:24:31","inst myInst {
  Node = A + B + C
  edges = B->A + B->C + C->B + A->C
}","true","","","","",""
"47","ThreeCycle","34","eval_input","2020-04-12 00:25:28","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + A->C
}","false","","","","",""
"47","ThreeCycle","35","eval_input","2020-04-12 00:25:36","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + A->C + C->A
}","false","","","","",""
"47","ThreeCycle","36","eval_input","2020-04-12 00:26:17","inst myInst {
  Node = A + B + C
  edges =  B->A + B->C + C->B + A->C + C->A
}","true","","","","",""
"47","ThreeCycle","37","eval_input","2020-04-12 00:26:24","inst myInst {
  Node = A + B + C
  edges =  B->C + C->B + A->C + C->A
}","false","","","","",""
"47","ThreeCycle","38","eval_input","2020-04-12 00:26:41","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->B + A->C + C->A
}","true","","","","",""
"47","ThreeCycle","39","eval_input","2020-04-12 00:26:47","inst myInst {
  Node = A + B + C
  edges =  B->A + B->C + C->B + A->C + C->A
}","true","","","","",""
"47","ThreeCycle","40","eval_input","2020-04-12 00:27:23","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->B + A->C + C->A
}","true","","","","",""
"47","ThreeCycle","41","eval_input","2020-04-12 00:28:31","inst myInst {
  Node = A + B + C
  edges =  A->B + B->B + B->C
}","false","","","","",""
"47","ThreeCycle","42","eval_input","2020-04-12 00:28:45","inst myInst {
  Node = A + B + C
  edges =  B->C + A->B
}","false","","","","",""
"47","ThreeCycle","43","eval_input","2020-04-12 00:29:03","inst myInst {
  Node = A + B + C
  edges =  A->B + C->B
}","false","","","","",""
"47","ThreeCycle","44","eval_input","2020-04-12 00:29:10","inst myInst {
  Node = A + B + C
  edges =  A->B + C->B + B->C
}","false","","","","",""
"47","ThreeCycle","45","eval_input","2020-04-12 00:29:24","inst myInst {
  Node = A + B + C
  edges =  A->B + C->B + B->C + B->A
}","false","","","","",""
"47","ThreeCycle","46","eval_input","2020-04-12 00:29:38","inst myInst {
  Node = A + B + C
  edges =  A->B + C->B + B->C + B->A + C->A
}","true","","","","",""
"47","ThreeCycle","47","eval_input","2020-04-12 00:30:02","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->A
}","true","","","","",""
"47","ThreeCycle","48","eval_input","2020-04-12 00:30:24","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C
}","false","","","","",""
"47","ThreeCycle","49","eval_input","2020-04-12 00:30:40","inst myInst {
  Node = A + B + C
  edges =  A->C + C->B + B->A
}","true","","","","",""
"47","ThreeCycle","50","eval_input","2020-04-12 00:31:28","inst myInst {
  Node = A + B + C
  edges =  A->C + C->B + A->B
}","false","","","","",""
"47","ThreeCycle","51","eval_input","2020-04-12 00:32:00","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->A + A->A
}","true","","","","",""
"47","ThreeCycle","52","eval_input","2020-04-12 00:32:10","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->A + A->A + B->B + C->C
}","true","","","","",""
"47","ThreeCycle","53","quiz_answer","2020-04-12 00:33:58","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","ThreeCycle","54","eval_input","2020-04-12 00:34:32","inst myInst {
  Node = A
  edges =  A->A
}","false","","","","",""
"47","ThreeCycle","55","eval_input","2020-04-12 00:34:40","inst myInst {
  Node = A + B
  edges =  A->A + B->A
}","false","","","","",""
"47","ThreeCycle","56","eval_input","2020-04-12 00:34:48","inst myInst {
  Node = A + B
  edges =  A->A + A->B
}","false","","","","",""
"47","ThreeCycle","57","eval_input","2020-04-12 00:35:42","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->C + C->D + D->A
}","false","","","","",""
"47","ThreeCycle","58","quiz_answer","2020-04-12 00:37:04","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","ThreeCycle","59","quiz_answer","2020-04-12 00:37:09","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"47","ThreeCycle","60","quiz_answer","2020-04-12 00:37:11","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"47","ThreeCycle","61","quiz_answer","2020-04-12 00:37:44","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"47","ThreeCycle","62","quiz_answer","2020-04-12 00:37:52","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"47","ThreeCycle","63","quiz_answer","2020-04-12 00:37:59","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"47","ThreeCycle","64","quiz_answer","2020-04-12 00:38:10","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"47","ThreeCycle","65","quiz_answer","2020-04-12 00:38:24","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"47","ThreeCycle","66","final_answer","2020-04-12 00:38:28","","","","","","I think it checks whether all nodes can reach all other nodes but with only 3 nodes. (Reachability with exact 3 nodes)",""
"47","IsDag","67","eval_input","2020-04-12 00:39:03","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->C + C->D + D->A
}","false","","","","",""
"47","IsDag","68","eval_input","2020-04-12 00:39:41","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->A + B->C + C->D + D->A
}","false","","","","",""
"47","IsDag","69","eval_input","2020-04-12 00:39:47","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->A + B->C + C->B + C->D + D->A
}","false","","","","",""
"47","IsDag","70","eval_input","2020-04-12 00:39:53","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->A + B->C + C->B + C->D + D->C + D->A
}","false","","","","",""
"47","IsDag","71","eval_input","2020-04-12 00:39:58","inst myInst {
  Node = A + B + C + D
  edges =  A->B + B->A + B->C + C->B + C->D + D->C + D->A + A->D
}","false","","","","",""
"47","IsDag","72","eval_input","2020-04-12 00:40:04","inst myInst {
  Node = A + B + C + D
  edges = A->A
}","false","","","","",""
"47","IsDag","73","eval_input","2020-04-12 00:40:10","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->B
}","false","","","","",""
"47","IsDag","74","eval_input","2020-04-12 00:40:14","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->B + C->C
}","false","","","","",""
"47","IsDag","75","eval_input","2020-04-12 00:40:17","inst myInst {
  Node = A + B + C + D
  edges = A->A + B->B + C->C + D->D
}","false","","","","",""
"47","IsDag","76","eval_input","2020-04-12 00:40:24","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"47","IsDag","77","eval_input","2020-04-12 00:40:33","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"47","IsDag","78","eval_input","2020-04-12 00:40:42","inst myInst {
  Node = A + B
  edges = A->B + A->A + B->B
}","false","","","","",""
"47","IsDag","79","eval_input","2020-04-12 00:40:50","inst myInst {
  Node = A + B
  edges = A->B + A->A + B->B + B->A
}","false","","","","",""
"47","IsDag","80","eval_input","2020-04-12 00:42:02","inst myInst {
  Node = A + B + C
  edges = A->B
}","true","","","","",""
"47","IsDag","81","eval_input","2020-04-12 00:42:17","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"47","IsDag","82","quiz_answer","2020-04-12 00:43:14","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","IsDag","83","quiz_answer","2020-04-12 00:43:18","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"47","IsDag","84","quiz_answer","2020-04-12 00:43:22","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"47","IsDag","85","quiz_answer","2020-04-12 00:44:26","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"47","IsDag","86","quiz_answer","2020-04-12 00:44:35","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"47","IsDag","87","quiz_answer","2020-04-12 00:45:23","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","true","false","",""
"47","IsDag","88","eval_input","2020-04-12 00:45:29","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"47","IsDag","89","quiz_answer","2020-04-12 00:45:59","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","IsDag","90","quiz_answer","2020-04-12 00:46:04","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"47","IsDag","91","eval_input","2020-04-12 00:46:07","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"47","IsDag","92","eval_input","2020-04-12 00:46:08","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"47","IsDag","93","quiz_answer","2020-04-12 00:46:20","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","IsDag","94","quiz_answer","2020-04-12 00:46:22","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"47","IsDag","95","quiz_answer","2020-04-12 00:46:25","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"47","IsDag","96","quiz_answer","2020-04-12 00:46:38","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"47","IsDag","97","quiz_answer","2020-04-12 00:46:41","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"47","IsDag","98","quiz_answer","2020-04-12 00:46:43","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"47","IsDag","99","quiz_answer","2020-04-12 00:46:48","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"47","IsDag","100","quiz_answer","2020-04-12 00:46:55","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"47","IsDag","101","final_answer","2020-04-12 00:46:56","","","","","","checks whether the graph is acyclic",""
"47","IsBipartite","102","eval_input","2020-04-12 00:47:05","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"47","IsBipartite","103","eval_input","2020-04-12 00:47:31","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"47","IsBipartite","104","eval_input","2020-04-12 00:47:44","inst myInst {
  Node = A + B + C
  edges = B->C
}","true","","","","",""
"47","IsBipartite","105","eval_input","2020-04-12 00:47:52","inst myInst {
  Node = A + B + C
  edges = B->C + C->A
}","true","","","","",""
"47","IsBipartite","106","eval_input","2020-04-12 00:48:04","inst myInst {
  Node = A + B + C
  edges = C->A
}","true","","","","",""
"47","IsBipartite","107","eval_input","2020-04-12 00:48:09","inst myInst {
  Node = A + B + C
  edges = none
}","true","","","","",""
"47","IsBipartite","108","eval_input","2020-04-12 00:48:25","inst myInst {
  Node = A + B + C
  edges = A->B + B->A
}","true","","","","",""
"47","IsBipartite","109","eval_input","2020-04-12 00:48:34","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + C->A
}","true","","","","",""
"47","IsBipartite","110","eval_input","2020-04-12 00:48:43","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"47","IsBipartite","111","eval_input","2020-04-12 00:49:02","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","true","","","","",""
"47","IsBipartite","112","eval_input","2020-04-12 00:49:16","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B + B->A
}","true","","","","",""
"47","IsBipartite","113","eval_input","2020-04-12 00:49:37","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"47","IsBipartite","114","eval_input","2020-04-12 00:49:48","inst myInst {
  Node = A + B + C
  edges = A->A + A->B + B->C
}","false","","","","",""
"47","IsBipartite","115","eval_input","2020-04-12 00:49:53","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"47","IsBipartite","116","eval_input","2020-04-12 00:50:00","inst myInst {
  Node = A + B + C
  edges = A->A
}","false","","","","",""
"47","IsBipartite","117","eval_input","2020-04-12 00:50:05","inst myInst {
  Node = A + B + C
  edges = B->B
}","false","","","","",""
"47","IsBipartite","118","eval_input","2020-04-12 00:50:19","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","true","","","","",""
"47","IsBipartite","119","quiz_answer","2020-04-12 00:50:36","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","IsBipartite","120","quiz_answer","2020-04-12 00:50:39","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"47","IsBipartite","121","quiz_answer","2020-04-12 00:50:42","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","true","false","",""
"47","IsBipartite","122","eval_input","2020-04-12 00:50:57","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->A
}","true","","","","",""
"47","IsBipartite","123","eval_input","2020-04-12 00:51:22","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","false","","","","",""
"47","IsBipartite","124","eval_input","2020-04-12 00:51:35","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->A
}","true","","","","",""
"47","IsBipartite","125","eval_input","2020-04-12 00:51:42","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + D->A + A->D
}","true","","","","",""
"47","IsBipartite","126","eval_input","2020-04-12 00:51:47","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->B
}","true","","","","",""
"47","IsBipartite","127","eval_input","2020-04-12 00:51:51","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->B + B->A
}","true","","","","",""
"47","IsBipartite","128","eval_input","2020-04-12 00:52:51","inst myInst {
  Node = A + B + C + D
  edges = A->A
}","false","","","","",""
"47","IsBipartite","129","eval_input","2020-04-12 00:53:04","inst myInst {
  Node = A + B + C + D
  edges = A->C
}","true","","","","",""
"47","IsBipartite","130","eval_input","2020-04-12 00:53:30","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"47","IsBipartite","131","eval_input","2020-04-12 00:54:07","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + D->A
}","true","","","","",""
"47","IsBipartite","132","quiz_answer","2020-04-12 00:54:43","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"47","IsBipartite","133","eval_input","2020-04-12 00:54:52","inst myInst {
  Node = A + B + C + D + E
  edges = B->B
}","false","","","","",""
"47","IsBipartite","134","eval_input","2020-04-12 00:55:07","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C
}","true","","","","",""
"47","IsBipartite","135","eval_input","2020-04-12 00:55:14","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + A->A
}","false","","","","",""
"47","IsBipartite","136","quiz_answer","2020-04-12 00:55:41","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","IsBipartite","137","quiz_answer","2020-04-12 00:55:46","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"47","IsBipartite","138","quiz_answer","2020-04-12 00:55:50","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"47","IsBipartite","139","quiz_answer","2020-04-12 00:56:01","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"47","IsBipartite","140","quiz_answer","2020-04-12 00:56:28","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"47","IsBipartite","141","quiz_answer","2020-04-12 00:56:32","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"47","IsBipartite","142","quiz_answer","2020-04-12 00:56:37","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"47","IsBipartite","143","quiz_answer","2020-04-12 00:56:59","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","IsBipartite","144","quiz_answer","2020-04-12 00:57:02","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"47","IsBipartite","145","quiz_answer","2020-04-12 00:57:05","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"47","IsBipartite","146","quiz_answer","2020-04-12 00:57:11","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"47","IsBipartite","147","quiz_answer","2020-04-12 00:57:13","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"47","IsBipartite","148","quiz_answer","2020-04-12 00:57:17","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"47","IsBipartite","149","quiz_answer","2020-04-12 00:57:20","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"47","IsBipartite","150","quiz_answer","2020-04-12 00:57:26","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","true","7","false","false","",""
"47","IsBipartite","151","quiz_answer","2020-04-12 00:58:02","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"47","IsBipartite","152","quiz_answer","2020-04-12 00:58:05","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"47","IsBipartite","153","quiz_answer","2020-04-12 00:58:08","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"47","IsBipartite","154","quiz_answer","2020-04-12 00:58:11","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"47","IsBipartite","155","quiz_answer","2020-04-12 00:58:14","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"47","IsBipartite","156","quiz_answer","2020-04-12 00:58:16","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"47","IsBipartite","157","quiz_answer","2020-04-12 00:58:24","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"47","IsBipartite","158","quiz_answer","2020-04-12 00:58:29","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"47","IsBipartite","159","final_answer","2020-04-12 00:58:31","","","","","","this predicate checks whether there is no odd-length cycle.",""
"48","IsBipartite","0","eval_input","2020-04-12 09:27:39","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"48","IsBipartite","1","eval_input","2020-04-12 09:27:46","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"48","IsBipartite","2","eval_input","2020-04-12 09:27:52","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"48","IsBipartite","3","eval_input","2020-04-12 09:27:54","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"48","IsBipartite","4","eval_input","2020-04-12 09:28:10","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->C
}","true","","","","",""
"48","IsBipartite","5","eval_input","2020-04-12 09:28:17","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->C+C->A
}","false","","","","",""
"48","IsBipartite","6","eval_input","2020-04-12 09:28:30","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->C
}","true","","","","",""
"48","IsBipartite","7","eval_input","2020-04-12 09:28:55","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->C+A->C
}","true","","","","",""
"48","IsBipartite","8","eval_input","2020-04-12 09:29:06","inst myInst {
  Node = A
       + B
       + C
  edges = A->B+B->C+A->C+A->A
}","false","","","","",""
"48","IsBipartite","9","eval_input","2020-04-12 09:29:36","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"48","IsBipartite","10","eval_input","2020-04-12 09:29:47","inst myInst {
  Node = A
       + B
       + C
  edges = B->B
}","false","","","","",""
"48","IsBipartite","11","eval_input","2020-04-12 09:29:51","inst myInst {
  Node = A
       + B
       + C
  edges = C->C
}","false","","","","",""
"48","IsBipartite","12","eval_input","2020-04-12 09:30:13","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","true","","","","",""
"48","IsBipartite","13","eval_input","2020-04-12 09:30:32","inst myInst {
  Node = A
       + B
       + C
  edges = B->A+B->C
}","true","","","","",""
"48","IsBipartite","14","eval_input","2020-04-12 09:30:53","inst myInst {
  Node = A
       + B
       + C
  edges = C->A+C->B
}","true","","","","",""
"48","IsBipartite","15","eval_input","2020-04-12 09:31:53","inst myInst {
  Node = A
       + B
       + C
       + D
  edges = D->A+D->B+D->C
}","true","","","","",""
"48","IsBipartite","16","quiz_answer","2020-04-12 09:32:41","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"48","IsBipartite","17","eval_input","2020-04-12 09:33:22","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"48","IsBipartite","18","quiz_answer","2020-04-12 09:33:50","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"48","IsBipartite","19","quiz_answer","2020-04-12 09:34:10","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"48","IsBipartite","20","quiz_answer","2020-04-12 09:34:19","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"48","IsBipartite","21","quiz_answer","2020-04-12 09:34:30","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"48","IsBipartite","22","eval_input","2020-04-12 09:35:39","inst myInst {
  Node = A+B+C
  edges = A->B+B->C+A->C
}","true","","","","",""
"48","IsBipartite","23","eval_input","2020-04-12 09:35:56","inst myInst {
  Node = A+B+C
  edges = A->B+B->C
}","true","","","","",""
"48","IsBipartite","24","eval_input","2020-04-12 09:36:20","inst myInst {
  Node = A+B+C
  edges = A->B
}","true","","","","",""
"48","IsBipartite","25","eval_input","2020-04-12 09:36:32","inst myInst {
  Node = A+B+C
  edges = A->C
}","true","","","","",""
"48","IsBipartite","26","eval_input","2020-04-12 09:36:55","inst myInst {
  Node = A+B+C
  edges = A->C+C->A
}","true","","","","",""
"48","IsBipartite","27","eval_input","2020-04-12 09:37:42","inst myInst {
  Node = A+B+C
  edges = none
}","true","","","","",""
"48","IsBipartite","28","eval_input","2020-04-12 09:38:18","inst myInst {
  Node = A+B+C
  edges = A->B+B->C+C->A
}","false","","","","",""
"48","IsBipartite","29","eval_input","2020-04-12 09:38:46","inst myInst {
  Node = A+B+C
  edges = A->B+B->A
}","true","","","","",""
"48","IsBipartite","30","eval_input","2020-04-12 09:38:57","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D
}","true","","","","",""
"48","IsBipartite","31","eval_input","2020-04-12 09:39:48","inst myInst {
  Node = A+B+C+D
  edges = B->C+C->D+D->B
}","false","","","","",""
"48","IsBipartite","32","eval_input","2020-04-12 09:39:59","inst myInst {
  Node = A+B+C+D
  edges = B->C+C->D+D->B+A->C
}","false","","","","",""
"48","IsBipartite","33","eval_input","2020-04-12 09:40:17","inst myInst {
  Node = A+B+C+D
  edges = A->B+B->C+C->D+D->A
}","true","","","","",""
"48","IsBipartite","34","eval_input","2020-04-12 09:40:35","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->D+D->F+F->A
}","false","","","","",""
"48","IsBipartite","35","eval_input","2020-04-12 09:40:48","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->D+D->F+F->A
}","false","","","","",""
"48","IsBipartite","36","quiz_answer","2020-04-12 09:41:14","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"48","IsBipartite","37","quiz_answer","2020-04-12 09:41:20","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"48","IsBipartite","38","quiz_answer","2020-04-12 09:41:28","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"48","IsBipartite","39","quiz_answer","2020-04-12 09:41:46","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"48","IsBipartite","40","quiz_answer","2020-04-12 09:41:51","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"48","IsBipartite","41","quiz_answer","2020-04-12 09:42:01","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"48","IsBipartite","42","quiz_answer","2020-04-12 09:42:09","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"48","IsBipartite","43","quiz_answer","2020-04-12 09:42:45","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"48","IsBipartite","44","final_answer","2020-04-12 09:42:47","","","","","","no cycles of odd length",""
"48","ThreeCycle","45","eval_input","2020-04-12 09:43:17","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->D+D->F+F->A
}","false","","","","",""
"48","ThreeCycle","46","eval_input","2020-04-12 09:44:12","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->D+D->A
}","false","","","","",""
"48","ThreeCycle","47","eval_input","2020-04-12 09:44:28","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->A
}","true","","","","",""
"48","ThreeCycle","48","eval_input","2020-04-12 09:44:44","inst myInst {
  Node = A+B+C+D+F
  edges = none
}","false","","","","",""
"48","ThreeCycle","49","eval_input","2020-04-12 09:44:58","inst myInst {
  Node = A+B+C+D+F
  edges = A->A
}","false","","","","",""
"48","ThreeCycle","50","eval_input","2020-04-12 09:45:07","inst myInst {
  Node = A+B+C+D+F
  edges = B->B
}","false","","","","",""
"48","ThreeCycle","51","eval_input","2020-04-12 09:45:21","inst myInst {
  Node = A+B+C+D+F
  edges = C->C
}","false","","","","",""
"48","ThreeCycle","52","eval_input","2020-04-12 09:45:25","inst myInst {
  Node = A+B+C+D+F
  edges = D->D
}","false","","","","",""
"48","ThreeCycle","53","eval_input","2020-04-12 09:45:30","inst myInst {
  Node = A+B+C+D+F
  edges = F->F
}","false","","","","",""
"48","ThreeCycle","54","eval_input","2020-04-12 09:45:30","inst myInst {
  Node = A+B+C+D+F
  edges = F->F
}","false","","","","",""
"48","ThreeCycle","55","eval_input","2020-04-12 09:45:38","inst myInst {
  Node = A+B+C+D+F
  edges = A->B
}","false","","","","",""
"48","ThreeCycle","56","eval_input","2020-04-12 09:45:54","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->A
}","false","","","","",""
"48","ThreeCycle","57","eval_input","2020-04-12 09:46:19","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->A
}","true","","","","",""
"48","ThreeCycle","58","eval_input","2020-04-12 09:46:19","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->A
}","true","","","","",""
"48","ThreeCycle","59","eval_input","2020-04-12 09:46:20","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->A
}","true","","","","",""
"48","ThreeCycle","60","eval_input","2020-04-12 09:47:01","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->D+D->A
}","false","","","","",""
"48","ThreeCycle","61","eval_input","2020-04-12 09:47:10","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->D+D->F+F->A
}","false","","","","",""
"48","ThreeCycle","62","eval_input","2020-04-12 09:47:13","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->D+D->F+F->A
}","false","","","","",""
"48","ThreeCycle","63","eval_input","2020-04-12 09:48:13","inst myInst {
  Node = A+B+C+D+F
  edges = B->C+C->D+D->F
}","false","","","","",""
"48","ThreeCycle","64","eval_input","2020-04-12 09:48:38","inst myInst {
  Node = A+B+C+D+F
  edges = B->C+C->D+D->B
}","true","","","","",""
"48","ThreeCycle","65","eval_input","2020-04-12 09:48:53","inst myInst {
  Node = A+B+C+D+F
  edges = B->C+C->D+D->B+A->B
}","true","","","","",""
"48","ThreeCycle","66","quiz_answer","2020-04-12 09:49:18","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"48","ThreeCycle","67","quiz_answer","2020-04-12 09:49:27","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"48","ThreeCycle","68","quiz_answer","2020-04-12 09:49:33","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"48","ThreeCycle","69","quiz_answer","2020-04-12 09:49:49","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"48","ThreeCycle","70","quiz_answer","2020-04-12 09:50:01","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"48","ThreeCycle","71","quiz_answer","2020-04-12 09:50:12","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"48","ThreeCycle","72","quiz_answer","2020-04-12 09:50:24","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"48","ThreeCycle","73","quiz_answer","2020-04-12 09:50:30","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"48","ThreeCycle","74","final_answer","2020-04-12 09:50:31","","","","","","cycle of length 3",""
"48","IsDag","75","eval_input","2020-04-12 09:50:43","inst myInst {
  Node = A+B+C+D+F
  edges = B->C+C->D+D->B+A->B
}","false","","","","",""
"48","IsDag","76","eval_input","2020-04-12 09:51:15","inst myInst {
  Node = A+B+C+D+F
  edges = B->C+C->D+D->B
}","false","","","","",""
"48","IsDag","77","eval_input","2020-04-12 09:51:19","inst myInst {
  Node = A+B+C+D+F
  edges = none
}","true","","","","",""
"48","IsDag","78","eval_input","2020-04-12 09:51:32","inst myInst {
  Node = A+B+C+D+F
  edges = A->A
}","false","","","","",""
"48","IsDag","79","eval_input","2020-04-12 09:51:37","inst myInst {
  Node = A+B+C+D+F
  edges = B->B
}","false","","","","",""
"48","IsDag","80","eval_input","2020-04-12 09:51:52","inst myInst {
  Node = A+B+C+D+F
  edges = C->C
}","false","","","","",""
"48","IsDag","81","eval_input","2020-04-12 09:52:17","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->A
}","false","","","","",""
"48","IsDag","82","eval_input","2020-04-12 09:52:21","inst myInst {
  Node = A+B+C+D+F
  edges = A->B
}","true","","","","",""
"48","IsDag","83","eval_input","2020-04-12 09:52:36","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+C->D
}","true","","","","",""
"48","IsDag","84","eval_input","2020-04-12 09:52:51","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+C->D+B->D
}","true","","","","",""
"48","IsDag","85","eval_input","2020-04-12 09:53:03","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+C->D+B->D+A->C
}","true","","","","",""
"48","IsDag","86","eval_input","2020-04-12 09:53:49","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->D+D->C+C->A
}","false","","","","",""
"48","IsDag","87","eval_input","2020-04-12 09:54:07","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->A
}","false","","","","",""
"48","IsDag","88","eval_input","2020-04-12 09:54:14","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->A
}","false","","","","",""
"48","IsDag","89","eval_input","2020-04-12 09:54:40","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+C->B
}","true","","","","",""
"48","IsDag","90","eval_input","2020-04-12 09:54:49","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C
}","true","","","","",""
"48","IsDag","91","eval_input","2020-04-12 09:54:57","inst myInst {
  Node = A+B+C+D+F
  edges = A->B+B->C+C->A
}","false","","","","",""
"48","IsDag","92","quiz_answer","2020-04-12 09:55:39","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"48","IsDag","93","quiz_answer","2020-04-12 09:55:45","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"48","IsDag","94","quiz_answer","2020-04-12 09:55:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"48","IsDag","95","quiz_answer","2020-04-12 09:56:08","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"48","IsDag","96","quiz_answer","2020-04-12 09:56:17","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"48","IsDag","97","quiz_answer","2020-04-12 09:56:24","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"48","IsDag","98","quiz_answer","2020-04-12 09:56:33","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"48","IsDag","99","quiz_answer","2020-04-12 09:56:40","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"48","IsDag","100","final_answer","2020-04-12 09:56:41","","","","","","no cycles",""
"49","IsDag","0","eval_input","2020-04-12 13:25:24","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"49","IsDag","1","eval_input","2020-04-12 13:26:19","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C 
}","true","","","","",""
"49","IsDag","2","eval_input","2020-04-12 13:26:34","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"49","IsDag","3","eval_input","2020-04-12 13:27:18","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"49","IsDag","4","eval_input","2020-04-12 13:28:58","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"49","IsDag","5","eval_input","2020-04-12 13:29:25","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"49","IsDag","6","eval_input","2020-04-12 13:29:47","inst myInst {
  Node = A + B
  edges = A->A
}","false","","","","",""
"49","IsDag","7","eval_input","2020-04-12 13:30:25","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"49","IsDag","8","eval_input","2020-04-12 13:33:23","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
  
}","true","","","","",""
"49","IsDag","9","quiz_answer","2020-04-12 13:34:35","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","IsDag","10","quiz_answer","2020-04-12 13:34:46","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"49","IsDag","11","quiz_answer","2020-04-12 13:34:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"49","IsDag","12","quiz_answer","2020-04-12 13:35:03","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"49","IsDag","13","quiz_answer","2020-04-12 13:35:10","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"49","IsDag","14","quiz_answer","2020-04-12 13:35:17","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"49","IsDag","15","quiz_answer","2020-04-12 13:35:25","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"49","IsDag","16","quiz_answer","2020-04-12 13:35:35","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"49","IsDag","17","final_answer","2020-04-12 13:35:37","","","","","","Acyclic",""
"49","ThreeCycle","18","eval_input","2020-04-12 13:36:03","inst myInst {
  Node = A + B + C
  edges = A->B + C->B
  
}","false","","","","",""
"49","ThreeCycle","19","eval_input","2020-04-12 13:36:48","inst myInst {
  Node = A + B 
  edges = A->B + B->A
  
}","false","","","","",""
"49","ThreeCycle","20","eval_input","2020-04-12 13:37:04","inst myInst {
  Node = A + B + C
  edges = none
  
}","false","","","","",""
"49","ThreeCycle","21","eval_input","2020-04-12 13:37:20","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
  
}","false","","","","",""
"49","ThreeCycle","22","eval_input","2020-04-12 13:37:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
  
}","false","","","","",""
"49","ThreeCycle","23","eval_input","2020-04-12 13:37:27","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
  
}","false","","","","",""
"49","ThreeCycle","24","eval_input","2020-04-12 13:37:35","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
  
}","false","","","","",""
"49","ThreeCycle","25","eval_input","2020-04-12 13:37:52","inst myInst {
  Node = none
  edges = none
  
}","false","","","","",""
"49","ThreeCycle","26","eval_input","2020-04-12 13:37:59","inst myInst {
  Node = A
  edges = none
  
}","false","","","","",""
"49","ThreeCycle","27","eval_input","2020-04-12 13:38:15","inst myInst {
  Node = A
  edges = A->A
  
}","false","","","","",""
"49","ThreeCycle","28","eval_input","2020-04-12 13:38:23","inst myInst {
  Node = A + B
  edges = A->A
  
}","false","","","","",""
"49","ThreeCycle","29","eval_input","2020-04-12 13:38:58","inst myInst {
  Node = A + B
  edges = A->A + A->B + B->A + B->B
  
}","false","","","","",""
"49","ThreeCycle","30","quiz_answer","2020-04-12 13:41:52","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","ThreeCycle","31","quiz_answer","2020-04-12 13:41:56","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"49","ThreeCycle","32","quiz_answer","2020-04-12 13:41:59","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"49","ThreeCycle","33","quiz_answer","2020-04-12 13:42:02","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"49","ThreeCycle","34","quiz_answer","2020-04-12 13:42:06","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","true","false","",""
"49","ThreeCycle","35","eval_input","2020-04-12 13:43:01","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
  
}","true","","","","",""
"49","ThreeCycle","36","eval_input","2020-04-12 13:43:13","inst myInst {
  Node = A + B 
  edges = A->B + B->A
  
}","false","","","","",""
"49","ThreeCycle","37","eval_input","2020-04-12 13:43:36","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  
}","false","","","","",""
"49","ThreeCycle","38","eval_input","2020-04-12 13:44:01","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
  
}","true","","","","",""
"49","ThreeCycle","39","quiz_answer","2020-04-12 13:44:24","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","ThreeCycle","40","quiz_answer","2020-04-12 13:44:29","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"49","ThreeCycle","41","quiz_answer","2020-04-12 13:44:32","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"49","ThreeCycle","42","quiz_answer","2020-04-12 13:44:36","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","false","false","",""
"49","ThreeCycle","43","quiz_answer","2020-04-12 13:44:57","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","ThreeCycle","44","quiz_answer","2020-04-12 13:45:02","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"49","ThreeCycle","45","quiz_answer","2020-04-12 13:45:06","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"49","ThreeCycle","46","quiz_answer","2020-04-12 13:45:12","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"49","ThreeCycle","47","quiz_answer","2020-04-12 13:45:16","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"49","ThreeCycle","48","quiz_answer","2020-04-12 13:45:20","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"49","ThreeCycle","49","quiz_answer","2020-04-12 13:45:25","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"49","ThreeCycle","50","quiz_answer","2020-04-12 13:45:29","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"49","ThreeCycle","51","final_answer","2020-04-12 13:45:30","","","","","","cycle with only 3 nodes in the cycle",""
"49","IsBipartite","52","eval_input","2020-04-12 13:46:28","inst myInst {
  Node = none
  edges = none
  
}","true","","","","",""
"49","IsBipartite","53","eval_input","2020-04-12 13:46:36","inst myInst {
  Node = A
  edges = none
  
}","true","","","","",""
"49","IsBipartite","54","eval_input","2020-04-12 13:46:43","inst myInst {
  Node = A
  edges = A->A
  
}","false","","","","",""
"49","IsBipartite","55","eval_input","2020-04-12 13:46:52","inst myInst {
  Node = A + B
  edges = A->A
  
}","false","","","","",""
"49","IsBipartite","56","eval_input","2020-04-12 13:47:02","inst myInst {
  Node = A + B + C
  edges = none
  
}","true","","","","",""
"49","IsBipartite","57","eval_input","2020-04-12 13:47:21","inst myInst {
  Node = A + B
  edges = A->B + B->A
  
}","true","","","","",""
"49","IsBipartite","58","eval_input","2020-04-12 13:47:33","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
  
}","true","","","","",""
"49","IsBipartite","59","eval_input","2020-04-12 13:47:42","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
  
}","true","","","","",""
"49","IsBipartite","60","eval_input","2020-04-12 13:47:43","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
  
}","true","","","","",""
"49","IsBipartite","61","eval_input","2020-04-12 13:47:47","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
  
}","false","","","","",""
"49","IsBipartite","62","eval_input","2020-04-12 13:48:00","inst myInst {
  Node = A + B + C
  edges = A->B + C->B 
  
}","true","","","","",""
"49","IsBipartite","63","eval_input","2020-04-12 13:48:20","inst myInst {
  Node = A + B 
  edges = A->B + B->B + B->A + A->A 
  
}","false","","","","",""
"49","IsBipartite","64","eval_input","2020-04-12 13:48:36","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A 
  
}","false","","","","",""
"49","IsBipartite","65","eval_input","2020-04-12 13:49:06","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  
}","true","","","","",""
"49","IsBipartite","66","eval_input","2020-04-12 13:49:19","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D 
  
}","true","","","","",""
"49","IsBipartite","67","eval_input","2020-04-12 13:51:24","inst myInst {
  Node = A + B + C 
  edges = A->B + C->B
  
}","true","","","","",""
"49","IsBipartite","68","eval_input","2020-04-12 13:51:36","inst myInst {
  Node = A + B + C 
  edges = A->B + C->B + C->A
  
}","true","","","","",""
"49","IsBipartite","69","eval_input","2020-04-12 13:52:24","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->B + C->A
  
}","true","","","","",""
"49","IsBipartite","70","quiz_answer","2020-04-12 13:53:08","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","IsBipartite","71","quiz_answer","2020-04-12 13:53:14","inst myInst {
      Node = A
      edges = none
    }","false","1","true","false","",""
"49","IsBipartite","72","quiz_answer","2020-04-12 13:53:30","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","IsBipartite","73","quiz_answer","2020-04-12 13:53:35","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"49","IsBipartite","74","quiz_answer","2020-04-12 13:53:40","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"49","IsBipartite","75","quiz_answer","2020-04-12 13:53:53","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"49","IsBipartite","76","eval_input","2020-04-12 13:54:32","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->B + C->A + A->C
  
}","true","","","","",""
"49","IsBipartite","77","eval_input","2020-04-12 13:54:51","inst myInst {
  Node = A + B + C + D
  edges = A->B + C->B + D->B
  
}","true","","","","",""
"49","IsBipartite","78","eval_input","2020-04-12 13:55:14","inst myInst {
  Node = A + B 
  edges = A->B + B->A 
  
}","true","","","","",""
"49","IsBipartite","79","eval_input","2020-04-12 13:55:29","inst myInst {
  Node = A  
  edges = A->A
  
}","false","","","","",""
"49","IsBipartite","80","eval_input","2020-04-12 13:55:38","inst myInst {
  Node = A+B
  edges = A->A
  
}","false","","","","",""
"49","IsBipartite","81","eval_input","2020-04-12 13:56:09","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
  
}","false","","","","",""
"49","IsBipartite","82","eval_input","2020-04-12 13:56:22","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  
}","true","","","","",""
"49","IsBipartite","83","eval_input","2020-04-12 13:56:38","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
  
}","true","","","","",""
"49","IsBipartite","84","quiz_answer","2020-04-12 13:57:48","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","IsBipartite","85","quiz_answer","2020-04-12 13:57:53","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"49","IsBipartite","86","quiz_answer","2020-04-12 13:57:58","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"49","IsBipartite","87","quiz_answer","2020-04-12 13:58:14","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"49","IsBipartite","88","quiz_answer","2020-04-12 13:59:00","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","IsBipartite","89","quiz_answer","2020-04-12 13:59:03","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"49","IsBipartite","90","quiz_answer","2020-04-12 13:59:07","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"49","IsBipartite","91","quiz_answer","2020-04-12 13:59:11","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"49","IsBipartite","92","quiz_answer","2020-04-12 13:59:17","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"49","IsBipartite","93","eval_input","2020-04-12 13:59:49","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
  
}","false","","","","",""
"49","IsBipartite","94","quiz_answer","2020-04-12 14:00:15","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"49","IsBipartite","95","quiz_answer","2020-04-12 14:00:20","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"49","IsBipartite","96","quiz_answer","2020-04-12 14:00:25","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"49","IsBipartite","97","quiz_answer","2020-04-12 14:00:29","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"49","IsBipartite","98","quiz_answer","2020-04-12 14:00:36","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"49","IsBipartite","99","quiz_answer","2020-04-12 14:00:41","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"49","IsBipartite","100","quiz_answer","2020-04-12 14:00:47","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"49","IsBipartite","101","quiz_answer","2020-04-12 14:00:50","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"49","IsBipartite","102","final_answer","2020-04-12 14:00:52","","","","","","There can only be cycles with even number of nodes",""
"50","IsDag","0","eval_input","2020-04-12 16:47:34","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"50","IsDag","1","eval_input","2020-04-12 16:47:44","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"50","IsDag","2","eval_input","2020-04-12 16:47:54","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"50","IsDag","3","eval_input","2020-04-12 16:48:12","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C 
}","true","","","","",""
"50","IsDag","4","eval_input","2020-04-12 16:48:20","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"50","IsDag","5","eval_input","2020-04-12 16:49:12","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"50","IsDag","6","eval_input","2020-04-12 16:49:26","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + A->B
}","true","","","","",""
"50","IsDag","7","eval_input","2020-04-12 16:49:35","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + A->B + A->A
}","false","","","","",""
"50","IsDag","8","eval_input","2020-04-12 16:52:08","inst myInst {
  Node = A
       + B
       + C
  edges = A->C + A->B + A->A
}","false","","","","",""
"50","IsDag","9","eval_input","2020-04-12 16:52:18","inst myInst {
  Node = A
  edges =  A->A
}","false","","","","",""
"50","IsDag","10","quiz_answer","2020-04-12 16:52:42","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"50","IsDag","11","quiz_answer","2020-04-12 16:52:56","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"50","IsDag","12","quiz_answer","2020-04-12 16:53:02","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"50","IsDag","13","quiz_answer","2020-04-12 16:53:34","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","true","false","",""
"50","IsDag","14","eval_input","2020-04-12 16:54:18","inst myInst {
  Node = A + B + C
  edges =  A->B + A->C + B->C
}","true","","","","",""
"50","IsDag","15","quiz_answer","2020-04-12 16:54:53","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"50","IsDag","16","quiz_answer","2020-04-12 16:54:59","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"50","IsDag","17","quiz_answer","2020-04-12 16:55:04","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"50","IsDag","18","quiz_answer","2020-04-12 16:55:07","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"50","IsDag","19","quiz_answer","2020-04-12 16:55:18","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"50","IsDag","20","quiz_answer","2020-04-12 16:55:27","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"50","IsDag","21","quiz_answer","2020-04-12 16:55:37","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"50","IsDag","22","quiz_answer","2020-04-12 16:55:49","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"50","IsDag","23","final_answer","2020-04-12 16:55:50","","","","","","pred Acyclic{
     no edges^ and iden
}",""
"50","IsBipartite","24","eval_input","2020-04-12 16:56:03","inst myInst {
  Node = A + B + C
  edges =  A->B + A->C + B->C
}","true","","","","",""
"50","IsBipartite","25","eval_input","2020-04-12 16:56:15","inst myInst {
  Node = A + B + C
  edges =  none
}","true","","","","",""
"50","IsBipartite","26","eval_input","2020-04-12 16:56:26","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C
}","true","","","","",""
"50","IsBipartite","27","eval_input","2020-04-12 16:56:35","inst myInst {
  Node = A + B + C
  edges =  A->B 
}","true","","","","",""
"50","IsBipartite","28","eval_input","2020-04-12 16:56:46","inst myInst {
  Node = A + B + C
  edges =  A->C + C->A
}","true","","","","",""
"50","IsBipartite","29","eval_input","2020-04-12 16:56:57","inst myInst {
  Node = A + B + C
  edges =  A->A
}","false","","","","",""
"50","IsBipartite","30","eval_input","2020-04-12 16:57:19","inst myInst {
  Node = A + B + C
  edges =  A->A + B->B
}","false","","","","",""
"50","IsBipartite","31","eval_input","2020-04-12 16:57:29","inst myInst {
  Node = A + B + C
  edges =  A->A + B->C + C->A
}","false","","","","",""
"50","IsBipartite","32","quiz_answer","2020-04-12 16:58:25","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"50","IsBipartite","33","quiz_answer","2020-04-12 16:58:30","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"50","IsBipartite","34","quiz_answer","2020-04-12 16:58:34","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"50","IsBipartite","35","quiz_answer","2020-04-12 16:58:39","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"50","IsBipartite","36","quiz_answer","2020-04-12 16:58:42","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"50","IsBipartite","37","eval_input","2020-04-12 16:59:06","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + C->A
}","false","","","","",""
"50","IsBipartite","38","eval_input","2020-04-12 16:59:24","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A
}","true","","","","",""
"50","IsBipartite","39","eval_input","2020-04-12 17:01:03","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A + A->C
}","true","","","","",""
"50","IsBipartite","40","eval_input","2020-04-12 17:01:59","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C + A->C
}","true","","","","",""
"50","IsBipartite","41","eval_input","2020-04-12 17:03:10","inst myInst {
  Node = A + B + C
  edges =  A->B + B->C 
}","true","","","","",""
"50","IsBipartite","42","eval_input","2020-04-12 17:03:25","inst myInst {
  Node = A + B + C
  edges =  A->B + B->A
}","true","","","","",""
"50","IsBipartite","43","eval_input","2020-04-12 17:03:36","inst myInst {
  Node = A + B 
  edges =  A->B + B->A
}","true","","","","",""
"50","IsBipartite","44","quiz_answer","2020-04-12 17:04:44","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"50","IsBipartite","45","quiz_answer","2020-04-12 17:04:48","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"50","IsBipartite","46","quiz_answer","2020-04-12 17:04:57","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"50","IsBipartite","47","quiz_answer","2020-04-12 17:05:20","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"50","IsBipartite","48","quiz_answer","2020-04-12 17:05:26","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"50","IsBipartite","49","quiz_answer","2020-04-12 17:05:33","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"50","IsBipartite","50","quiz_answer","2020-04-12 17:05:39","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"50","IsBipartite","51","final_answer","2020-04-12 17:05:54","","","","","","True if no self loops or cycles greater than 2",""
"50","ThreeCycle","52","eval_input","2020-04-12 17:10:48","inst myInst {
  Node = A + B 
  edges =  A->B + B->A
}","false","","","","",""
"50","ThreeCycle","53","eval_input","2020-04-12 17:10:55","inst myInst {
  Node = A + B 
  edges =  A->B 
}","false","","","","",""
"50","ThreeCycle","54","eval_input","2020-04-12 17:10:59","inst myInst {
  Node = A + B 
  edges =  none
}","false","","","","",""
"50","ThreeCycle","55","eval_input","2020-04-12 17:11:05","inst myInst {
  Node = A + B 
  edges =  A->A
}","false","","","","",""
"50","ThreeCycle","56","eval_input","2020-04-12 17:11:18","inst myInst {
  Node = A + B 
  edges =  A->A + B->B
}","false","","","","",""
"50","ThreeCycle","57","eval_input","2020-04-12 17:11:35","inst myInst {
  Node = A + B 
  edges =  A->A + A->B + B->A + B->B
}","false","","","","",""
"50","ThreeCycle","58","eval_input","2020-04-12 17:12:27","inst myInst {
  Node = A + B 
  edges = B->B
}","false","","","","",""
"50","ThreeCycle","59","eval_input","2020-04-12 17:12:32","inst myInst {
  Node = A + B + C
  edges = B->B
}","false","","","","",""
"50","ThreeCycle","60","eval_input","2020-04-12 17:12:45","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"50","ThreeCycle","61","eval_input","2020-04-12 17:12:56","inst myInst {
  Node = A + B 
  edges = A->B + B->A
}","false","","","","",""
"50","ThreeCycle","62","eval_input","2020-04-12 17:13:13","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"50","ThreeCycle","63","eval_input","2020-04-12 17:13:18","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D 
}","false","","","","",""
"50","ThreeCycle","64","eval_input","2020-04-12 17:13:30","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"50","ThreeCycle","65","eval_input","2020-04-12 17:13:40","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"50","ThreeCycle","66","eval_input","2020-04-12 17:14:08","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A
}","true","","","","",""
"50","ThreeCycle","67","eval_input","2020-04-12 17:14:13","inst myInst {
  Node = A + B + C 
  edges = A->B + B->C + C->A + A->A
}","true","","","","",""
"50","ThreeCycle","68","eval_input","2020-04-12 17:15:14","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->F + F->D
}","true","","","","",""
"50","ThreeCycle","69","quiz_answer","2020-04-12 17:15:27","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"50","ThreeCycle","70","quiz_answer","2020-04-12 17:15:30","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"50","ThreeCycle","71","quiz_answer","2020-04-12 17:15:33","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"50","ThreeCycle","72","quiz_answer","2020-04-12 17:15:37","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"50","ThreeCycle","73","quiz_answer","2020-04-12 17:15:39","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"50","ThreeCycle","74","quiz_answer","2020-04-12 17:15:43","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"50","ThreeCycle","75","quiz_answer","2020-04-12 17:15:47","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"50","ThreeCycle","76","quiz_answer","2020-04-12 17:15:52","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"50","ThreeCycle","77","final_answer","2020-04-12 17:15:54","","","","","","graph contains cycle of size 3",""
"51","ThreeCycle","0","eval_input","2020-04-12 17:38:20","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","false","","","","",""
"51","ThreeCycle","1","eval_input","2020-04-12 17:38:45","inst myInst {
  Node = none
  edges = none
}","false","","","","",""
"51","ThreeCycle","2","eval_input","2020-04-12 17:38:53","inst myInst {
  Node = A
  edges = none
}","false","","","","",""
"51","ThreeCycle","3","eval_input","2020-04-12 17:39:04","inst myInst {
  Node = A + B
  edges = none
}","false","","","","",""
"51","ThreeCycle","4","eval_input","2020-04-12 17:39:28","inst myInst {
  Node = A + B
  edges = A -> B
}","false","","","","",""
"51","ThreeCycle","5","eval_input","2020-04-12 17:39:45","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C
}","false","","","","",""
"51","ThreeCycle","6","eval_input","2020-04-12 17:40:04","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C
}","false","","","","",""
"51","ThreeCycle","7","eval_input","2020-04-12 17:40:17","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","true","","","","",""
"51","ThreeCycle","8","eval_input","2020-04-12 17:40:34","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A + A -> C
}","true","","","","",""
"51","ThreeCycle","9","eval_input","2020-04-12 17:40:53","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> A + A -> C
}","true","","","","",""
"51","ThreeCycle","10","eval_input","2020-04-12 17:41:31","inst myInst {
  Node = A + B + C + D
  edges = A -> A
}","false","","","","",""
"51","ThreeCycle","11","eval_input","2020-04-12 17:41:41","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"51","ThreeCycle","12","eval_input","2020-04-12 17:42:01","inst myInst {
  Node = A + B
  edges = A -> A + A -> B + B -> A
}","false","","","","",""
"51","ThreeCycle","13","eval_input","2020-04-12 17:42:37","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"51","ThreeCycle","14","eval_input","2020-04-12 17:43:06","inst myInst {
  Node = A + B + C
  edges = A -> C + C -> B + B -> A
}","true","","","","",""
"51","ThreeCycle","15","eval_input","2020-04-12 17:43:15","inst myInst {
  Node = A + B + C + D
  edges = A -> C + C -> D + B -> A
}","false","","","","",""
"51","ThreeCycle","16","eval_input","2020-04-12 17:43:28","inst myInst {
  Node = A + B + C + D
  edges = A -> C + C -> D + D -> A + B -> A
}","true","","","","",""
"51","ThreeCycle","17","eval_input","2020-04-12 17:43:40","inst myInst {
  Node = A + B + C + D
  edges = A -> C + C -> D + D -> B + B -> A
}","false","","","","",""
"51","ThreeCycle","18","eval_input","2020-04-12 17:44:24","inst myInst {
  Node = A + B + C + D
  edges = A -> C + C -> D + D -> B + B -> A + A -> B
}","false","","","","",""
"51","ThreeCycle","19","eval_input","2020-04-12 17:44:37","inst myInst {
  Node = A + B + C + D
  edges = A -> C + C -> D + D -> B + B -> A + D -> A
}","true","","","","",""
"51","ThreeCycle","20","quiz_answer","2020-04-12 17:46:40","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"51","ThreeCycle","21","quiz_answer","2020-04-12 17:46:50","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"51","ThreeCycle","22","quiz_answer","2020-04-12 17:46:53","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"51","ThreeCycle","23","quiz_answer","2020-04-12 17:46:58","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"51","ThreeCycle","24","quiz_answer","2020-04-12 17:47:02","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"51","ThreeCycle","25","quiz_answer","2020-04-12 17:47:07","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"51","ThreeCycle","26","quiz_answer","2020-04-12 17:47:12","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"51","ThreeCycle","27","quiz_answer","2020-04-12 17:47:21","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"51","ThreeCycle","28","final_answer","2020-04-12 17:47:25","","","","","","Check whether the graph has a cycle of exactly three elements.",""
"51","IsBipartite","29","eval_input","2020-04-12 17:48:07","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"51","IsBipartite","30","eval_input","2020-04-12 17:48:20","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"51","IsBipartite","31","eval_input","2020-04-12 17:48:32","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"51","IsBipartite","32","eval_input","2020-04-12 17:48:50","inst myInst {
  Node = A + B
  edges = A -> A
}","false","","","","",""
"51","IsBipartite","33","eval_input","2020-04-12 17:48:56","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"51","IsBipartite","34","eval_input","2020-04-12 17:50:22","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","true","","","","",""
"51","IsBipartite","35","eval_input","2020-04-12 17:50:49","inst myInst {
  Node = A + B + C
  edges = A -> B
}","true","","","","",""
"51","IsBipartite","36","eval_input","2020-04-12 17:51:00","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C
}","true","","","","",""
"51","IsBipartite","37","eval_input","2020-04-12 17:51:16","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A
}","false","","","","",""
"51","IsBipartite","38","eval_input","2020-04-12 17:51:57","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + C -> A + A -> C
}","false","","","","",""
"51","IsBipartite","39","eval_input","2020-04-12 17:52:05","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C
}","true","","","","",""
"51","IsBipartite","40","eval_input","2020-04-12 17:52:29","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C + C -> A
}","false","","","","",""
"51","IsBipartite","41","eval_input","2020-04-12 17:53:50","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + A -> C + C -> A
}","false","","","","",""
"51","IsBipartite","42","eval_input","2020-04-12 17:53:58","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + A -> C
}","true","","","","",""
"51","IsBipartite","43","eval_input","2020-04-12 17:54:28","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> A
}","true","","","","",""
"51","IsBipartite","44","eval_input","2020-04-12 18:00:11","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + A -> D
}","true","","","","",""
"51","IsBipartite","45","eval_input","2020-04-12 18:00:21","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + C -> D + D -> B
}","false","","","","",""
"51","IsBipartite","46","eval_input","2020-04-12 18:00:44","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> E + E -> A
}","false","","","","",""
"51","IsBipartite","47","eval_input","2020-04-12 18:00:53","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> A + E -> A
}","true","","","","",""
"51","IsBipartite","48","eval_input","2020-04-12 18:01:09","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> B + E -> A
}","false","","","","",""
"51","IsBipartite","49","eval_input","2020-04-12 18:02:20","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> A + E -> E
}","false","","","","",""
"51","IsBipartite","50","eval_input","2020-04-12 18:02:30","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> A + E -> D
}","true","","","","",""
"51","IsBipartite","51","eval_input","2020-04-12 18:02:58","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> A + D -> E + E -> C
}","false","","","","",""
"51","IsBipartite","52","eval_input","2020-04-12 18:03:36","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + C -> D + D -> A + D -> E + E -> C
  + D -> C + C -> E + E -> D
}","false","","","","",""
"51","IsBipartite","53","eval_input","2020-04-12 18:04:15","inst myInst {
  Node = A + B + C + D + E + F + G
  edges = A -> B + B -> C + C -> D + D -> A + D -> E + F -> F
}","false","","","","",""
"51","IsBipartite","54","eval_input","2020-04-12 18:04:22","inst myInst {
  Node = A + B + C + D + E + F + G
  edges = A -> B + B -> C + C -> D + D -> A + D -> E + F -> G
}","true","","","","",""
"51","IsBipartite","55","eval_input","2020-04-12 18:04:31","inst myInst {
  Node = A + B + C + D + E + F + G
  edges = A -> B + B -> C + C -> D + D -> A + D -> E + F -> G + G -> F
}","true","","","","",""
"51","IsBipartite","56","quiz_answer","2020-04-12 18:05:08","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"51","IsBipartite","57","quiz_answer","2020-04-12 18:05:48","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"51","IsBipartite","58","quiz_answer","2020-04-12 18:05:52","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"51","IsBipartite","59","quiz_answer","2020-04-12 18:05:56","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"51","IsBipartite","60","quiz_answer","2020-04-12 18:06:01","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"51","IsBipartite","61","quiz_answer","2020-04-12 18:06:06","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"51","IsBipartite","62","quiz_answer","2020-04-12 18:06:11","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"51","IsBipartite","63","quiz_answer","2020-04-12 18:06:15","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"51","IsBipartite","64","quiz_answer","2020-04-12 18:06:23","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"51","IsBipartite","65","final_answer","2020-04-12 18:06:25","","","","","","Check if the graph does not contain an odd-cycle.",""
"51","IsDag","66","eval_input","2020-04-12 18:07:10","inst myInst {
  Node = none
  edges = none
}","true","","","","",""
"51","IsDag","67","eval_input","2020-04-12 18:07:31","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"51","IsDag","68","eval_input","2020-04-12 18:07:37","inst myInst {
  Node = A
  edges = A -> A
}","false","","","","",""
"51","IsDag","69","eval_input","2020-04-12 18:07:47","inst myInst {
  Node = A + B
  edges = A -> A
}","false","","","","",""
"51","IsDag","70","eval_input","2020-04-12 18:07:56","inst myInst {
  Node = A + B
  edges = A -> A + B -> B
}","false","","","","",""
"51","IsDag","71","eval_input","2020-04-12 18:08:04","inst myInst {
  Node = A + B
  edges = A -> B
}","true","","","","",""
"51","IsDag","72","eval_input","2020-04-12 18:08:55","inst myInst {
  Node = A + B
  edges = A -> B + B -> A
}","false","","","","",""
"51","IsDag","73","eval_input","2020-04-12 18:09:16","inst myInst {
  Node = A + B
  edges = A -> B + B -> B
}","false","","","","",""
"51","IsDag","74","eval_input","2020-04-12 18:09:23","inst myInst {
  Node = A + B
  edges = A -> B + A -> A
}","false","","","","",""
"51","IsDag","75","eval_input","2020-04-12 18:10:11","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C
}","true","","","","",""
"51","IsDag","76","eval_input","2020-04-12 18:10:26","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C + C -> A
}","false","","","","",""
"51","IsDag","77","eval_input","2020-04-12 18:10:31","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C + C -> B
}","false","","","","",""
"51","IsDag","78","eval_input","2020-04-12 18:10:43","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C + C -> C
}","false","","","","",""
"51","IsDag","79","eval_input","2020-04-12 18:10:53","inst myInst {
  Node = A + B + C
  edges = A -> B + B -> C + A -> C + B -> A
}","false","","","","",""
"51","IsDag","80","eval_input","2020-04-12 18:11:00","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + A -> C
}","true","","","","",""
"51","IsDag","81","eval_input","2020-04-12 18:11:25","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + A -> C + D -> D
}","false","","","","",""
"51","IsDag","82","eval_input","2020-04-12 18:11:32","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + A -> C + D -> A
}","true","","","","",""
"51","IsDag","83","eval_input","2020-04-12 18:11:46","inst myInst {
  Node = A + B + C + D
  edges = A -> B + B -> C + A -> C + D -> A + C -> D
}","false","","","","",""
"51","IsDag","84","eval_input","2020-04-12 18:11:58","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + A -> C + A -> D + C -> D
}","true","","","","",""
"51","IsDag","85","eval_input","2020-04-12 18:12:07","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + A -> C + A -> D + C -> D + A -> E
}","true","","","","",""
"51","IsDag","86","eval_input","2020-04-12 18:12:37","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + A -> C + A -> D + C -> D + D -> B
}","false","","","","",""
"51","IsDag","87","eval_input","2020-04-12 18:12:47","inst myInst {
  Node = A + B + C + D + E
  edges = A -> B + B -> C + A -> C + A -> D + C -> D + D -> B
}","false","","","","",""
"51","IsDag","88","quiz_answer","2020-04-12 18:12:59","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"51","IsDag","89","quiz_answer","2020-04-12 18:13:03","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"51","IsDag","90","quiz_answer","2020-04-12 18:13:07","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"51","IsDag","91","quiz_answer","2020-04-12 18:13:11","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"51","IsDag","92","quiz_answer","2020-04-12 18:13:14","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"51","IsDag","93","quiz_answer","2020-04-12 18:13:22","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"51","IsDag","94","quiz_answer","2020-04-12 18:13:26","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"51","IsDag","95","quiz_answer","2020-04-12 18:13:31","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"51","IsDag","96","final_answer","2020-04-12 18:13:35","","","","","","Check if a graph is acyclic",""
"52","IsDag","0","eval_input","2020-04-12 21:10:13","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
"52","IsDag","1","eval_input","2020-04-12 21:10:31","inst myInst {
  Node = A
       + B
       + C
  edges = A->B
}","true","","","","",""
"52","IsDag","2","eval_input","2020-04-12 21:10:39","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C
}","true","","","","",""
"52","IsDag","3","eval_input","2020-04-12 21:10:43","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->A
}","false","","","","",""
"52","IsDag","4","eval_input","2020-04-12 21:10:59","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + A->C
}","true","","","","",""
"52","IsDag","5","eval_input","2020-04-12 21:11:16","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"52","IsDag","6","eval_input","2020-04-12 21:11:29","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + A->C
}","true","","","","",""
"52","IsDag","7","eval_input","2020-04-12 21:11:46","inst myInst {
  Node = A
       + B
       + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"52","IsDag","8","eval_input","2020-04-12 21:14:00","inst myInst {
  Node = A
       + B
       + C
  edges = A->A
}","false","","","","",""
"52","IsDag","9","eval_input","2020-04-12 21:14:06","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"52","IsDag","10","quiz_answer","2020-04-12 21:14:38","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"52","IsDag","11","quiz_answer","2020-04-12 21:14:47","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"52","IsDag","12","quiz_answer","2020-04-12 21:14:52","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"52","IsDag","13","quiz_answer","2020-04-12 21:15:00","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"52","IsDag","14","quiz_answer","2020-04-12 21:15:07","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"52","IsDag","15","quiz_answer","2020-04-12 21:15:14","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"52","IsDag","16","quiz_answer","2020-04-12 21:15:21","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"52","IsDag","17","quiz_answer","2020-04-12 21:15:28","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"52","IsDag","18","final_answer","2020-04-12 21:15:29","","","","","","It determines if a graph is acyclic.",""
"52","IsBipartite","19","eval_input","2020-04-12 21:15:47","inst myInst {
  Node = A
  edges = A->A
}","false","","","","",""
"52","IsBipartite","20","eval_input","2020-04-12 21:15:53","inst myInst {
  Node = A
  edges = none
}","true","","","","",""
"52","IsBipartite","21","eval_input","2020-04-12 21:16:03","inst myInst {
  Node = A + B
  edges = A->B
}","true","","","","",""
"52","IsBipartite","22","eval_input","2020-04-12 21:16:10","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"52","IsBipartite","23","eval_input","2020-04-12 21:16:12","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"52","IsBipartite","24","eval_input","2020-04-12 21:16:13","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","true","","","","",""
"52","IsBipartite","25","eval_input","2020-04-12 21:16:18","inst myInst {
  Node = A + B
  edges = A->B + B->A + B->B
}","false","","","","",""
"52","IsBipartite","26","eval_input","2020-04-12 21:16:34","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->B + B->C
}","false","","","","",""
"52","IsBipartite","27","eval_input","2020-04-12 21:16:40","inst myInst {
  Node = A + B + C
  edges = A->B + B->A + B->C
}","true","","","","",""
"52","IsBipartite","28","quiz_answer","2020-04-12 21:17:16","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"52","IsBipartite","29","quiz_answer","2020-04-12 21:17:21","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"52","IsBipartite","30","quiz_answer","2020-04-12 21:17:25","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"52","IsBipartite","31","quiz_answer","2020-04-12 21:17:28","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"52","IsBipartite","32","quiz_answer","2020-04-12 21:17:33","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","false","false","",""
"52","IsBipartite","33","eval_input","2020-04-12 21:17:58","inst myInst {
  Node = A + B + C
  edges = A->B + B->A 
}","true","","","","",""
"52","IsBipartite","34","eval_input","2020-04-12 21:18:14","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","true","","","","",""
"52","IsBipartite","35","eval_input","2020-04-12 21:18:21","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","false","","","","",""
"52","IsBipartite","36","eval_input","2020-04-12 21:18:50","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B
}","true","","","","",""
"52","IsBipartite","37","eval_input","2020-04-12 21:18:59","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->B + B->A
}","true","","","","",""
"52","IsBipartite","38","quiz_answer","2020-04-12 21:23:17","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"52","IsBipartite","39","quiz_answer","2020-04-12 21:23:20","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"52","IsBipartite","40","quiz_answer","2020-04-12 21:23:25","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"52","IsBipartite","41","quiz_answer","2020-04-12 21:23:30","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"52","IsBipartite","42","quiz_answer","2020-04-12 21:23:34","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"52","IsBipartite","43","quiz_answer","2020-04-12 21:23:38","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"52","IsBipartite","44","quiz_answer","2020-04-12 21:23:44","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","true","false","",""
"52","IsBipartite","45","eval_input","2020-04-12 21:24:58","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E
}","true","","","","",""
"52","IsBipartite","46","eval_input","2020-04-12 21:25:05","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"52","IsBipartite","47","eval_input","2020-04-12 21:25:11","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"52","IsBipartite","48","eval_input","2020-04-12 21:25:17","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->D + D->A
}","true","","","","",""
"52","IsBipartite","49","quiz_answer","2020-04-12 21:25:53","inst myInst {
      Node = A 
      edges = A->A
    }","true","0","false","false","",""
"52","IsBipartite","50","quiz_answer","2020-04-12 21:26:13","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"52","IsBipartite","51","quiz_answer","2020-04-12 21:26:16","inst myInst {
      Node = A
      edges = none
    }","true","1","true","true","",""
"52","IsBipartite","52","quiz_answer","2020-04-12 21:26:20","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","true","2","true","true","",""
"52","IsBipartite","53","quiz_answer","2020-04-12 21:26:27","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","true","3","true","true","",""
"52","IsBipartite","54","quiz_answer","2020-04-12 21:26:32","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","false","4","false","true","",""
"52","IsBipartite","55","quiz_answer","2020-04-12 21:26:36","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","true","5","true","true","",""
"52","IsBipartite","56","quiz_answer","2020-04-12 21:26:45","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","true","6","true","true","",""
"52","IsBipartite","57","quiz_answer","2020-04-12 21:26:48","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"52","IsBipartite","58","final_answer","2020-04-12 21:26:49","","","","","","outputs false if there is a cycle with an odd number of nodes",""
"52","ThreeCycle","59","eval_input","2020-04-12 21:27:13","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"52","ThreeCycle","60","eval_input","2020-04-12 21:27:23","inst myInst {
  Node = A + B + C + D 
  edges = A->B + B->C + C->D
}","false","","","","",""
"52","ThreeCycle","61","eval_input","2020-04-12 21:27:29","inst myInst {
  Node = A + B + C + D 
  edges = A->B 
}","false","","","","",""
"52","ThreeCycle","62","eval_input","2020-04-12 21:27:33","inst myInst {
  Node = A + B + C + D 
  edges = none
}","false","","","","",""
"52","ThreeCycle","63","eval_input","2020-04-12 21:27:40","inst myInst {
  Node = A + B + C + D 
  edges = A->A
}","false","","","","",""
"52","ThreeCycle","64","eval_input","2020-04-12 21:27:51","inst myInst {
  Node = A 
  edges = A->A
}","false","","","","",""
"52","ThreeCycle","65","eval_input","2020-04-12 21:28:00","inst myInst {
  Node = A + B
  edges = A->B + B->A
}","false","","","","",""
"52","ThreeCycle","66","eval_input","2020-04-12 21:28:06","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A
}","false","","","","",""
"52","ThreeCycle","67","eval_input","2020-04-12 21:28:11","inst myInst {
  Node = A + B
  edges = A->B + B->A + A->A + B->B
}","false","","","","",""
"52","ThreeCycle","68","eval_input","2020-04-12 21:28:16","inst myInst {
  Node = A + B
  edges = A->A + B->B
}","false","","","","",""
"52","ThreeCycle","69","eval_input","2020-04-12 21:28:26","inst myInst {
  Node = A + B
  edges = A->A + A->B
}","false","","","","",""
"52","ThreeCycle","70","eval_input","2020-04-12 21:28:44","inst myInst {
  Node = A + B + C
  edges = A->B + B->C
}","false","","","","",""
"52","ThreeCycle","71","eval_input","2020-04-12 21:28:49","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + A->C
}","false","","","","",""
"52","ThreeCycle","72","eval_input","2020-04-12 21:28:59","inst myInst {
  Node = A + B + C
  edges = A->B + B->C + C->A
}","true","","","","",""
"52","ThreeCycle","73","eval_input","2020-04-12 21:29:10","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->A
}","true","","","","",""
"52","ThreeCycle","74","eval_input","2020-04-12 21:29:16","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D
}","false","","","","",""
"52","ThreeCycle","75","eval_input","2020-04-12 21:29:21","inst myInst {
  Node = A + B + C + D
  edges = A->B + B->C + C->D + D->A
}","false","","","","",""
"52","ThreeCycle","76","eval_input","2020-04-12 21:29:31","inst myInst {
  Node = A + B + C + D + E
  edges = A->B + B->C + C->D + D->E + E->A
}","false","","","","",""
"52","ThreeCycle","77","eval_input","2020-04-12 21:29:54","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A
}","true","","","","",""
"52","ThreeCycle","78","eval_input","2020-04-12 21:30:00","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E
}","true","","","","",""
"52","ThreeCycle","79","eval_input","2020-04-12 21:30:06","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + D->E + E->F
}","true","","","","",""
"52","ThreeCycle","80","eval_input","2020-04-12 21:30:17","inst myInst {
  Node = A + B + C + D + E + F
  edges = A->B + B->C + C->A + A->D
}","true","","","","",""
"52","ThreeCycle","81","quiz_answer","2020-04-12 21:30:43","inst myInst {
      Node = A 
      edges = A->A
    }","false","0","false","true","",""
"52","ThreeCycle","82","quiz_answer","2020-04-12 21:30:48","inst myInst {
      Node = A
      edges = none
    }","false","1","false","true","",""
"52","ThreeCycle","83","quiz_answer","2020-04-12 21:30:51","inst myInst {
      Node = A + B
      edges = A->B + B->A
    }","false","2","false","true","",""
"52","ThreeCycle","84","quiz_answer","2020-04-12 21:30:54","inst myInst {
      Node = A + B + C
      edges = A->B + A->C + B->C
    }","false","3","false","true","",""
"52","ThreeCycle","85","quiz_answer","2020-04-12 21:30:58","inst myInst {
      Node = A + B + C
      edges = A->B + B->C + C->A
    }","true","4","true","true","",""
"52","ThreeCycle","86","quiz_answer","2020-04-12 21:31:01","inst myInst {
      Node = A + B + C
      edges = A->B + C->B
    }","false","5","false","true","",""
"52","ThreeCycle","87","quiz_answer","2020-04-12 21:31:05","inst myInst {
      Node = A + B + C + D
      edges = A->B + B->C + C->D + D->A
    }","false","6","false","true","",""
"52","ThreeCycle","88","quiz_answer","2020-04-12 21:31:08","inst myInst {
      Node = A + B + C + D + E
      edges = A->B + B->C + C->D + D->E + E->A
    }","false","7","false","true","",""
"52","ThreeCycle","89","final_answer","2020-04-12 21:31:09","","","","","","outputs true if there is a 3-node cycle in the graph",""
"53","IsBipartite","0","eval_input","2020-04-13 01:15:31","inst myInst {
  Node = A
       + B
       + C
  edges = none
}","true","","","","",""
